{"version":3,"sources":["/source/node_modules/browser-pack/_prelude.js","/source/node_modules/es6-promise/dist/es6-promise.js","/source/node_modules/events/events.js","/source/node_modules/process/browser.js","/source/node_modules/webworkify/index.js","/source/src/config.js","/source/src/core/features.js","/source/src/core/media-info.js","/source/src/core/media-segment-info.js","/source/src/core/mse-controller.js","/source/src/core/mse-events.js","/source/src/core/transmuxer.js","/source/src/core/transmuxing-controller.js","/source/src/core/transmuxing-events.js","/source/src/core/transmuxing-worker.js","/source/src/demux/amf-parser.js","/source/src/demux/demux-errors.js","/source/src/demux/exp-golomb.js","/source/src/demux/flv-demuxer.js","/source/src/demux/sps-parser.js","/source/src/flv.js","/source/src/io/fetch-stream-loader.js","/source/src/io/io-controller.js","/source/src/io/loader.js","/source/src/io/param-seek-handler.js","/source/src/io/range-seek-handler.js","/source/src/io/speed-sampler.js","/source/src/io/websocket-loader.js","/source/src/io/xhr-moz-chunked-loader.js","/source/src/io/xhr-msstream-loader.js","/source/src/io/xhr-range-loader.js","/source/src/player/flv-player.js","/source/src/player/native-player.js","/source/src/player/player-errors.js","/source/src/player/player-events.js","/source/src/remux/aac-silent.js","/source/src/remux/mp4-generator.js","/source/src/remux/mp4-remuxer.js","/source/src/utils/browser.js","/source/src/utils/bsearch.js","/source/src/utils/exception.js","/source/src/utils/logger.js","/source/src/utils/logging-control.js","/source/src/utils/polyfill.js","/source/src/utils/utf8-conv.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","process","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","lib$es6$promise$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","setTimeout","lib$es6$promise$asap$$len","callback","lib$es6$promise$asap$$queue","arg","undefined","lib$es6$promise$asap$$attemptVertx","vertx","runOnLoop","runOnContext","lib$es6$promise$then$$then","onFulfillment","onRejection","parent","this","child","constructor","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$PROMISE_ID","lib$es6$promise$$internal$$makePromise","state","_state","arguments","lib$es6$promise$$internal$$invokeCallback","_result","lib$es6$promise$$internal$$subscribe","lib$es6$promise$promise$resolve$$resolve","object","Constructor","promise","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$selfFulfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","then","error","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","value","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","lib$es6$promise$$internal$$FULFILLED","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$then$$default","resolve","lib$es6$promise$promise$resolve$$default","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","subscribers","settled","detail","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$$internal$$nextId","lib$es6$promise$$internal$$id","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","reject","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","lib$es6$promise$enumerator$$Enumerator","input","_instanceConstructor","_input","_remaining","Array","_enumerate","lib$es6$promise$enumerator$$validationError","lib$es6$promise$polyfill$$polyfill","local","global","self","Function","P","Promise","Object","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","Math","random","substring","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$reject$$default","all","race","_setScheduler","_setAsap","_asap","catch","_eachEntry","entry","c","_settledAt","_willSettleAt","enumerator","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","define","EventEmitter","_events","_maxListeners","isFunction","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","emit","type","er","handler","len","args","listeners","err","context","slice","apply","addListener","listener","m","newListener","push","warned","console","trace","on","once","g","removeListener","fired","list","position","splice","removeAllListeners","key","ret","listenerCount","evlistener","emitter","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","Item","array","noop","title","browser","env","argv","version","versions","off","binding","name","cwd","chdir","dir","umask","bundleFn","sources","cache","stringify","JSON","fn","options","wkey","cacheKeys","keys","exp","default","floor","pow","wcache","skey","scache","src","map","join","URL","webkitURL","mozURL","msURL","blob","Blob","bare","workerUrl","createObjectURL","worker","Worker","objectURL","createDefaultConfig","assign","defaultConfig","enableWorker","enableStashBuffer","stashInitialSize","isLive","lazyLoad","lazyLoadMaxDuration","deferLoadAfterSourceOpen","statisticsInfoReportInterval","accurateSeek","seekType","seekParamStart","seekParamEnd","customSeekHandler","_ioController","_config","Features","MediaSource","isTypeSupported","ioctl","_ioController2","loaderType","destroy","mimeType","videoElement","createElement","canPlay","canPlayType","features","mseFlvPlayback","mseLiveFlvPlayback","networkStreamIO","networkLoaderName","nativeMP4H264Playback","nativeWebmVP8Playback","nativeWebmVP9Playback","supportMSEH264Playback","supportNetworkStreamIO","getNetworkLoaderTypeName","supportNativeMediaPlayback","MediaInfo","_classCallCheck","duration","hasAudio","hasVideo","audioCodec","videoCodec","audioDataRate","videoDataRate","audioSampleRate","audioChannelCount","width","height","fps","profile","level","chromaFormat","sarNum","sarDen","metadata","segments","segmentCount","hasKeyframesIndex","keyframesIndex","audioInfoComplete","videoInfoComplete","milliseconds","table","keyframeIdx","_search","times","index","fileposition","filepositions","idx","last","mid","lbound","ubound","SampleInfo","dts","pts","originalDts","isSync","isSyncPoint","MediaSegmentInfo","beginDts","endDts","beginPts","endPts","originalBeginDts","originalEndDts","syncPoints","firstSample","lastSample","sampleInfo","IDRSampleList","_list","clear","MediaSegmentInfoList","_type","_lastAppendLocation","_searchNearestSegmentBefore","mediaSegmentInfo","msi","lastAppendIdx","insertIdx","segment","getLastSegmentBefore","segmentIdx","_logger","_browser","_mseEvents","_mediaSegmentInfo","_exception","MSEController","TAG","_emitter","_events2","onSourceOpen","_onSourceOpen","bind","onSourceEnded","_onSourceEnded","onSourceClose","_onSourceClose","onSourceBufferError","_onSourceBufferError","onSourceBufferUpdateEnd","_onSourceBufferUpdateEnd","_mediaSource","_mediaSourceObjectURL","_mediaElement","_isBufferFull","_hasPendingEos","_pendingSourceBufferInit","_mimeTypes","video","audio","_sourceBuffers","_lastInitSegments","_pendingSegments","_pendingRemoveRanges","_idrList","detachMediaElement","event","mediaElement","IllegalStateException","ms","addEventListener","ps","sb","readyState","removeSourceBuffer","removeEventListener","endOfStream","_logger2","message","removeAttribute","revokeObjectURL","initSegment","deferred","is","container","codec","firstInitSegment","v","addSourceBuffer","_mseEvents2","ERROR","msg","updating","_doAppendSegments","mediaSegment","_hasPendingRemoveRanges","seconds","abort","buffered","start","end","_doRemoveRanges","_browser2","safari","lastInitSegment","_hasPendingSegments","getLastSyncPointBeforeDts","ranges","range","shift","remove","pendingSegments","appendBuffer","hasOwnProperty","appendArray","info","unshift","BUFFER_FULL","pendings","appendInitSegment","SOURCE_OPEN","prr","UPDATE_END","MSEEvents","_loggingControl","_transmuxingController","_transmuxingEvents","_transmuxingWorker","_mediaInfo","Transmuxer","mediaDataSource","config","work","_worker","_transmuxingWorker2","_workerDestroying","_onWorkerMessage","cmd","param","onLoggingConfigChanged","_onLoggingConfigChanged","_loggingControl2","registerListener","getConfig","_controller","_transmuxingController2","ctl","_transmuxingEvents2","IO_ERROR","_onIOError","DEMUX_ERROR","_onDemuxError","INIT_SEGMENT","_onInitSegment","MEDIA_SEGMENT","_onMediaSegment","LOADING_COMPLETE","_onLoadingComplete","RECOVERED_EARLY_EOF","_onRecoveredEarlyEof","MEDIA_INFO","_onMediaInfo","STATISTICS_INFO","_onStatisticsInfo","RECOMMEND_SEEKPOINT","_onRecommendSeekpoint","stop","seek","pause","resume","_this","_this2","_this3","_this4","mediaInfo","_this5","statisticsInfo","_this6","_this7","_this8","_this9","terminate","setPrototypeOf","_mediaInfo2","_flvDemuxer","_mp4Remuxer","_demuxErrors","TransmuxingController","filesize","url","cors","withCredentials","_mediaDataSource","_currentSegmentIndex","totalDuration","forEach","timestampBase","_demuxer","_remuxer","_ioctl","_pendingSeekTime","_pendingResolveSeekPoint","_loadSegment","segmentIndex","optionalFrom","dataSource","onError","_onIOException","onSeeked","_onIOSeeked","onComplete","_onIOComplete","onRecoveredEarlyEof","_onIORecoveredEarlyEof","bindDataSource","onDataArrival","_onInitChunkArrival","open","_internalAbort","isWorking","isPaused","isSeekable","targetSegmentIndex","_searchSegmentIndexContains","segmentInfo","keyframe","getNearestKeyframe","targetSegmentInfo","insertDiscontinuity","_keyframe","byteStart","probeData","_flvDemuxer2","probe","match","_mp4Remuxer2","mds","overridedDuration","_onDemuxException","onMediaInfo","onInitSegment","_onRemuxerInitSegmentArrival","onMediaSegment","_onRemuxerMediaSegmentArrival","_demuxErrors2","FORMAT_UNSUPPORTED","consumed","exportInfo","target","extraData","nextSegmentIndex","seekpoint","_reportStatisticsInfo","currentUrl","speed","currentSpeed","currentSegmentIndex","totalSegmentCount","TransmuxingEvents","_polyfill","TransmuxingWorker","obj","onLoadingComplete","onStatisticsInfo","statInfo","onIOError","onDemuxError","onRecommendSeekpoint","controller","_polyfill2","install","applyConfig","_utf8Conv","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","AMF","arrayBuffer","dataOffset","dataSize","parseValue","size","parseString","isObjectEnd","objectEnd","parseObject","getUint16","str","_utf8Conv2","Uint8Array","getUint32","timestamp","getFloat64","localTimeOffset","getInt16","Date","offset","getUint8","b","amfstr","terminal","amfobj","_terminal","amfvar","parseVariable","_marker","strictArrayLength","val","date","parseDate","amfLongStr","w","DemuxErrors","OK","FORMAT_ERROR","CODEC_UNSUPPORTED","ExpGolomb","uint8array","_buffer","_buffer_index","_total_bytes","byteLength","_total_bits","_current_word","_current_word_bits_left","buffer_bytes_left","bytes_read","min","word","set","subarray","buffer","bits","InvalidArgumentException","result","bits_need_left","_fillCurrentWord","bits_read_next","result2","readBits","zero_count","_skipLeadingZero","leading_zeros","readUEG","ReadBig32","_amfParser","_bsearch","_spsParser","FlvDemuxer","_onError","_onTrackMetadata","_onDataAvailable","_dataOffset","_firstParse","_dispatch","_hasAudio","hasAudioTrack","_hasVideo","hasVideoTrack","_audioInitialMetadataDispatched","_videoInitialMetadataDispatched","_metadata","_audioMetadata","_videoMetadata","_naluLengthSize","_timestampBase","_timescale","_duration","_durationOverrided","_referenceFrameRate","fixed","fps_num","fps_den","_videoTrack","id","sequenceNumber","samples","nbNalu","_audioTrack","_littleEndian","loader","parseChunks","chunk","prevTagSize0","_v","tagType","ts2","ts1","ts0","ts3","streamId","_parseAudioData","_parseVideoData","_parseScriptData","prevTagSize","_isInitialMetadataDispatched","scriptData","_amfParser2","parseScriptData","onMetaData","audiodatarate","videodatarate","framerate","_typeof","keyframes","_parseKeyframesIndex","isComplete","time","tagTimestamp","meta","track","timescale","soundSpec","soundFormat","soundRate","soundRateIndex","soundType","channelCount","refSampleDuration","aacData","_parseAACAudioData","packetType","misc","samplingRate","mi","originalAudioObjectType","aacSample","unit","_parseAACAudioSpecificConfig","mpegSamplingRates","audioObjectType","audioExtensionObjectType","samplingIndex","extensionSamplingIndex","samplingFrequence","channelConfig","userAgent","navigator","toLowerCase","indexOf","tagPosition","spec","frameType","codecId","_parseAVCVideoPacket","cts","_parseAVCDecoderConfigurationRecord","_parseAVCVideoData","avcc","avcProfile","spsCount","sps","_spsParser2","parseSPS","present_size","profile_string","level_string","bitDepth","bit_depth","chroma_format","sarRatio","sar_ratio","frameRate","frame_rate","codecArray","codecString","j","h","codec_size","chroma_format_string","ppsCount","_i","_len","units","lengthSize","naluSize","unitType","avcSample","isKeyframe","base","mismatch","_expGolomb","SPSParser","src_length","dst","dst_idx","rbsp","_ebsp2rbsp","gb","_expGolomb2","readByte","profile_idc","level_idc","getProfileString","getLevelString","chroma_format_idc","chroma_format_table","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","frame_cropping_flag","sar_width","sar_height","fps_fixed","vui_parameters_present_flag","aspect_ratio_idc","sar_w_table","sar_h_table","num_units_in_tick","time_scale","sarScale","crop_unit_x","crop_unit_y","sub_wc","sub_hc","codec_width","codec_height","present_width","ceil","getChromaFormatString","count","last_scale","next_scale","delta_scale","toFixed","chroma","createPlayer","optionalConfig","_flvPlayer2","_nativePlayer2","isSupported","_features2","getFeatureList","_features","_flvPlayer","_nativePlayer","_playerEvents","_playerErrors","flvjs","Events","_playerEvents2","ErrorTypes","ErrorDetails","FlvPlayer","NativePlayer","LoggingControl","_loader","FetchStreamLoader","seekHandler","_possibleConstructorReturn","getPrototypeOf","_seekHandler","_needStash","_requestAbort","_contentLength","_receivedLength","fetch","ReadableStream","msedge","_get","_dataSource","_range","seekConfig","headers","Headers","configHeaders","append","params","method","mode","credentials","_status","LoaderStatus","kConnecting","res","kIdle","ok","status","lengthHeader","get","parseInt","_onContentLengthKnown","_pump","body","getReader","kError","RuntimeException","statusText","LoaderErrors","HTTP_STATUS_CODE_INVALID","EXCEPTION","reader","read","done","kComplete","cancel","kBuffering","from","_onDataArrival","_onComplete","EARLY_EOF","_speedSampler","_fetchStreamLoader","_xhrMozChunkedLoader","_xhrMsstreamLoader","_xhrRangeLoader","_websocketLoader","_rangeSeekHandler","_paramSeekHandler","IOController","_extraData","_stashInitialSize","_stashUsed","_stashSize","_bufferSize","_stashBuffer","_stashByteStart","_enableStash","_loaderClass","_isWebSocketURL","test","_refTotalLength","_totalLength","_fullRequestFlag","_currentRange","_speed","_speedNormalized","_speedSampler2","_speedNormalizeList","_isEarlyEofReconnecting","_paused","_resumeFrom","_onSeeked","_selectSeekHandler","_selectLoader","_createLoader","_rangeSeekHandler2","paramStart","paramEnd","_paramSeekHandler2","_websocketLoader2","_fetchStreamLoader2","_xhrMozChunkedLoader2","_xhrRangeLoader2","needStashBuffer","onContentLengthKnown","_onLoaderChunkArrival","_onLoaderComplete","_onLoaderError","to","reset","bytes","_internalSeek","dropUnconsumed","_flushStashBuffer","requestRange","expectedBytes","bufferNewSize","newBuffer","stashOldArray","stashNewArray","normalized","stashSizeKB","bufferSize","_expandBuffer","chunks","contentLength","receivedLength","addBytes","KBps","lastSecondKBps","_normalizeSpeed","_adjustStashSize","_stashArray2","_stashArray3","_consumed2","_dispatchChunks","_remainArray","_consumed3","_remain","remain","stashArray","_stashArray","_consumed","remainArray","UNRECOVERABLE_EARLY_EOF","nextFrom","CONNECTING_TIMEOUT","BaseLoader","typeName","NotImplementedException","ParamSeekHandler","_startName","_endName","baseUrl","needAnd","RangeSeekHandler","SpeedSampler","_firstCheckpoint","_lastCheckpoint","_intervalBytes","_totalBytes","_lastSecondBytes","performance","now","_now","durationSeconds","currentKBps","WebSocketLoader","_ws","WebSocket","ws","binaryType","onopen","_onWebSocketOpen","onclose","_onWebSocketClose","_onWebSocketMessage","onerror","_onWebSocketError","close","MozChunkedLoader","_xhr","xhr","XMLHttpRequest","responseType","onreadystatechange","onprogress","onloadend","_onReadyStateChange","_onProgress","_onLoadEnd","_onXhrError","setRequestHeader","send","total","response","loaded","MSStreamLoader","_reader","_totalRange","_bufferLimit","_lastTimeBufferSize","_isReconnecting","MSStream","MSStreamReader","onload","_internalOpen","isSubrange","_msrOnProgress","_msrOnLoad","_msrOnError","_xhrOnReadyStateChange","_xhrOnError","getResponseHeader","msstream","readAsArrayBuffer","bigbuffer","_doReconnectIfNeeded","RangeLoader","_chunkSizeKBList","_currentChunkSizeKB","_currentSpeed","_currentSpeedNormalized","_waitForTotalLength","_totalLengthReceived","_currentRequestRange","_lastTimeLoaded","_openSubRange","chunkSize","_onLoad","openNextRange","delta","reportComplete","_transmuxer","_mseController","onvLoadedMetadata","_onvLoadedMetadata","onvSeeking","_onvSeeking","_requestSetTime","_seekpointRecord","_statisticsReporter","_progressChecker","_hasStatisticsListener","_msectl","_mseSourceOpened","_hasPendingLoad","_statisticsInfo","chromeNeedIDRFix","chrome","major","build","_alwaysSeekKeyframe","msie","clearInterval","unload","setInterval","_mseController2","_onmseUpdateEnd","_onmseBufferFull","load","MEDIA_ERROR","MEDIA_MSE_ERROR","attachMediaElement","currentTime","_transmuxer2","appendMediaSegment","_suspendTransmuxer","NETWORK_ERROR","_fillStatisticsInfo","play","playerType","hasQualityInfo","decoded","dropped","getVideoPlaybackQuality","quality","totalVideoFrames","droppedVideoFrames","webkitDecodedFrameCount","webkitDroppedFrameCount","decodedFrames","droppedFrames","currentRangeStart","currentRangeEnd","_checkProgressAndResume","needResume","directSeek","_isTimepointBuffered","directSeekBegin","directSeekBeginTime","videoBeginTime","idr","recordTime","_checkAndApplyUnbufferedSeekpoint","seekPoint","volume","muted","preload","videoWidth","videoHeight","OTHER_ERROR","NETWORK_EXCEPTION","NETWORK_STATUS_CODE_INVALID","NETWORK_TIMEOUT","NETWORK_UNRECOVERABLE_EARLY_EOF","MEDIA_FORMAT_ERROR","MEDIA_FORMAT_UNSUPPORTED","MEDIA_CODEC_UNSUPPORTED","PlayerEvents","AAC","MP4","types","avc1","avcC","btrt","dinf","dref","esds","ftyp","hdlr","mdat","mdhd","mdia","mfhd","minf","moof","moov","mp4a","mvex","mvhd","sdtp","stbl","stco","stsc","stsd","stsz","stts","tfdt","tfhd","traf","trak","trun","trex","tkhd","vmhd","smhd","charCodeAt","constants","FTYP","STSD_PREFIX","STTS","STSC","STCO","STSZ","HDLR_VIDEO","HDLR_AUDIO","DREF","SMHD","VMHD","datas","arrayCount","box","trackId","xmhd","sampleRate","configSize","baseMediaDecodeTime","sampleCount","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","init","_mp4Generator","_aacSilent","MP4Remuxer","_isLive","_dtsBase","_dtsBaseInited","_audioDtsBase","Infinity","_videoDtsBase","_audioNextDts","_videoNextDts","_audioMeta","_videoMeta","_audioSegmentInfoList","_videoSegmentInfoList","_forceFirstIDR","_fillSilentAfterSeek","producer","onDataAvailable","remux","onTrackMetadata","_onTrackMetadataReceived","audioTrack","videoTrack","_calculateDtsBase","_remuxVideo","_remuxAudio","metabox","_mp4Generator2","generateInitSegment","dtsCorrection","firstDts","lastDts","remuxSilentFrame","silentFrameDuration","mdatbox","mp4Samples","isEmpty","getLastSampleBefore","distance","expectedDts","videoSegment","frame","_generateSilentAudio","_mp4Sample","mp4Sample","_unit","sampleDuration","nextDts","latest","moofbox","_mergeBoxes","frameDuration","_aacSilent2","getSilentFrame","firstPts","lastPts","sampleSize","syncPoint","appendSyncPoint","detect","ua","exec","platform_match","matched","majorVersion","platform","versionArray","split","string","minor","opr","webkit","rv","iemobile","edge","opera","android","Browser","BSearch","compare","low","high","cmp","less","search","_message","Log","tag","ENABLE_ERROR","FORCE_GLOBAL_TAG","GLOBAL_TAG","warn","log","ENABLE_INFO","ENABLE_WARN","ENABLE_DEBUG","debug","ENABLE_VERBOSE","globalTag","forceGlobalTag","enableVerbose","enableDebug","enableInfo","enableWarn","enableError","enable","_notifyChange","Polyfill","proto","__proto__","output","source","checkContinuation","checkLength","decodeUTF8","out","String","fromCharCode","ucs4","_ucs","_ucs2"],"mappings":"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","file":"flv.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.2.1\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n    function lib$es6$promise$then$$then(onFulfillment, onRejection) {\n      var parent = this;\n\n      var child = new this.constructor(lib$es6$promise$$internal$$noop);\n\n      if (child[lib$es6$promise$$internal$$PROMISE_ID] === undefined) {\n        lib$es6$promise$$internal$$makePromise(child);\n      }\n\n      var state = parent._state;\n\n      if (state) {\n        var callback = arguments[state - 1];\n        lib$es6$promise$asap$$asap(function(){\n          lib$es6$promise$$internal$$invokeCallback(state, child, callback, parent._result);\n        });\n      } else {\n        lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n      }\n\n      return child;\n    }\n    var lib$es6$promise$then$$default = lib$es6$promise$then$$then;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    var lib$es6$promise$$internal$$PROMISE_ID = Math.random().toString(36).substring(16);\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n      if (maybeThenable.constructor === promise.constructor &&\n          then === lib$es6$promise$then$$default &&\n          constructor.resolve === lib$es6$promise$promise$resolve$$default) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    var lib$es6$promise$$internal$$id = 0;\n    function lib$es6$promise$$internal$$nextId() {\n      return lib$es6$promise$$internal$$id++;\n    }\n\n    function lib$es6$promise$$internal$$makePromise(promise) {\n      promise[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$id++;\n      promise._state = undefined;\n      promise._result = undefined;\n      promise._subscribers = [];\n    }\n\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        return new Constructor(function(resolve, reject) {\n          reject(new TypeError('You must pass an array to race.'));\n        });\n      } else {\n        return new Constructor(function(resolve, reject) {\n          var length = entries.length;\n          for (var i = 0; i < length; i++) {\n            Constructor.resolve(entries[i]).then(resolve, reject);\n          }\n        });\n      }\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$nextId();\n      this._result = this._state = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();\n        this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: lib$es6$promise$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!this.promise[lib$es6$promise$$internal$$PROMISE_ID]) {\n        lib$es6$promise$$internal$$makePromise(this.promise);\n      }\n\n      if (lib$es6$promise$utils$$isArray(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._result = new Array(this.length);\n\n        if (this.length === 0) {\n          lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(this.promise, lib$es6$promise$enumerator$$validationError());\n      }\n    }\n\n    function lib$es6$promise$enumerator$$validationError() {\n      return new Error('Array Methods must be provided an Array');\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var input   = this._input;\n\n      for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve = c.resolve;\n\n      if (resolve === lib$es6$promise$promise$resolve$$default) {\n        var then = lib$es6$promise$$internal$$getThen(entry);\n\n        if (then === lib$es6$promise$then$$default &&\n            entry._state !== lib$es6$promise$$internal$$PENDING) {\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof then !== 'function') {\n          this._remaining--;\n          this._result[i] = entry;\n        } else if (c === lib$es6$promise$promise$$default) {\n          var promise = new c(lib$es6$promise$$internal$$noop);\n          lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n        }\n      } else {\n        this._willSettleAt(resolve(entry), i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        this._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = value;\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n    try {\n        cachedSetTimeout = setTimeout;\n    } catch (e) {\n        cachedSetTimeout = function () {\n            throw new Error('setTimeout is not defined');\n        }\n    }\n    try {\n        cachedClearTimeout = clearTimeout;\n    } catch (e) {\n        cachedClearTimeout = function () {\n            throw new Error('clearTimeout is not defined');\n        }\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp && exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            Function(['require','module','exports'], '(' + fn + ')(self)'),\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        Function(['require'], (\n            // try to call default if defined to also support babel esmodule\n            // exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);'\n        )),\n        scache\n    ];\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(sources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    var blob = new Blob([src], { type: 'text/javascript' });\n    if (options && options.bare) { return blob; }\n    var workerUrl = URL.createObjectURL(blob);\n    var worker = new Worker(workerUrl);\n    worker.objectURL = workerUrl;\n    return worker;\n};\n","export const defaultConfig = {\n    enableWorker: false,\n    enableStashBuffer: true,\n    stashInitialSize: undefined,\n\n    isLive: false,\n\n    lazyLoad: true,\n    lazyLoadMaxDuration: 3 * 60,\n    deferLoadAfterSourceOpen: true,\n\n    statisticsInfoReportInterval: 600,\n\n    accurateSeek: false,\n    seekType: 'range',  // [range, param, custom]\n    seekParamStart: 'bstart',\n    seekParamEnd: 'bend',\n    customSeekHandler: undefined\n};\n\nexport function createDefaultConfig() {\n    return Object.assign({}, defaultConfig);\n}","import IOController from '../io/io-controller.js';\nimport {createDefaultConfig} from '../config.js';\n\nclass Features {\n\n    static supportMSEH264Playback() {\n        return window.MediaSource &&\n               window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n    }\n\n    static supportNetworkStreamIO() {\n        let ioctl = new IOController({}, createDefaultConfig());\n        let loaderType = ioctl.loaderType;\n        ioctl.destroy();\n        return loaderType == 'fetch-stream-loader' || loaderType == 'xhr-moz-chunked-loader';\n    }\n\n    static getNetworkLoaderTypeName() {\n        let ioctl = new IOController({}, createDefaultConfig());\n        let loaderType = ioctl.loaderType;\n        ioctl.destroy();\n        return loaderType;\n    }\n\n    static supportNativeMediaPlayback(mimeType) {\n        if (Features.videoElement == undefined) {\n            Features.videoElement = window.document.createElement('video');\n        }\n        let canPlay = Features.videoElement.canPlayType(mimeType);\n        return canPlay === 'probably' || canPlay == 'maybe';\n    }\n\n    static getFeatureList() {\n        let features = {\n            mseFlvPlayback: false,\n            mseLiveFlvPlayback: false,\n            networkStreamIO: false,\n            networkLoaderName: '',\n            nativeMP4H264Playback: false,\n            nativeWebmVP8Playback: false,\n            nativeWebmVP9Playback: false\n        };\n\n        features.mseFlvPlayback = Features.supportMSEH264Playback();\n        features.networkStreamIO = Features.supportNetworkStreamIO();\n        features.networkLoaderName = Features.getNetworkLoaderTypeName();\n        features.mseLiveFlvPlayback = features.mseFlvPlayback && features.networkStreamIO;\n        features.nativeMP4H264Playback = Features.supportNativeMediaPlayback('video/mp4; codecs=\"avc1.42001E, mp4a.40.2\"');\n        features.nativeWebmVP8Playback = Features.supportNativeMediaPlayback('video/webm; codecs=\"vp8.0, vorbis\"');\n        features.nativeWebmVP9Playback = Features.supportNativeMediaPlayback('video/webm; codecs=\"vp9\"');\n\n        return features;\n    }\n\n}\n\nexport default Features;","class MediaInfo {\n\n    constructor() {\n        this.mimeType = null;\n        this.duration = null;\n\n        this.hasAudio = null;\n        this.hasVideo = null;\n        this.audioCodec = null;\n        this.videoCodec = null;\n        this.audioDataRate = null;\n        this.videoDataRate = null;\n\n        this.audioSampleRate = null;\n        this.audioChannelCount = null;\n\n        this.width = null;\n        this.height = null;\n        this.fps = null;\n        this.profile = null;\n        this.level = null;\n        this.chromaFormat = null;\n        this.sarNum = null;\n        this.sarDen = null;\n\n        this.metadata = null;\n        this.segments = null;  // MediaInfo[]\n        this.segmentCount = null;\n        this.hasKeyframesIndex = null;\n        this.keyframesIndex = null;\n    }\n\n    isComplete() {\n        let audioInfoComplete = (this.hasAudio === false) ||\n                                (this.hasAudio === true &&\n                                 this.audioCodec != null &&\n                                 this.audioSampleRate != null &&\n                                 this.audioChannelCount != null);\n\n        let videoInfoComplete = (this.hasVideo === false) ||\n                                (this.hasVideo === true &&\n                                 this.videoCodec != null &&\n                                 this.width != null &&\n                                 this.height != null &&\n                                 this.fps != null &&\n                                 this.profile != null &&\n                                 this.level != null &&\n                                 this.chromaFormat != null &&\n                                 this.sarNum != null &&\n                                 this.sarDen != null);\n\n        // keyframesIndex may not be present\n        return this.mimeType != null &&\n               this.duration != null &&\n               this.metadata != null &&\n               this.hasKeyframesIndex != null &&\n               audioInfoComplete &&\n               videoInfoComplete;\n    }\n\n    isSeekable() {\n        return this.hasKeyframesIndex === true;\n    }\n\n    getNearestKeyframe(milliseconds) {\n        if (this.keyframesIndex == null) {\n            return null;\n        }\n\n        let table = this.keyframesIndex;\n        let keyframeIdx = this._search(table.times, milliseconds);\n\n        return {\n            index: keyframeIdx,\n            milliseconds: table.times[keyframeIdx],\n            fileposition: table.filepositions[keyframeIdx]\n        };\n    }\n\n    _search(list, value) {\n        let idx = 0;\n\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (value < list[0]) {\n            idx = 0;\n            lbound = ubound + 1;  // skip search\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (value >= list[mid] && value < list[mid + 1])) {\n                idx = mid;\n                break;\n            } else if (list[mid] < value) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n\n        return idx;\n    }\n\n}\n\nexport default MediaInfo;","// Represents an media sample (audio / video)\nexport class SampleInfo {\n\n    constructor(dts, pts, duration, originalDts, isSync) {\n        this.dts = dts;\n        this.pts = pts;\n        this.duration = duration;\n        this.originalDts = originalDts;\n        this.isSyncPoint = isSync;\n        this.fileposition = null;\n    }\n\n}\n\n// Media Segment concept is defined in Media Source Extensions spec.\n// Particularly in ISO BMFF format, an Media Segment contains a moof box followed by a mdat box.\nexport class MediaSegmentInfo {\n\n    constructor() {\n        this.beginDts = 0;\n        this.endDts = 0;\n        this.beginPts = 0;\n        this.endPts = 0;\n        this.originalBeginDts = 0;\n        this.originalEndDts = 0;\n        this.syncPoints = [];     // SampleInfo[n], for video IDR frames only\n        this.firstSample = null;  // SampleInfo\n        this.lastSample = null;   // SampleInfo\n    }\n\n    appendSyncPoint(sampleInfo) {  // also called Random Access Point\n        sampleInfo.isSyncPoint = true;\n        this.syncPoints.push(sampleInfo);\n    }\n\n}\n\n// Ordered list for recording video IDR frames, sorted by originalDts\nexport class IDRSampleList {\n\n    constructor() {\n        this._list = [];\n    }\n\n    clear() {\n        this._list = [];\n    }\n\n    appendArray(syncPoints) {\n        let list = this._list;\n\n        if (syncPoints.length === 0) {\n            return;\n        }\n\n        if (list.length > 0 && syncPoints[0].originalDts < list[list.length - 1].originalDts) {\n            this.clear();\n        }\n\n        Array.prototype.push.apply(list, syncPoints);\n    }\n\n    getLastSyncPointBeforeDts(dts) {\n        if (this._list.length == 0) {\n            return null;\n        }\n\n        let list = this._list;\n        let idx = 0;\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (dts < list[0].dts) {\n            idx = 0;\n            lbound = ubound + 1;\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (dts >= list[mid].dts && dts < list[mid + 1].dts)) {\n                idx = mid;\n                break;\n            } else if (list[mid].dts < dts) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n        return this._list[idx];\n    }\n\n}\n\n// Data structure for recording information of media segments in single track.\nexport class MediaSegmentInfoList {\n\n    constructor(type) {\n        this._type = type;\n        this._list = [];\n        this._lastAppendLocation = -1;  // cached last insert location\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get length() {\n        return this._list.length;\n    }\n\n    isEmpty() {\n        return this._list.length === 0;\n    }\n\n    clear() {\n        this._list = [];\n        this._lastAppendLocation = -1;\n    }\n\n    _searchNearestSegmentBefore(originalBeginDts) {\n        let list = this._list;\n        if (list.length === 0) {\n            return -2;\n        }\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        let idx = 0;\n\n        if (originalBeginDts < list[0].originalBeginDts) {\n            idx = -1;\n            return idx;\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (originalBeginDts > list[mid].lastSample.originalDts &&\n                                (originalBeginDts < list[mid + 1].originalBeginDts))) {\n                idx = mid;\n                break;\n            } else if (list[mid].originalBeginDts < originalBeginDts) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n        return idx;\n    }\n\n    _searchNearestSegmentAfter(originalBeginDts) {\n        return this._searchNearestSegmentBefore(originalBeginDts) + 1;\n    }\n\n    append(mediaSegmentInfo) {\n        let list = this._list;\n        let msi = mediaSegmentInfo;\n        let lastAppendIdx = this._lastAppendLocation;\n        let insertIdx = 0;\n\n        if (lastAppendIdx !== -1 && lastAppendIdx < list.length &&\n                                    msi.originalBeginDts >= list[lastAppendIdx].lastSample.originalDts &&\n                                    ((lastAppendIdx === list.length - 1) ||\n                                    (lastAppendIdx < list.length - 1 &&\n                                    msi.originalBeginDts < list[lastAppendIdx + 1].originalBeginDts))) {\n            insertIdx = lastAppendIdx + 1;  // use cached location idx\n        } else {\n            if (list.length > 0) {\n                insertIdx = this._searchNearestSegmentBefore(msi.originalBeginDts) + 1;\n            }\n        }\n\n        this._lastAppendLocation = insertIdx;\n        this._list.splice(insertIdx, 0, msi);\n    }\n\n    removeSegmentsAfter(originalDts) {\n        let list = this._list;\n        if (list.length === 0) {\n            return;\n        }\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        let idx = 0;\n\n        if (originalDts < list[0].originalBeginDts) {\n            idx = 0;\n            lbound = ubound + 1;\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last) {  // no segments need to be remove\n                return;\n            } else if (list[mid].lastSample.originalDts < originalDts && originalDts <= list[mid + 1].originalBeginDts) {\n                idx = mid + 1;\n                break;\n            } else if (list[mid].originalBeginDts <= originalDts && originalDts < list[mid].originalEndDts) {\n                idx = mid;\n                break;\n            } else if (originalDts > list[mid].lastSample.originalDts) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n\n        this._list.splice(idx, this._list.length - idx);\n    }\n\n    getLastSegmentBefore(originalBeginDts) {\n        let idx = this._searchNearestSegmentBefore(originalBeginDts);\n        if (idx >= 0) {\n            return this._list[idx];\n        } else {  // -1\n            return null;\n        }\n    }\n\n    getLastSampleBefore(originalBeginDts) {\n        let segment = this.getLastSegmentBefore(originalBeginDts);\n        if (segment != null) {\n            return segment.lastSample;\n        } else {\n            return null;\n        }\n    }\n\n    getLastSyncPointBefore(originalBeginDts) {\n        let segmentIdx = this._searchNearestSegmentBefore(originalBeginDts);\n        let syncPoints = this._list[segmentIdx].syncPoints;\n        while (syncPoints.length === 0 && segmentIdx > 0) {\n            segmentIdx--;\n            syncPoints = this._list[segmentIdx].syncPoints;\n        }\n        if (syncPoints.length > 0) {\n            return syncPoints[syncPoints.length - 1];\n        } else {\n            return null;\n        }\n    }\n\n}","import EventEmitter from 'events';\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport MSEEvents from './mse-events.js';\nimport {SampleInfo, IDRSampleList} from './media-segment-info.js';\nimport {IllegalStateException} from '../utils/exception.js';\n\n// Media Source Extensions controller\nclass MSEController {\n\n    constructor() {\n        this.TAG = this.constructor.name;\n\n        this._emitter = new EventEmitter();\n\n        this.e = {\n            onSourceOpen: this._onSourceOpen.bind(this),\n            onSourceEnded: this._onSourceEnded.bind(this),\n            onSourceClose: this._onSourceClose.bind(this),\n            onSourceBufferError: this._onSourceBufferError.bind(this),\n            onSourceBufferUpdateEnd: this._onSourceBufferUpdateEnd.bind(this)\n        };\n\n        this._mediaSource = null;\n        this._mediaSourceObjectURL = null;\n        this._mediaElement = null;\n\n        this._isBufferFull = false;\n        this._hasPendingEos = false;\n\n        this._pendingSourceBufferInit = [];\n        this._mimeTypes = {\n            video: null,\n            audio: null\n        };\n        this._sourceBuffers = {\n            video: null,\n            audio: null\n        };\n        this._lastInitSegments = {\n            video: null,\n            audio: null\n        };\n        this._pendingSegments = {\n            video: [],\n            audio: []\n        };\n        this._pendingRemoveRanges = {\n            video: [],\n            audio: []\n        };\n        this._idrList = new IDRSampleList();\n    }\n\n    destroy() {\n        if (this._mediaElement || this._mediaSource) {\n            this.detachMediaElement();\n        }\n        this.e = null;\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    attachMediaElement(mediaElement) {\n        if (this._mediaSource) {\n            throw new IllegalStateException('MediaSource has been attached to an HTMLMediaElement!');\n        }\n        let ms = this._mediaSource = new window.MediaSource();\n        ms.addEventListener('sourceopen', this.e.onSourceOpen);\n        ms.addEventListener('sourceended', this.e.onSourceEnded);\n        ms.addEventListener('sourceclose', this.e.onSourceClose);\n\n        this._mediaElement = mediaElement;\n        this._mediaSourceObjectURL = window.URL.createObjectURL(this._mediaSource);\n        mediaElement.src = this._mediaSourceObjectURL;\n    }\n\n    detachMediaElement() {\n        if (this._mediaSource) {\n            let ms = this._mediaSource;\n            for (let type in this._sourceBuffers) {\n                // pending segments should be discard\n                let ps = this._pendingSegments[type];\n                ps.splice(0, ps.length);\n                this._pendingSegments[type] = null;\n                this._pendingRemoveRanges[type] = null;\n                this._lastInitSegments[type] = null;\n\n                // remove all sourcebuffers\n                let sb = this._sourceBuffers[type];\n                if (sb) {\n                    if (ms.readyState !== 'closed') {\n                        ms.removeSourceBuffer(sb);\n                        sb.removeEventListener('error', this.e.onSourceBufferError);\n                        sb.removeEventListener('updateend', this.e.onSourceBufferUpdateEnd);\n                    }\n                    this._mimeTypes[type] = null;\n                    this._sourceBuffers[type] = null;\n                }\n            }\n            if (ms.readyState === 'open') {\n                try {\n                    ms.endOfStream();\n                } catch (error) {\n                    Log.e(this.TAG, error.message);\n                }\n            }\n            ms.removeEventListener('sourceopen', this.e.onSourceOpen);\n            ms.removeEventListener('sourceended', this.e.onSourceEnded);\n            ms.removeEventListener('sourceclose', this.e.onSourceClose);\n            this._pendingSourceBufferInit = [];\n            this._isBufferFull = false;\n            this._idrList.clear();\n            this._mediaSource = null;\n        }\n\n        if (this._mediaElement) {\n            this._mediaElement.src = '';\n            this._mediaElement.removeAttribute('src');\n            this._mediaElement = null;\n        }\n        if (this._mediaSourceObjectURL) {\n            window.URL.revokeObjectURL(this._mediaSourceObjectURL);\n            this._mediaSourceObjectURL = null;\n        }\n    }\n\n    appendInitSegment(initSegment, deferred) {\n        if (!this._mediaSource || this._mediaSource.readyState !== 'open') {\n            // sourcebuffer creation requires mediaSource.readyState === 'open'\n            // so we defer the sourcebuffer creation, until sourceopen event triggered\n            this._pendingSourceBufferInit.push(initSegment);\n            // make sure that this InitSegment is in the front of pending segments queue\n            this._pendingSegments[initSegment.type].push(initSegment);\n            return;\n        }\n\n        let is = initSegment;\n        let mimeType = `${is.container};codecs=${is.codec}`;\n        let firstInitSegment = false;\n\n        Log.v(this.TAG, 'Received Initialization Segment, mimeType: ' + mimeType);\n        this._lastInitSegments[is.type] = is;\n\n        if (mimeType !== this._mimeTypes[is.type]) {\n            if (!this._mimeTypes[is.type]) {  // empty, first chance create sourcebuffer\n                firstInitSegment = true;\n                try {\n                    let sb = this._sourceBuffers[is.type] = this._mediaSource.addSourceBuffer(mimeType);\n                    sb.addEventListener('error', this.e.onSourceBufferError);\n                    sb.addEventListener('updateend', this.e.onSourceBufferUpdateEnd);\n                } catch (error) {\n                    Log.e(this.TAG, error.message);\n                    this._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});\n                    return;\n                }\n            } else {\n                Log.v(this.TAG, `Notice: ${is.type} mimeType changed, origin: ${this._mimeTypes[is.type]}, target: ${mimeType}`);\n            }\n            this._mimeTypes[is.type] = mimeType;\n        }\n\n        if (!deferred) {\n            // deferred means this InitSegment has been pushed to pendingSegments queue\n            this._pendingSegments[is.type].push(is);\n        }\n        if (!firstInitSegment) {  // append immediately only if init segment in subsequence\n            if (this._sourceBuffers[is.type] && !this._sourceBuffers[is.type].updating) {\n                this._doAppendSegments();\n            }\n        }\n    }\n\n    appendMediaSegment(mediaSegment) {\n        let ms = mediaSegment;\n        this._pendingSegments[ms.type].push(ms);\n\n        let sb = this._sourceBuffers[ms.type];\n        if (sb && !sb.updating && !this._hasPendingRemoveRanges()) {\n            this._doAppendSegments();\n        }\n    }\n\n    seek(seconds) {\n        // remove all appended buffers\n        for (let type in this._sourceBuffers) {\n            if (!this._sourceBuffers[type]) {\n                continue;\n            }\n\n            // abort current buffer append algorithm\n            let sb = this._sourceBuffers[type];\n            if (this._mediaSource.readyState === 'open') {\n                try {\n                    // If range removal algorithm is running, InvalidStateError will be throwed\n                    // Ignore it.\n                    sb.abort();\n                } catch (error) {\n                    Log.e(this.TAG, error.message);\n                }\n            }\n\n            // IDRList should be clear\n            this._idrList.clear();\n\n            // pending segments should be discard\n            let ps = this._pendingSegments[type];\n            ps.splice(0, ps.length);\n\n            if (this._mediaSource.readyState === 'closed') {\n                // Parent MediaSource object has been detached from HTMLMediaElement\n                continue;\n            }\n\n            // record ranges to be remove from SourceBuffer\n            for (let i = 0; i < sb.buffered.length; i++) {\n                let start = sb.buffered.start(i);\n                let end = sb.buffered.end(i);\n                this._pendingRemoveRanges[type].push({start, end});\n            }\n\n            // if sb is not updating, let's remove ranges now!\n            if (!sb.updating) {\n                this._doRemoveRanges();\n            }\n\n            // Safari 10 may get InvalidStateError in the later appendBuffer() after SourceBuffer.remove() call\n            // Internal parser's state may be invalid at this time. Re-append last InitSegment to workaround.\n            // Related issue: https://bugs.webkit.org/show_bug.cgi?id=159230\n            if (Browser.safari) {\n                let lastInitSegment = this._lastInitSegments[type];\n                if (lastInitSegment) {\n                    this._pendingSegments[type].push(lastInitSegment);\n                    if (!sb.updating) {\n                        this._doAppendSegments();\n                    }\n                }\n            }\n        }\n    }\n\n    endOfStream() {\n        let ms = this._mediaSource;\n        let sb = this._sourceBuffers;\n        if (!ms || ms.readyState !== 'open') {\n            if (ms && ms.readyState === 'closed' && this._hasPendingSegments()) {\n                // If MediaSource hasn't turned into open state, and there're pending segments\n                // Mark pending endOfStream, defer call until all pending segments appended complete\n                this._hasPendingEos = true;\n            }\n            return;\n        }\n        if (sb.video && sb.video.updating || sb.audio && sb.audio.updating) {\n            // If any sourcebuffer is updating, defer endOfStream operation\n            // See _onSourceBufferUpdateEnd()\n            this._hasPendingEos = true;\n        } else {\n            this._hasPendingEos = false;\n            // Notify media data loading complete\n            // This is helpful for correcting total duration to match last media segment\n            // Otherwise MediaElement's ended event may not be triggered\n            ms.endOfStream();\n        }\n    }\n\n    getNearestKeyframe(dts) {\n        return this._idrList.getLastSyncPointBeforeDts(dts);\n    }\n\n    _doRemoveRanges() {\n        for (let type in this._pendingRemoveRanges) {\n            if (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {\n                continue;\n            }\n            let sb = this._sourceBuffers[type];\n            let ranges = this._pendingRemoveRanges[type];\n            while (ranges.length && !sb.updating) {\n                let range = ranges.shift();\n                sb.remove(range.start, range.end);\n            }\n        }\n    }\n\n    _doAppendSegments() {\n        let pendingSegments = this._pendingSegments;\n\n        for (let type in pendingSegments) {\n            if (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {\n                continue;\n            }\n            if (pendingSegments[type].length > 0) {\n                let segment = pendingSegments[type].shift();\n                try {\n                    this._sourceBuffers[type].appendBuffer(segment.data);\n                    this._isBufferFull = false;\n                    if (type === 'video' && segment.hasOwnProperty('info')) {\n                        this._idrList.appendArray(segment.info.syncPoints);\n                    }\n                } catch (error) {\n                    this._pendingSegments[type].unshift(segment);\n                    if (error.code === 22) {  // QuotaExceededError\n                        /* Notice that FireFox may not throw QuotaExceededError if SourceBuffer is full\n                         * Currently we can only do lazy-load to avoid SourceBuffer become scattered.\n                         * SourceBuffer eviction policy may be changed in future version of FireFox.\n                         *\n                         * Related issues:\n                         * https://bugzilla.mozilla.org/show_bug.cgi?id=1279885\n                         * https://bugzilla.mozilla.org/show_bug.cgi?id=1280023\n                         */\n\n                        // report buffer full, abort network IO\n                        if (!this._isBufferFull) {\n                            this._emitter.emit(MSEEvents.BUFFER_FULL);\n                        }\n                        this._isBufferFull = true;\n                    } else {\n                        Log.e(this.TAG, error.message);\n                        this._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});\n                    }\n                }\n            }\n        }\n    }\n\n    _onSourceOpen() {\n        Log.v(this.TAG, 'MediaSource onSourceOpen');\n        this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);\n        // deferred sourcebuffer creation / initialization\n        if (this._pendingSourceBufferInit.length > 0) {\n            let pendings = this._pendingSourceBufferInit;\n            while (pendings.length) {\n                let segment = pendings.shift();\n                this.appendInitSegment(segment, true);\n            }\n        }\n        // there may be some pending media segments, append them\n        if (this._hasPendingSegments()) {\n            this._doAppendSegments();\n        }\n        this._emitter.emit(MSEEvents.SOURCE_OPEN);\n    }\n\n    _onSourceEnded() {\n        // fired on endOfStream\n        Log.v(this.TAG, 'MediaSource onSourceEnded');\n    }\n\n    _onSourceClose() {\n        // fired on detaching from media element\n        Log.v(this.TAG, 'MediaSource onSourceClose');\n        if (this._mediaSource && this.e != null) {\n            this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);\n            this._mediaSource.removeEventListener('sourceended', this.e.onSourceEnded);\n            this._mediaSource.removeEventListener('sourceclose', this.e.onSourceClose);\n        }\n    }\n\n    _hasPendingSegments() {\n        let ps = this._pendingSegments;\n        return ps.video.length > 0 || ps.audio.length > 0;\n    }\n\n    _hasPendingRemoveRanges() {\n        let prr = this._pendingRemoveRanges;\n        return prr.video.length > 0 || prr.audio.length > 0;\n    }\n\n    _onSourceBufferUpdateEnd() {\n        if (this._hasPendingRemoveRanges()) {\n            this._doRemoveRanges();\n        } else if (this._hasPendingSegments()) {\n            this._doAppendSegments();\n        } else if (this._hasPendingEos) {\n            this.endOfStream();\n        }\n        this._emitter.emit(MSEEvents.UPDATE_END);\n    }\n\n    _onSourceBufferError(e) {\n        Log.e(this.TAG, `SourceBuffer Error: ${e}`);\n        // this error might not always be fatal, just ignore it\n    }\n\n}\n\nexport default MSEController;","const MSEEvents = {\n    ERROR: 'error',\n    SOURCE_OPEN: 'source_open',\n    UPDATE_END: 'update_end',\n    BUFFER_FULL: 'buffer_full'\n};\n\nexport default MSEEvents;","import EventEmitter from 'events';\nimport Log from '../utils/logger.js';\nimport LoggingControl from '../utils/logging-control.js';\nimport TransmuxingController from './transmuxing-controller.js';\nimport TransmuxingEvents from './transmuxing-events.js';\nimport TransmuxingWorker from './transmuxing-worker.js';\nimport MediaInfo from './media-info.js';\n\nclass Transmuxer {\n\n    constructor(mediaDataSource, config) {\n        this.TAG = this.constructor.name;\n        this._emitter = new EventEmitter();\n\n        if (config.enableWorker && typeof (Worker) !== 'undefined') {\n            try {\n                let work = require('webworkify');\n                this._worker = work(TransmuxingWorker);\n                this._workerDestroying = false;\n                this._worker.addEventListener('message', this._onWorkerMessage.bind(this));\n                this._worker.postMessage({cmd: 'init', param: [mediaDataSource, config]});\n                this.e = {\n                    onLoggingConfigChanged: this._onLoggingConfigChanged.bind(this)\n                };\n                LoggingControl.registerListener(this.e.onLoggingConfigChanged);\n                this._worker.postMessage({cmd: 'logging_config', param: LoggingControl.getConfig()});\n            } catch (error) {\n                Log.e(this.TAG, 'Error while initialize transmuxing worker, fallback to inline transmuxing');\n                this._worker = null;\n                this._controller = new TransmuxingController(mediaDataSource, config);\n            }\n        } else {\n            this._controller = new TransmuxingController(mediaDataSource, config);\n        }\n\n        if (this._controller) {\n            let ctl = this._controller;\n            ctl.on(TransmuxingEvents.IO_ERROR, this._onIOError.bind(this));\n            ctl.on(TransmuxingEvents.DEMUX_ERROR, this._onDemuxError.bind(this));\n            ctl.on(TransmuxingEvents.INIT_SEGMENT, this._onInitSegment.bind(this));\n            ctl.on(TransmuxingEvents.MEDIA_SEGMENT, this._onMediaSegment.bind(this));\n            ctl.on(TransmuxingEvents.LOADING_COMPLETE, this._onLoadingComplete.bind(this));\n            ctl.on(TransmuxingEvents.RECOVERED_EARLY_EOF, this._onRecoveredEarlyEof.bind(this));\n            ctl.on(TransmuxingEvents.MEDIA_INFO, this._onMediaInfo.bind(this));\n            ctl.on(TransmuxingEvents.STATISTICS_INFO, this._onStatisticsInfo.bind(this));\n            ctl.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, this._onRecommendSeekpoint.bind(this));\n        }\n    }\n\n    destroy() {\n        if (this._worker) {\n            if (!this._workerDestroying) {\n                this._workerDestroying = true;\n                this._worker.postMessage({cmd: 'destroy'});\n                LoggingControl.removeListener(this.e.onLoggingConfigChanged);\n                this.e = null;\n            }\n        } else {\n            this._controller.destroy();\n            this._controller = null;\n        }\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    hasWorker() {\n        return this._worker != null;\n    }\n\n    open() {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'start'});\n        } else {\n            this._controller.start();\n        }\n    }\n\n    close() {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'stop'});\n        } else {\n            this._controller.stop();\n        }\n    }\n\n    seek(milliseconds) {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'seek', param: milliseconds});\n        } else {\n            this._controller.seek(milliseconds);\n        }\n    }\n\n    pause() {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'pause'});\n        } else {\n            this._controller.pause();\n        }\n    }\n\n    resume() {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'resume'});\n        } else {\n            this._controller.resume();\n        }\n    }\n\n    _onInitSegment(type, initSegment) {\n        // do async invoke\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.INIT_SEGMENT, type, initSegment);\n        });\n    }\n\n    _onMediaSegment(type, mediaSegment) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.MEDIA_SEGMENT, type, mediaSegment);\n        });\n    }\n\n    _onLoadingComplete() {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.LOADING_COMPLETE);\n        });\n    }\n\n    _onRecoveredEarlyEof() {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.RECOVERED_EARLY_EOF);\n        });\n    }\n\n    _onMediaInfo(mediaInfo) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.MEDIA_INFO, mediaInfo);\n        });\n    }\n\n    _onStatisticsInfo(statisticsInfo) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.STATISTICS_INFO, statisticsInfo);\n        });\n    }\n\n    _onIOError(type, info) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.IO_ERROR, type, info);\n        });\n    }\n\n    _onDemuxError(type, info) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, type, info);\n        });\n    }\n\n    _onRecommendSeekpoint(milliseconds) {\n        Promise.resolve().then(() => {\n            this._emitter.emit(TransmuxingEvents.RECOMMEND_SEEKPOINT, milliseconds);\n        });\n    }\n\n    _onLoggingConfigChanged(config) {\n        if (this._worker) {\n            this._worker.postMessage({cmd: 'logging_config', param: config});\n        }\n    }\n\n    _onWorkerMessage(e) {\n        let message = e.data;\n        let data = message.data;\n\n        if (message.msg === 'destroyed' || this._workerDestroying) {\n            this._workerDestroying = false;\n            this._worker.terminate();\n            this._worker = null;\n            return;\n        }\n\n        switch (message.msg) {\n            case TransmuxingEvents.INIT_SEGMENT:\n            case TransmuxingEvents.MEDIA_SEGMENT:\n                this._emitter.emit(message.msg, data.type, data.data);\n                break;\n            case TransmuxingEvents.LOADING_COMPLETE:\n            case TransmuxingEvents.RECOVERED_EARLY_EOF:\n                this._emitter.emit(message.msg);\n                break;\n            case TransmuxingEvents.MEDIA_INFO:\n                Object.setPrototypeOf(data, MediaInfo.prototype);\n                this._emitter.emit(message.msg, data);\n                break;\n            case TransmuxingEvents.STATISTICS_INFO:\n                this._emitter.emit(message.msg, data);\n                break;\n            case TransmuxingEvents.IO_ERROR:\n            case TransmuxingEvents.DEMUX_ERROR:\n                this._emitter.emit(message.msg, data.type, data.info);\n                break;\n            case TransmuxingEvents.RECOMMEND_SEEKPOINT:\n                this._emitter.emit(message.msg, data);\n                break;\n            default:\n                break;\n        }\n    }\n\n}\n\nexport default Transmuxer;","import EventEmitter from 'events';\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport MediaInfo from './media-info.js';\nimport FlvDemuxer from '../demux/flv-demuxer.js';\nimport MP4Remuxer from '../remux/mp4-remuxer.js';\nimport DemuxErrors from '../demux/demux-errors.js';\nimport IOController from '../io/io-controller.js';\nimport TransmuxingEvents from './transmuxing-events.js';\nimport {LoaderStatus, LoaderErrors} from '../io/loader.js';\n\n// Transmuxing (IO, Demuxing, Remuxing) controller, with multipart support\nclass TransmuxingController {\n\n    constructor(mediaDataSource, config) {\n        this.TAG = this.constructor.name;\n        this._emitter = new EventEmitter();\n\n        this._config = config;\n\n        // treat single part media as multipart media, which has only one segment\n        if (!mediaDataSource.segments) {\n            mediaDataSource.segments = [{\n                duration: mediaDataSource.duration,\n                filesize: mediaDataSource.filesize,\n                url: mediaDataSource.url\n            }];\n        }\n\n        // fill in default IO params if not exists\n        if (typeof mediaDataSource.cors !== 'boolean') {\n            mediaDataSource.cors = true;\n        }\n        if (typeof mediaDataSource.withCredentials !== 'boolean') {\n            mediaDataSource.withCredentials = false;\n        }\n\n        this._mediaDataSource = mediaDataSource;\n        this._currentSegmentIndex = 0;\n        let totalDuration = 0;\n\n        this._mediaDataSource.segments.forEach((segment) => {\n            // timestampBase for each segment, and calculate total duration\n            segment.timestampBase = totalDuration;\n            totalDuration += segment.duration;\n            // params needed by IOController\n            segment.cors = mediaDataSource.cors;\n            segment.withCredentials = mediaDataSource.withCredentials;\n        });\n\n        if (!isNaN(totalDuration) && this._mediaDataSource.duration !== totalDuration) {\n            this._mediaDataSource.duration = totalDuration;\n        }\n\n        this._mediaInfo = null;\n        this._demuxer = null;\n        this._remuxer = null;\n        this._ioctl = null;\n\n        this._pendingSeekTime = null;\n        this._pendingResolveSeekPoint = null;\n    }\n\n    destroy() {\n        this._mediaInfo = null;\n        this._mediaDataSource = null;\n\n        if (this._ioctl) {\n            this._ioctl.destroy();\n            this._ioctl = null;\n        }\n        if (this._demuxer) {\n            this._demuxer.destroy();\n            this._demuxer = null;\n        }\n        if (this._remuxer) {\n            this._remuxer.destroy();\n            this._remuxer = null;\n        }\n\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    start() {\n        this._loadSegment(0);\n    }\n\n    _loadSegment(segmentIndex, optionalFrom) {\n        this._currentSegmentIndex = segmentIndex;\n        let dataSource = this._mediaDataSource.segments[segmentIndex];\n\n        let ioctl = this._ioctl = new IOController(dataSource, this._config, segmentIndex);\n        ioctl.onError = this._onIOException.bind(this);\n        ioctl.onSeeked = this._onIOSeeked.bind(this);\n        ioctl.onComplete = this._onIOComplete.bind(this);\n        ioctl.onRecoveredEarlyEof = this._onIORecoveredEarlyEof.bind(this);\n\n        if (optionalFrom) {\n            this._demuxer.bindDataSource(this._ioctl);\n        } else {\n            ioctl.onDataArrival = this._onInitChunkArrival.bind(this);\n        }\n\n        ioctl.open(optionalFrom);\n    }\n\n    stop() {\n        this._internalAbort();\n    }\n\n    _internalAbort() {\n        if (this._ioctl) {\n            this._ioctl.destroy();\n            this._ioctl = null;\n        }\n    }\n\n    pause() {  // take a rest\n        if (this._ioctl && this._ioctl.isWorking()) {\n            this._ioctl.pause();\n        }\n    }\n\n    resume() {\n        if (this._ioctl && this._ioctl.isPaused()) {\n            this._ioctl.resume();\n        }\n    }\n\n    seek(milliseconds) {\n        if (this._mediaInfo == null) {\n            return;\n        }\n        if (!this._mediaInfo.isSeekable()) {\n            return;\n        }\n\n        let targetSegmentIndex = this._searchSegmentIndexContains(milliseconds);\n\n        if (targetSegmentIndex === this._currentSegmentIndex) {\n            // intra-segment seeking\n            let segmentInfo = this._mediaInfo.segments[targetSegmentIndex];\n\n            if (segmentInfo == undefined) {\n                // current segment loading started, but mediainfo hasn't received yet\n                // wait for the metadata loaded, then seek to expected position\n                this._pendingSeekTime = milliseconds;\n            } else {\n                let keyframe = segmentInfo.getNearestKeyframe(milliseconds);\n                this._remuxer.seek(keyframe.milliseconds);\n                this._ioctl.seek(keyframe.fileposition);\n                // Will be resolved in _onRemuxerMediaSegmentArrival()\n                this._pendingResolveSeekPoint = keyframe.milliseconds;\n            }\n        } else {\n            // cross-segment seeking\n            let targetSegmentInfo = this._mediaInfo.segments[targetSegmentIndex];\n\n            if (targetSegmentInfo == undefined) {\n                // target segment hasn't been loaded. We need metadata then seek to expected time\n                this._pendingSeekTime = milliseconds;\n                this._internalAbort();\n                this._remuxer.seek();\n                this._remuxer.insertDiscontinuity();\n                this._loadSegment(targetSegmentIndex);\n                // Here we wait for the metadata loaded, then seek to expected position\n            } else {\n                // We have target segment's metadata, direct seek to target position\n                let keyframe = targetSegmentInfo.getNearestKeyframe(milliseconds);\n                this._internalAbort();\n                this._remuxer.seek(milliseconds);\n                this._remuxer.insertDiscontinuity();\n                this._demuxer.timestampBase = this._mediaDataSource.segments[targetSegmentIndex].timestampBase;\n                this._loadSegment(targetSegmentIndex, keyframe.fileposition);\n                this._pendingResolveSeekPoint = keyframe.milliseconds;\n            }\n        }\n    }\n\n    _searchSegmentIndexContains(milliseconds) {\n        let segments = this._mediaDataSource.segments;\n        let idx = segments.length - 1;\n\n        for (let i = 0; i < segments.length; i++) {\n            if (milliseconds < segments[i].timestampBase) {\n                idx = i - 1;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    _onInitChunkArrival(data, byteStart) {\n        let probeData = null;\n\n        if (byteStart > 0) {\n            // IOController seeked immediately after opened, byteStart > 0 callback may received\n            this._demuxer.bindDataSource(this._ioctl);\n            this._demuxer.timestampBase = this._mediaDataSource.segments[this._currentSegmentIndex].timestampBase;\n        } else if ((probeData = FlvDemuxer.probe(data)).match) {\n            // Always create new FlvDemuxer\n            this._demuxer = new FlvDemuxer(probeData, this._config);\n\n            if (!this._remuxer) {\n                this._remuxer = new MP4Remuxer(this._config);\n            }\n\n            let mds = this._mediaDataSource;\n            if (mds.duration != undefined && !isNaN(mds.duration)) {\n                this._demuxer.overridedDuration = mds.duration;\n            }\n            this._demuxer.timestampBase = mds.segments[this._currentSegmentIndex].timestampBase;\n\n            this._demuxer.onError = this._onDemuxException.bind(this);\n            this._demuxer.onMediaInfo = this._onMediaInfo.bind(this);\n\n            this._remuxer.bindDataSource(this._demuxer\n                         .bindDataSource(this._ioctl\n            ));\n\n            this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this);\n            this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this);\n        } else {\n            probeData = null;\n            Log.e(this.TAG, 'Non-FLV, Unsupported media type!');\n            Promise.resolve().then(() => {\n                this._internalAbort();\n            });\n            this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, DemuxErrors.FORMAT_UNSUPPORTED, 'Non-FLV, Unsupported media type');\n        }\n\n        return probeData != null ? probeData.consumed : 0;\n    }\n\n    _onMediaInfo(mediaInfo) {\n        if (this._mediaInfo == null) {\n            // Store first segment's mediainfo as global mediaInfo\n            this._mediaInfo = Object.assign({}, mediaInfo);\n            this._mediaInfo.keyframesIndex = null;\n            this._mediaInfo.segments = [];\n            this._mediaInfo.segmentCount = this._mediaDataSource.segments.length;\n            Object.setPrototypeOf(this._mediaInfo, MediaInfo.prototype);\n\n            let exportInfo = Object.assign({}, this._mediaInfo);\n            delete exportInfo.segments;\n            delete exportInfo.keyframesIndex;\n            this._emitter.emit(TransmuxingEvents.MEDIA_INFO, exportInfo);\n        }\n\n        if (this._mediaInfo.segments[this._currentSegmentIndex] == undefined) {\n            let segmentInfo = Object.assign({}, mediaInfo);\n            Object.setPrototypeOf(segmentInfo, MediaInfo.prototype);\n\n            this._mediaInfo.segments[this._currentSegmentIndex] = segmentInfo;\n        }\n\n        if (this._pendingSeekTime != null) {\n            Promise.resolve().then(() => {\n                let target = this._pendingSeekTime;\n                this._pendingSeekTime = null;\n                this.seek(target);\n            });\n        }\n    }\n\n    _onIOSeeked() {\n        this._remuxer.insertDiscontinuity();\n    }\n\n    _onIOComplete(extraData) {\n        let segmentIndex = extraData;\n        let nextSegmentIndex = segmentIndex + 1;\n\n        if (nextSegmentIndex < this._mediaDataSource.segments.length) {\n            this._internalAbort();\n            this._loadSegment(nextSegmentIndex);\n        } else {\n            this._emitter.emit(TransmuxingEvents.LOADING_COMPLETE);\n        }\n    }\n\n    _onIORecoveredEarlyEof() {\n        this._emitter.emit(TransmuxingEvents.RECOVERED_EARLY_EOF);\n    }\n\n    _onIOException(type, info) {\n        Log.e(this.TAG, `IOException: type = ${type}, code = ${info.code}, msg = ${info.msg}`);\n        this._emitter.emit(TransmuxingEvents.IO_ERROR, type, info);\n    }\n\n    _onDemuxException(type, info) {\n        Log.e(this.TAG, `DemuxException: type = ${type}, info = ${info}`);\n        this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, type, info);\n    }\n\n    _onRemuxerInitSegmentArrival(type, initSegment) {\n        this._emitter.emit(TransmuxingEvents.INIT_SEGMENT, type, initSegment);\n    }\n\n    _onRemuxerMediaSegmentArrival(type, mediaSegment) {\n        if (this._pendingSeekTime != null) {\n            // Media segments after new-segment cross-seeking should be dropped.\n            return;\n        }\n        this._emitter.emit(TransmuxingEvents.MEDIA_SEGMENT, type, mediaSegment);\n\n        if (this._pendingResolveSeekPoint != null && type === 'video') {\n            let syncPoints = mediaSegment.info.syncPoints;\n            let seekpoint = this._pendingResolveSeekPoint;\n            this._pendingResolveSeekPoint = null;\n\n            // Safari: Pass PTS for recommend_seekpoint\n            if (Browser.safari && syncPoints.length > 0 && syncPoints[0].originalDts === seekpoint) {\n                seekpoint = syncPoints[0].pts;\n            }\n            // else: use original DTS (keyframe.milliseconds)\n\n            this._emitter.emit(TransmuxingEvents.RECOMMEND_SEEKPOINT, seekpoint);\n        }\n\n        if (type === 'video') {\n            this._reportStatisticsInfo();\n        }\n    }\n\n    _reportStatisticsInfo() {\n        let info = {};\n        info.url = this._ioctl.currentUrl;\n        info.speed = this._ioctl.currentSpeed;\n        info.loaderType = this._ioctl.loaderType;\n        info.currentSegmentIndex = this._currentSegmentIndex;\n        info.totalSegmentCount = this._mediaDataSource.segments.length;\n\n        this._emitter.emit(TransmuxingEvents.STATISTICS_INFO, info);\n    }\n\n}\n\nexport default TransmuxingController;","const TransmuxingEvents = {\n    IO_ERROR: 'io_error',\n    DEMUX_ERROR: 'demux_error',\n    INIT_SEGMENT: 'init_segment',\n    MEDIA_SEGMENT: 'media_segment',\n    LOADING_COMPLETE: 'loading_complete',\n    RECOVERED_EARLY_EOF: 'recovered_early_eof',\n    MEDIA_INFO: 'media_info',\n    STATISTICS_INFO: 'statistics_info',\n    RECOMMEND_SEEKPOINT: 'recommend_seekpoint'\n};\n\nexport default TransmuxingEvents;","import Log from '../utils/logger.js';\nimport LoggingControl from '../utils/logging-control.js';\nimport Polyfill from '../utils/polyfill.js';\nimport TransmuxingController from './transmuxing-controller.js';\nimport TransmuxingEvents from './transmuxing-events.js';\n\n/* post message to worker:\n   data: {\n       cmd: string\n       param: any\n   }\n\n   post message from worker inside:\n   data: {\n       msg: string,\n       data: any\n   }\n */\n\nlet TransmuxingWorker = function (self) {\n\n    let TAG = 'TransmuxingWorker';\n    let controller = null;\n\n    Polyfill.install();\n\n    self.addEventListener('message', function (e) {\n        switch (e.data.cmd) {\n            case 'init':\n                controller = new TransmuxingController(e.data.param[0], e.data.param[1]);\n                controller.on(TransmuxingEvents.IO_ERROR, onIOError.bind(this));\n                controller.on(TransmuxingEvents.DEMUX_ERROR, onDemuxError.bind(this));\n                controller.on(TransmuxingEvents.INIT_SEGMENT, onInitSegment.bind(this));\n                controller.on(TransmuxingEvents.MEDIA_SEGMENT, onMediaSegment.bind(this));\n                controller.on(TransmuxingEvents.LOADING_COMPLETE, onLoadingComplete.bind(this));\n                controller.on(TransmuxingEvents.RECOVERED_EARLY_EOF, onRecoveredEarlyEof.bind(this));\n                controller.on(TransmuxingEvents.MEDIA_INFO, onMediaInfo.bind(this));\n                controller.on(TransmuxingEvents.STATISTICS_INFO, onStatisticsInfo.bind(this));\n                controller.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, onRecommendSeekpoint.bind(this));\n                break;\n            case 'destroy':\n                if (controller) {\n                    controller.destroy();\n                    controller = null;\n                }\n                self.postMessage({msg: 'destroyed'});\n                break;\n            case 'start':\n                controller.start();\n                break;\n            case 'stop':\n                controller.stop();\n                break;\n            case 'seek':\n                controller.seek(e.data.param);\n                break;\n            case 'pause':\n                controller.pause();\n                break;\n            case 'resume':\n                controller.resume();\n                break;\n            case 'logging_config':\n                LoggingControl.applyConfig(e.data.param);\n                break;\n        }\n    });\n\n    function onInitSegment(type, initSegment) {\n        let obj = {\n            msg: TransmuxingEvents.INIT_SEGMENT,\n            data: {\n                type: type,\n                data: initSegment\n            }\n        };\n        self.postMessage(obj, [initSegment.data]);  // data: ArrayBuffer\n    }\n\n    function onMediaSegment(type, mediaSegment) {\n        let obj = {\n            msg: TransmuxingEvents.MEDIA_SEGMENT,\n            data: {\n                type: type,\n                data: mediaSegment\n            }\n        };\n        self.postMessage(obj, [mediaSegment.data]);  // data: ArrayBuffer\n    }\n\n    function onLoadingComplete() {\n        let obj = {\n            msg: TransmuxingEvents.LOADING_COMPLETE\n        };\n        self.postMessage(obj);\n    }\n\n    function onRecoveredEarlyEof() {\n        let obj = {\n            msg: TransmuxingEvents.RECOVERED_EARLY_EOF\n        };\n        self.postMessage(obj);\n    }\n\n    function onMediaInfo(mediaInfo) {\n        let obj = {\n            msg: TransmuxingEvents.MEDIA_INFO,\n            data: mediaInfo\n        };\n        self.postMessage(obj);\n    }\n\n    function onStatisticsInfo(statInfo) {\n        let obj = {\n            msg: TransmuxingEvents.STATISTICS_INFO,\n            data: statInfo\n        };\n        self.postMessage(obj);\n    }\n\n    function onIOError(type, info) {\n        self.postMessage({\n            msg: TransmuxingEvents.IO_ERROR,\n            data: {\n                type: type,\n                info: info\n            }\n        });\n    }\n\n    function onDemuxError(type, info) {\n        self.postMessage({\n            msg: TransmuxingEvents.DEMUX_ERROR,\n            data: {\n                type: type,\n                info: info\n            }\n        });\n    }\n\n    function onRecommendSeekpoint(milliseconds) {\n        self.postMessage({\n            msg: TransmuxingEvents.RECOMMEND_SEEKPOINT,\n            data: milliseconds\n        });\n    }\n\n};\n\nexport default TransmuxingWorker;","import Log from '../utils/logger.js';\nimport decodeUTF8 from '../utils/utf8-conv.js';\nimport {IllegalStateException} from '../utils/exception.js';\n\nlet le = (function () {\n    let buf = new ArrayBuffer(2);\n    (new DataView(buf)).setInt16(0, 256, true);  // little-endian write\n    return (new Int16Array(buf))[0] === 256;  // platform-spec read, if equal then LE\n})();\n\nclass AMF {\n\n    static parseScriptData(arrayBuffer, dataOffset, dataSize) {\n        let data = {};\n\n        try {\n            let name = AMF.parseValue(arrayBuffer, dataOffset, dataSize);\n            let value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);\n\n            data[name.data] = value.data;\n        } catch (e) {\n            Log.e('AMF', e.toString());\n        }\n\n        return data;\n    }\n\n    static parseObject(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 3) {\n            throw new IllegalStateException('Data not enough when parse ScriptDataObject');\n        }\n        let name = AMF.parseString(arrayBuffer, dataOffset, dataSize);\n        let value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);\n        let isObjectEnd = value.objectEnd;\n\n        return {\n            data: {\n                name: name.data,\n                value: value.data\n            },\n            size: name.size + value.size,\n            objectEnd: isObjectEnd\n        };\n    }\n\n    static parseVariable(arrayBuffer, dataOffset, dataSize) {\n        return AMF.parseObject(arrayBuffer, dataOffset, dataSize);\n    }\n\n    static parseString(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 2) {\n            throw new IllegalStateException('Data not enough when parse String');\n        }\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n        let length = v.getUint16(0, !le);\n\n        let str;\n        if (length > 0) {\n            str = decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 2, length));\n        } else {\n            str = '';\n        }\n\n        return {\n            data: str,\n            size: 2 + length\n        };\n    }\n\n    static parseLongString(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 4) {\n            throw new IllegalStateException('Data not enough when parse LongString');\n        }\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n        let length = v.getUint32(0, !le);\n\n        let str;\n        if (length > 0) {\n            str = decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 4, length));\n        } else {\n            str = '';\n        }\n\n        return {\n            data: str,\n            size: 4 + length\n        };\n    }\n\n    static parseDate(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 10) {\n            throw new IllegalStateException('Data size invalid when parse Date');\n        }\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n        let timestamp = v.getFloat64(0, !le);\n        let localTimeOffset = v.getInt16(8, !le);\n        timestamp += localTimeOffset * 60 * 1000;  // get UTC time\n\n        return {\n            data: new Date(timestamp),\n            size: 8 + 2\n        };\n    }\n\n    static parseValue(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 1) {\n            throw new IllegalStateException('Data not enough when parse Value');\n        }\n\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let offset = 1;\n        let type = v.getUint8(0);\n        let value;\n        let objectEnd = false;\n\n        try {\n            switch (type) {\n                case 0:  // Number(Double) type\n                    value = v.getFloat64(1, !le);\n                    offset += 8;\n                    break;\n                case 1: {  // Boolean type\n                    let b = v.getUint8(1);\n                    value = b ? true : false;\n                    offset += 1;\n                    break;\n                }\n                case 2: {  // String type\n                    let amfstr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);\n                    value = amfstr.data;\n                    offset += amfstr.size;\n                    break;\n                }\n                case 3: { // Object(s) type\n                    value = {};\n                    let terminal = 0;  // workaround for malformed Objects which has missing ScriptDataObjectEnd\n                    if ((v.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {\n                        terminal = 3;\n                    }\n                    while (offset < dataSize - 4) {  // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n                        let amfobj = AMF.parseObject(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);\n                        if (amfobj.objectEnd)\n                            break;\n                        value[amfobj.data.name] = amfobj.data.value;\n                        offset += amfobj.size;\n                    }\n                    if (offset <= dataSize - 3) {\n                        let marker = v.getUint32(offset - 1, !le) & 0x00FFFFFF;\n                        if (marker === 9) {\n                            offset += 3;\n                        }\n                    }\n                    break;\n                }\n                case 8: { // ECMA array type (Mixed array)\n                    value = {};\n                    offset += 4;  // ECMAArrayLength(UI32)\n                    let terminal = 0;  // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n                    if ((v.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {\n                        terminal = 3;\n                    }\n                    while (offset < dataSize - 8) {  // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n                        let amfvar = AMF.parseVariable(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);\n                        if (amfvar.objectEnd)\n                            break;\n                        value[amfvar.data.name] = amfvar.data.value;\n                        offset += amfvar.size;\n                    }\n                    if (offset <= dataSize - 3) {\n                        let marker = v.getUint32(offset - 1, !le) & 0x00FFFFFF;\n                        if (marker === 9) {\n                            offset += 3;\n                        }\n                    }\n                    break;\n                }\n                case 9:  // ScriptDataObjectEnd\n                    value = undefined;\n                    offset = 1;\n                    objectEnd = true;\n                    break;\n                case 10: {  // Strict array type\n                    // ScriptDataValue[n]. NOTE: according to video_file_format_spec_v10_1.pdf\n                    value = [];\n                    let strictArrayLength = v.getUint32(1, !le);\n                    offset += 4;\n                    for (let i = 0; i < strictArrayLength; i++) {\n                        let val = AMF.parseValue(arrayBuffer, dataOffset + offset, dataSize - offset);\n                        value.push(val.data);\n                        offset += val.size;\n                    }\n                    break;\n                }\n                case 11: {  // Date type\n                    let date = AMF.parseDate(arrayBuffer, dataOffset + 1, dataSize - 1);\n                    value = date.data;\n                    offset += date.size;\n                    break;\n                }\n                case 12: {  // Long string type\n                    let amfLongStr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);\n                    value = amfLongStr.data;\n                    offset += amfLongStr.size;\n                    break;\n                }\n                default:\n                    // ignore and skip\n                    offset = dataSize;\n                    Log.w('AMF', 'Unsupported AMF value type ' + type);\n            }\n        } catch (e) {\n            Log.e('AMF', e.toString());\n        }\n\n        return {\n            data: value,\n            size: offset,\n            objectEnd: objectEnd\n        };\n    }\n\n}\n\nexport default AMF;","const DemuxErrors = {\n    OK: 'OK',\n    FORMAT_ERROR: 'FormatError',\n    FORMAT_UNSUPPORTED: 'FormatUnsupported',\n    CODEC_UNSUPPORTED: 'CodecUnsupported'\n};\n\nexport default DemuxErrors;","import {IllegalStateException, InvalidArgumentException} from '../utils/exception.js';\n\n// Exponential-Golomb buffer decoder\n\nclass ExpGolomb {\n\n    constructor(uint8array) {\n        this.TAG = this.constructor.name;\n\n        this._buffer = uint8array;\n        this._buffer_index = 0;\n        this._total_bytes = uint8array.byteLength;\n        this._total_bits = uint8array.byteLength * 8;\n        this._current_word = 0;\n        this._current_word_bits_left = 0;\n    }\n\n    destroy() {\n        this._buffer = null;\n    }\n\n    _fillCurrentWord() {\n        let buffer_bytes_left = this._total_bytes - this._buffer_index;\n        if (buffer_bytes_left <= 0)\n            throw new IllegalStateException('ExpGolomb: _fillCurrentWord() but no bytes available');\n\n        let bytes_read = Math.min(4, buffer_bytes_left);\n        let word = new Uint8Array(4);\n        word.set(this._buffer.subarray(this._buffer_index, this._buffer_index + bytes_read));\n        this._current_word = new DataView(word.buffer).getUint32(0, false);\n\n        this._buffer_index += bytes_read;\n        this._current_word_bits_left = bytes_read * 8;\n    }\n\n    readBits(bits) {\n        if (bits > 32)\n            throw new InvalidArgumentException('ExpGolomb: readBits() bits exceeded max 32bits!');\n\n        if (bits <= this._current_word_bits_left) {\n            let result = this._current_word >>> (32 - bits);\n            this._current_word <<= bits;\n            this._current_word_bits_left -= bits;\n            return result;\n        }\n\n        let result = this._current_word_bits_left ? this._current_word : 0;\n        result = result >>> (32 - this._current_word_bits_left);\n        let bits_need_left = bits - this._current_word_bits_left;\n\n        this._fillCurrentWord();\n        let bits_read_next = Math.min(bits_need_left, this._current_word_bits_left);\n\n        let result2 = this._current_word >>> (32 - bits_read_next);\n        this._current_word <<= bits_read_next;\n        this._current_word_bits_left -= bits_read_next;\n\n        result = (result << bits_read_next) | result2;\n        return result;\n    }\n\n    readBool() {\n        return this.readBits(1) === 1;\n    }\n\n    readByte() {\n        return this.readBits(8);\n    }\n\n    _skipLeadingZero() {\n        let zero_count;\n        for (zero_count = 0; zero_count < this._current_word_bits_left; zero_count++) {\n            if (0 !== (this._current_word & (0x80000000 >>> zero_count))) {\n                this._current_word <<= zero_count;\n                this._current_word_bits_left -= zero_count;\n                return zero_count;\n            }\n        }\n        this._fillCurrentWord();\n        return zero_count + this._skipLeadingZero();\n    }\n\n    readUEG() {  // unsigned exponential golomb\n        let leading_zeros = this._skipLeadingZero();\n        return this.readBits(leading_zeros + 1) - 1;\n    }\n\n    readSEG() {  // signed exponential golomb\n        let value = this.readUEG();\n        if (value & 0x01) {\n            return (value + 1) >>> 1;\n        } else {\n            return -1 * (value >>> 1);\n        }\n    }\n\n}\n\nexport default ExpGolomb;","import Log from '../utils/logger.js';\nimport AMF from './amf-parser.js';\nimport BSearch from '../utils/bsearch.js';\nimport SPSParser from './sps-parser.js';\nimport DemuxErrors from './demux-errors.js';\nimport MediaInfo from '../core/media-info.js';\nimport {IllegalStateException} from '../utils/exception.js';\n\nfunction Swap16(src) {\n    return (((src >>> 8) & 0xFF) |\n            ((src & 0xFF) << 8));\n}\n\nfunction Swap32(src) {\n    return (((src & 0xFF000000) >>> 24) |\n            ((src & 0x00FF0000) >>> 8)  |\n            ((src & 0x0000FF00) << 8)   |\n            ((src & 0x000000FF) << 24));\n}\n\nfunction ReadBig32(array, index) {\n    return ((array[index] << 24)     |\n            (array[index + 1] << 16) |\n            (array[index + 2] << 8)  |\n            (array[index + 3]));\n}\n\n\nclass FlvDemuxer {\n\n    constructor(probeData, config) {\n        this.TAG = this.constructor.name;\n\n        this._config = config;\n\n        this._onError = null;\n        this._onMediaInfo = null;\n        this._onTrackMetadata = null;\n        this._onDataAvailable = null;\n\n        this._dataOffset = probeData.dataOffset;\n        this._firstParse = true;\n        this._dispatch = false;\n\n        this._hasAudio = probeData.hasAudioTrack;\n        this._hasVideo = probeData.hasVideoTrack;\n\n        this._audioInitialMetadataDispatched = false;\n        this._videoInitialMetadataDispatched = false;\n\n        this._mediaInfo = new MediaInfo();\n        this._mediaInfo.hasAudio = this._hasAudio;\n        this._mediaInfo.hasVideo = this._hasVideo;\n        this._metadata = null;\n        this._audioMetadata = null;\n        this._videoMetadata = null;\n\n        this._naluLengthSize = 4;\n        this._timestampBase = 0;  // int32, in milliseconds\n        this._timescale = 1000;\n        this._duration = 0;  // int32, in milliseconds\n        this._durationOverrided = false;\n        this._referenceFrameRate = {\n            fixed: true,\n            fps: 23.976,\n            fps_num: 23976,\n            fps_den: 1000\n        };\n\n        this._videoTrack = {type: 'video', id: 1, sequenceNumber: 0, samples: [], length: 0, nbNalu: 0};\n        this._audioTrack = {type: 'audio', id: 2, sequenceNumber: 0, samples: [], length: 0};\n\n        this._littleEndian = (function () {\n            let buf = new ArrayBuffer(2);\n            (new DataView(buf)).setInt16(0, 256, true);  // little-endian write\n            return (new Int16Array(buf))[0] === 256;  // platform-spec read, if equal then LE\n        })();\n    }\n\n    destroy() {\n        this._mediaInfo = null;\n        this._metadata = null;\n        this._audioMetadata = null;\n        this._videoMetadata = null;\n        this._videoTrack = null;\n        this._audioTrack = null;\n\n        this._onError = null;\n        this._onMediaInfo = null;\n        this._onTrackMetadata = null;\n        this._onDataAvailable = null;\n    }\n\n    static probe(buffer) {\n        let data = new Uint8Array(buffer);\n        let mismatch = {match: false};\n\n        if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n            return mismatch;\n        }\n\n        let hasAudio = ((data[4] & 4) >>> 2) !== 0;\n        let hasVideo = (data[4] & 1) !== 0;\n\n        if (!hasAudio && !hasVideo) {\n            return mismatch;\n        }\n\n        let offset = ReadBig32(data, 5);\n\n        if (offset < 9) {\n            return mismatch;\n        }\n\n        return {\n            match: true,\n            consumed: offset,\n            dataOffset: offset,\n            hasAudioTrack: hasAudio,\n            hasVideoTrack: hasVideo\n        };\n    }\n\n    bindDataSource(loader) {\n        loader.onDataArrival = this.parseChunks.bind(this);\n        return this;\n    }\n\n    // prototype: function(type: string, metadata: any): void\n    get onTrackMetadata() {\n        return this._onTrackMetadata;\n    }\n\n    set onTrackMetadata(callback) {\n        this._onTrackMetadata = callback;\n    }\n\n    // prototype: function(mediaInfo: MediaInfo): void\n    get onMediaInfo() {\n        return this._onMediaInfo;\n    }\n\n    set onMediaInfo(callback) {\n        this._onMediaInfo = callback;\n    }\n\n    // prototype: function(type: number, info: string): void\n    get onError() {\n        return this._onError;\n    }\n\n    set onError(callback) {\n        this._onError = callback;\n    }\n\n    // prototype: function(videoTrack: any, audioTrack: any): void\n    get onDataAvailable() {\n        return this._onDataAvailable;\n    }\n\n    set onDataAvailable(callback) {\n        this._onDataAvailable = callback;\n    }\n\n    // timestamp base for output samples, must be in milliseconds\n    get timestampBase() {\n        return this._timestampBase;\n    }\n\n    set timestampBase(base) {\n        this._timestampBase = base;\n    }\n\n    get overridedDuration() {\n        return this._duration;\n    }\n\n    // Force-override media duration. Must be in milliseconds, int32\n    set overridedDuration(duration) {\n        this._durationOverrided = true;\n        this._duration = duration;\n        this._mediaInfo.duration = duration;\n    }\n\n    _isInitialMetadataDispatched() {\n        if (this._hasAudio && this._hasVideo) {  // both audio & video\n            return this._audioInitialMetadataDispatched && this._videoInitialMetadataDispatched;\n        }\n        if (this._hasAudio && !this._hasVideo) {  // audio only\n            return this._audioInitialMetadataDispatched;\n        }\n        if (!this._hasAudio && this._hasVideo) {  // video only\n            return this._videoInitialMetadataDispatched;\n        }\n    }\n\n    // function parseChunks(chunk: ArrayBuffer, byteStart: number): number;\n    parseChunks(chunk, byteStart) {\n        if (!this._onError || !this._onMediaInfo || !this._onTrackMetadata || !this._onDataAvailable) {\n            throw new IllegalStateException('Flv: onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified');\n        }\n\n        let offset = 0;\n        let le = this._littleEndian;\n\n        if (this._firstParse) {  // handle PreviousTagSize0 before Tag1\n            this._firstParse = false;\n            if (byteStart !== this._dataOffset) {\n                Log.w(this.TAG, 'First time parsing but chunk byteStart invalid!');\n            }\n\n            let v = new DataView(chunk);\n            let prevTagSize0 = v.getUint32(0, !le);\n            if (prevTagSize0 !== 0) {\n                Log.w(this.TAG, 'PrevTagSize0 !== 0 !!!');\n            }\n            offset += 4;\n        }\n\n        while (offset < chunk.byteLength) {\n            this._dispatch = true;\n\n            let v = new DataView(chunk, offset);\n\n            if (offset + 11 + 4 > chunk.byteLength) {\n                // data not enough for parsing an flv tag\n                break;\n            }\n\n            let tagType = v.getUint8(0);\n            let dataSize = v.getUint32(0, !le) & 0x00FFFFFF;\n\n            if (offset + 11 + dataSize + 4 > chunk.byteLength) {\n                // data not enough for parsing actual data body\n                break;\n            }\n\n            if (tagType !== 8 && tagType !== 9 && tagType !== 18) {\n                Log.w(this.TAG, `Unsupported tag type ${tagType}, skipped`);\n                // consume the whole tag (skip it)\n                offset += 11 + dataSize + 4;\n                continue;\n            }\n\n            let ts2 = v.getUint8(4);\n            let ts1 = v.getUint8(5);\n            let ts0 = v.getUint8(6);\n            let ts3 = v.getUint8(7);\n\n            let timestamp = ts0 | (ts1 << 8) | (ts2 << 16) | (ts3 << 24);\n\n            let streamId = v.getUint32(7, !le) & 0x00FFFFFF;\n            if (streamId !== 0) {\n                Log.w(this.TAG, 'Meet tag which has StreamID != 0!');\n            }\n\n            let dataOffset = offset + 11;\n\n            switch (tagType) {\n                case 8:  // Audio\n                    this._parseAudioData(chunk, dataOffset, dataSize, timestamp);\n                    break;\n                case 9:  // Video\n                    this._parseVideoData(chunk, dataOffset, dataSize, timestamp, byteStart + offset);\n                    break;\n                case 18:  // ScriptDataObject\n                    this._parseScriptData(chunk, dataOffset, dataSize);\n                    break;\n            }\n\n            let prevTagSize = v.getUint32(11 + dataSize, !le);\n            if (prevTagSize !== 11 + dataSize) {\n                Log.w(this.TAG, `Invalid PrevTagSize ${prevTagSize}`);\n            }\n\n            offset += 11 + dataSize + 4;  // tagBody + dataSize + prevTagSize\n        }\n\n        // dispatch parsed frames to consumer (typically, the remuxer)\n        if (this._isInitialMetadataDispatched()) {\n            if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\n                this._onDataAvailable(this._audioTrack, this._videoTrack);\n            }\n        }\n\n        return offset;  // consumed bytes, just equals latest offset index\n    }\n\n    _parseScriptData(arrayBuffer, dataOffset, dataSize) {\n        let scriptData = AMF.parseScriptData(arrayBuffer, dataOffset, dataSize);\n\n        if (scriptData.hasOwnProperty('onMetaData')) {\n            if (this._metadata) {\n                Log.w(this.TAG, 'Found another onMetaData tag!');\n            }\n            this._metadata = scriptData;\n            let onMetaData = this._metadata.onMetaData;\n\n            if (typeof onMetaData.hasAudio === 'boolean') {  // hasAudio\n                this._hasAudio = onMetaData.hasAudio;\n                this._mediaInfo.hasAudio = this._hasAudio;\n            }\n            if (typeof onMetaData.hasVideo === 'boolean') {  // hasVideo\n                this._hasVideo = onMetaData.hasVideo;\n                this._mediaInfo.hasVideo = this._hasVideo;\n            }\n            if (typeof onMetaData.audiodatarate === 'number') {  // audiodatarate\n                this._mediaInfo.audioDataRate = onMetaData.audiodatarate;\n            }\n            if (typeof onMetaData.videodatarate === 'number') {  // videodatarate\n                this._mediaInfo.videoDataRate = onMetaData.videodatarate;\n            }\n            if (typeof onMetaData.width === 'number') {  // width\n                this._mediaInfo.width = onMetaData.width;\n            }\n            if (typeof onMetaData.height === 'number') {  // height\n                this._mediaInfo.height = onMetaData.height;\n            }\n            if (typeof onMetaData.duration === 'number') {  // duration\n                if (!this._durationOverrided) {\n                    let duration = Math.floor(onMetaData.duration * this._timescale);\n                    this._duration = duration;\n                    this._mediaInfo.duration = duration;\n                }\n            } else {\n                this._mediaInfo.duration = 0;\n            }\n            if (typeof onMetaData.framerate === 'number') {  // framerate\n                let fps_num = Math.floor(onMetaData.framerate * 1000);\n                if (fps_num > 0) {\n                    let fps = fps_num / 1000;\n                    this._referenceFrameRate.fixed = true;\n                    this._referenceFrameRate.fps = fps;\n                    this._referenceFrameRate.fps_num = fps_num;\n                    this._referenceFrameRate.fps_den = 1000;\n                    this._mediaInfo.fps = fps;\n                }\n            }\n            if (typeof onMetaData.keyframes === 'object') {  // keyframes\n                this._mediaInfo.hasKeyframesIndex = true;\n                let keyframes = onMetaData.keyframes;\n                this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(keyframes);\n                onMetaData.keyframes = null;  // keyframes has been extracted, remove it\n            } else {\n                this._mediaInfo.hasKeyframesIndex = false;\n            }\n            this._dispatch = false;\n            this._mediaInfo.metadata = onMetaData;\n            Log.v(this.TAG, 'Parsed onMetaData');\n            if (this._mediaInfo.isComplete()) {\n                this._onMediaInfo(this._mediaInfo);\n            }\n        }\n    }\n\n    _parseKeyframesIndex(keyframes) {\n        let times = [];\n\n        keyframes.times.forEach((time) => {\n            times.push(this._timestampBase + Math.floor(time * 1000));\n        });\n\n        return {\n            times: times,\n            filepositions: keyframes.filepositions\n        };\n    }\n\n    _parseAudioData(arrayBuffer, dataOffset, dataSize, tagTimestamp) {\n        if (dataSize <= 1) {\n            Log.w(this.TAG, 'Flv: Invalid audio packet, missing SoundData payload!');\n            return;\n        }\n\n        let meta = this._audioMetadata;\n        let track = this._audioTrack;\n\n        if (!meta || !meta.codec) {\n            // initial metadata\n            meta = this._audioMetadata = {};\n            meta.type = 'audio';\n            meta.id = track.id;\n            meta.timescale = this._timescale;\n            meta.duration = this._duration;\n\n            let le = this._littleEndian;\n            let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n            let soundSpec = v.getUint8(0);\n\n            let soundFormat = soundSpec >>> 4;\n            if (soundFormat !== 10) {  // AAC\n                // TODO: support MP3 audio codec\n                this._onError(DemuxErrors.CODEC_UNSUPPORTED, 'Flv: Unsupported audio codec idx: ' + soundFormat);\n                return;\n            }\n\n            let soundRate = 0;\n            let soundRateIndex = (soundSpec & 12) >>> 2;\n            switch (soundRateIndex) {\n                case 0:\n                    soundRate = 5500;\n                    break;\n                case 1:\n                    soundRate = 11025;\n                    break;\n                case 2:\n                    soundRate = 22050;\n                    break;\n                case 3:\n                    soundRate = 44100;\n                    break;\n                case 4:\n                    soundRate = 48000;\n                    break;\n                default:\n                    this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid audio sample rate idx: ' + soundRateIndex);\n                    return;\n            }\n\n            let soundSize = (soundSpec & 2) >>> 1;  // unused\n            let soundType = (soundSpec & 1);\n\n            meta.audioSampleRate = soundRate;\n            meta.channelCount = (soundType === 0 ? 1 : 2);\n            meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n            meta.codec = 'mp4a.40.5';\n        }\n\n        let aacData = this._parseAACAudioData(arrayBuffer, dataOffset + 1, dataSize - 1);\n        if (aacData == undefined) {\n            return;\n        }\n\n        if (aacData.packetType === 0) {  // AAC sequence header (AudioSpecificConfig)\n            if (meta.config) {\n                Log.w(this.TAG, 'Found another AudioSpecificConfig!');\n            }\n            let misc = aacData.data;\n            meta.audioSampleRate = misc.samplingRate;\n            meta.channelCount = misc.channelCount;\n            meta.codec = misc.codec;\n            meta.config = misc.config;\n            // The decode result of an aac sample is 1024 PCM samples\n            meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n            Log.v(this.TAG, 'Parsed AudioSpecificConfig');\n\n            if (this._isInitialMetadataDispatched()) {\n                // Non-initial metadata, force dispatch (or flush) parsed frames to remuxer\n                if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\n                    this._onDataAvailable(this._audioTrack, this._videoTrack);\n                }\n            } else {\n                this._audioInitialMetadataDispatched = true;\n            }\n            // then notify new metadata\n            this._dispatch = false;\n            this._onTrackMetadata('audio', meta);\n\n            let mi = this._mediaInfo;\n            mi.audioCodec = 'mp4a.40.' + misc.originalAudioObjectType;\n            mi.audioSampleRate = meta.audioSampleRate;\n            mi.audioChannelCount = meta.channelCount;\n            if (mi.hasVideo) {\n                if (mi.videoCodec != null) {\n                    mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\n                }\n            } else {\n                mi.mimeType = 'video/x-flv; codecs=\"' + mi.audioCodec + '\"';\n            }\n            if (mi.isComplete()) {\n                this._onMediaInfo(mi);\n            }\n            return;\n        } else if (aacData.packetType === 1) {  // AAC raw frame data\n            let dts = this._timestampBase + tagTimestamp;\n            let aacSample = {unit: aacData.data, dts: dts, pts: dts};\n            track.samples.push(aacSample);\n            track.length += aacData.data.length;\n        } else {\n            Log.e(this.TAG, `Flv: Unsupported AAC data type ${aacData.packetType}`);\n        }\n    }\n\n    _parseAACAudioData(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize <= 1) {\n            Log.w(this.TAG, 'Flv: Invalid AAC packet, missing AACPacketType or/and Data!');\n            return;\n        }\n\n        let result = {};\n        let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);\n\n        result.packetType = array[0];\n\n        if (array[0] === 0) {\n            result.data = this._parseAACAudioSpecificConfig(arrayBuffer, dataOffset + 1, dataSize - 1);\n        } else {\n            result.data = array.subarray(1);\n        }\n\n        return result;\n    }\n\n    _parseAACAudioSpecificConfig(arrayBuffer, dataOffset, dataSize) {\n        let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);\n        let config = null;\n\n        let mpegSamplingRates = [\n            96000, 88200, 64000, 48000, 44100, 32000,\n            24000, 22050, 16000, 12000, 11025, 8000, 7350\n        ];\n\n        /* Audio Object Type:\n           0: Null\n           1: AAC Main\n           2: AAC LC\n           3: AAC SSR (Scalable Sample Rate)\n           4: AAC LTP (Long Term Prediction)\n           5: HE-AAC / SBR (Spectral Band Replication)\n           6: AAC Scalable\n        */\n\n        let audioObjectType = 0;\n        let originalAudioObjectType = 0;\n        let audioExtensionObjectType = null;\n        let samplingIndex = 0;\n        let extensionSamplingIndex = null;\n\n        // 5 bits\n        audioObjectType = originalAudioObjectType = array[0] >>> 3;\n        // 4 bits\n        samplingIndex = ((array[0] & 0x07) << 1) | (array[1] >>> 7);\n        if (samplingIndex < 0 || samplingIndex >= mpegSamplingRates.length) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: AAC invalid sampling frequency index!');\n            return;\n        }\n\n        let samplingFrequence = mpegSamplingRates[samplingIndex];\n\n        // 4 bits\n        let channelConfig = (array[1] & 0x78) >>> 3;\n        if (channelConfig < 0 || channelConfig >= 8) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: AAC invalid channel configuration');\n            return;\n        }\n\n        if (audioObjectType === 5) {  // HE-AAC?\n            // 4 bits\n            extensionSamplingIndex = ((array[1] & 0x07) << 1) | (array[2] >>> 7);\n            // 5 bits\n            audioExtensionObjectType = (array[2] & 0x7C) >>> 2;\n        }\n\n        // workarounds for various browsers\n        let userAgent = self.navigator.userAgent.toLowerCase();\n\n        if (userAgent.indexOf('firefox') !== -1) {\n            // firefox: use SBR (HE-AAC) if freq less than 24kHz\n            if (samplingIndex >= 6) {\n                audioObjectType = 5;\n                config = new Array(4);\n                extensionSamplingIndex = samplingIndex - 3;\n            } else {  // use LC-AAC\n                audioObjectType = 2;\n                config = new Array(2);\n                extensionSamplingIndex = samplingIndex;\n            }\n        } else if (userAgent.indexOf('android') !== -1) {\n            // android: always use LC-AAC\n            audioObjectType = 2;\n            config = new Array(2);\n            extensionSamplingIndex = samplingIndex;\n        } else {\n            // for other browsers, e.g. chrome...\n            // Always use HE-AAC to make it easier to switch aac codec profile\n            audioObjectType = 5;\n            extensionSamplingIndex = samplingIndex;\n            config = new Array(4);\n\n            if (samplingIndex >= 6) {\n                extensionSamplingIndex = samplingIndex - 3;\n            } else if (channelConfig === 1) {  // Mono channel\n                audioObjectType = 2;\n                config = new Array(2);\n                extensionSamplingIndex = samplingIndex;\n            }\n        }\n\n        config[0]  = audioObjectType << 3;\n        config[0] |= (samplingIndex & 0x0F) >>> 1;\n        config[1]  = (samplingIndex & 0x0F) << 7;\n        config[1] |= (channelConfig & 0x0F) << 3;\n        if (audioObjectType === 5) {\n            config[1] |= ((extensionSamplingIndex & 0x0F) >>> 1);\n            config[2]  = (extensionSamplingIndex & 0x01) << 7;\n            // extended audio object type: force to 2 (LC-AAC)\n            config[2] |= (2 << 2);\n            config[3]  = 0;\n        }\n\n        return {\n            config: config,\n            samplingRate: samplingFrequence,\n            channelCount: channelConfig,\n            codec: 'mp4a.40.' + audioObjectType,\n            originalAudioObjectType: originalAudioObjectType\n        };\n    }\n\n    _parseVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition) {\n        if (dataSize <= 1) {\n            Log.w(this.TAG, 'Flv: Invalid video packet, missing VideoData payload!');\n            return;\n        }\n\n        let spec = (new Uint8Array(arrayBuffer, dataOffset, dataSize))[0];\n\n        let frameType = (spec & 240) >>> 4;\n        let codecId = spec & 15;\n\n        if (codecId !== 7) {\n            this._onError(DemuxErrors.CODEC_UNSUPPORTED, `Flv: Unsupported codec in video frame: ${codecId}`);\n            return;\n        }\n\n        this._parseAVCVideoPacket(arrayBuffer, dataOffset + 1, dataSize - 1, tagTimestamp, tagPosition, frameType);\n    }\n\n    _parseAVCVideoPacket(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType) {\n        if (dataSize < 4) {\n            Log.w(this.TAG, 'Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime');\n            return;\n        }\n\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let packetType = v.getUint8(0);\n        let cts = v.getUint32(0, !le) & 0x00FFFFFF;\n\n        if (packetType === 0) {  // AVCDecoderConfigurationRecord\n            this._parseAVCDecoderConfigurationRecord(arrayBuffer, dataOffset + 4, dataSize - 4);\n        } else if (packetType === 1) {  // One or more Nalus\n            this._parseAVCVideoData(arrayBuffer, dataOffset + 4, dataSize - 4, tagTimestamp, tagPosition, frameType, cts);\n        } else if (packetType === 2) {\n            // empty, AVC end of sequence\n        } else {\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Invalid video packet type ${packetType}`);\n            return;\n        }\n    }\n\n    _parseAVCDecoderConfigurationRecord(arrayBuffer, dataOffset, dataSize) {\n        if (dataSize < 7) {\n            Log.w(this.TAG, 'Flv: Invalid AVCDecoderConfigurationRecord, lack of data!');\n            return;\n        }\n\n        let meta = this._videoMetadata;\n        let track = this._videoTrack;\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        if (!meta) {\n            meta = this._videoMetadata = {};\n            meta.type = 'video';\n            meta.id = track.id;\n            meta.timescale = this._timescale;\n            meta.duration = this._duration;\n        } else {\n            if (typeof meta.avcc !== 'undefined') {\n                Log.w(this.TAG, 'Found another AVCDecoderConfigurationRecord!');\n            }\n        }\n\n        let version = v.getUint8(0);  // configurationVersion\n        let avcProfile = v.getUint8(1);  // avcProfileIndication\n        let profileCompatibility = v.getUint8(2);  // profile_compatibility\n        let avcLevel = v.getUint8(3);  // AVCLevelIndication\n\n        if (version !== 1 || avcProfile === 0) {\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord');\n            return;\n        }\n\n        this._naluLengthSize = (v.getUint8(4) & 3) + 1;  // lengthSizeMinusOne\n        if (this._naluLengthSize !== 3 && this._naluLengthSize !== 4) {  // holy shit!!!\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Strange NaluLengthSizeMinusOne: ${this._naluLengthSize - 1}`);\n            return;\n        }\n\n        let spsCount = v.getUint8(5) & 31;  // numOfSequenceParameterSets\n        if (spsCount === 0 || spsCount > 1) {\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Invalid H264 SPS count: ${spsCount}`);\n            return;\n        }\n\n        let offset = 6;\n\n        for (let i = 0; i < spsCount; i++) {\n            let len = v.getUint16(offset, !le);  // sequenceParameterSetLength\n            offset += 2;\n\n            if (len === 0) {\n                continue;\n            }\n\n            // Notice: Nalu without startcode header (00 00 00 01)\n            let sps = new Uint8Array(arrayBuffer, dataOffset + offset, len);\n            offset += len;\n\n            let config = SPSParser.parseSPS(sps);\n            meta.width = config.present_size.width;\n            meta.height = config.present_size.height;\n\n            meta.profile = config.profile_string;\n            meta.level = config.level_string;\n            meta.bitDepth = config.bit_depth;\n            meta.chromaFormat = config.chroma_format;\n            meta.sarRatio = config.sar_ratio;\n            meta.frameRate = config.frame_rate;\n\n            if (config.frame_rate.fixed === false ||\n                config.frame_rate.fps_num === 0 ||\n                config.frame_rate.fps_den === 0) {\n                meta.frameRate = this._referenceFrameRate;\n            }\n\n            let fps_den = meta.frameRate.fps_den;\n            let fps_num = meta.frameRate.fps_num;\n            meta.refSampleDuration = Math.floor(meta.timescale * (fps_den / fps_num));\n\n            let codecArray = sps.subarray(1, 4);\n            let codecString = 'avc1.';\n            for (let j = 0; j < 3; j++) {\n                let h = codecArray[j].toString(16);\n                if (h.length < 2) {\n                    h = '0' + h;\n                }\n                codecString += h;\n            }\n            meta.codec = codecString;\n\n            let mi = this._mediaInfo;\n            mi.width = config.codec_size.width;\n            mi.height = config.codec_size.height;\n            mi.fps = meta.frameRate.fps;\n            mi.profile = meta.profile;\n            mi.level = meta.level;\n            mi.chromaFormat = config.chroma_format_string;\n            mi.sarNum = meta.sarRatio.width;\n            mi.sarDen = meta.sarRatio.height;\n            mi.videoCodec = codecString;\n\n            if (mi.hasAudio) {\n                if (mi.audioCodec != null) {\n                    mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\n                }\n            } else {\n                mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + '\"';\n            }\n            if (mi.isComplete()) {\n                this._onMediaInfo(mi);\n            }\n        }\n\n        let ppsCount = v.getUint8(offset);  // numOfPictureParameterSets\n        if (ppsCount === 0 || ppsCount > 1) {\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Invalid H264 PPS count: ${ppsCount}`);\n            return;\n        }\n\n        offset++;\n\n        for (let i = 0; i < ppsCount; i++) {\n            let len = v.getUint16(offset, !le);  // pictureParameterSetLength\n            offset += 2;\n\n            if (len === 0) {\n                continue;\n            }\n\n            // pps is useless for extracting video information\n            offset += len;\n        }\n\n        meta.avcc = new Uint8Array(dataSize);\n        meta.avcc.set(new Uint8Array(arrayBuffer, dataOffset, dataSize), 0);\n        Log.v(this.TAG, 'Parsed AVCDecoderConfigurationRecord');\n\n        if (this._isInitialMetadataDispatched()) {\n            // flush parsed frames\n            if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\n                this._onDataAvailable(this._audioTrack, this._videoTrack);\n            }\n        } else {\n            this._videoInitialMetadataDispatched = true;\n        }\n        // notify new metadata\n        this._dispatch = false;\n        this._onTrackMetadata('video', meta);\n    }\n\n    _parseAVCVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType, cts) {\n        let le = this._littleEndian;\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        let units = [], length = 0;\n\n        let offset = 0;\n        const lengthSize = this._naluLengthSize;\n        let dts = this._timestampBase + tagTimestamp;\n        let keyframe = (frameType === 1);  // from FLV Frame Type constants\n\n        while (offset < dataSize) {\n            // Nalu with length-header (AVC1)\n            let naluSize = v.getUint32(offset, !le);  // Big-Endian read\n            if (lengthSize === 3) {\n                naluSize >>>= 8;\n            }\n            if (naluSize > dataSize - lengthSize) {\n                Log.w(this.TAG, `Malformed Nalus near timestamp ${dts}, NaluSize > DataSize!`);\n                return;\n            }\n\n            let unitType = v.getUint8(offset + lengthSize) & 0x1F;\n\n            if (unitType === 5) {  // IDR\n                keyframe = true;\n            }\n\n            let data = new Uint8Array(arrayBuffer, dataOffset + offset, lengthSize + naluSize);\n            let unit = {type: unitType, data: data};\n            units.push(unit);\n            length += data.byteLength;\n\n            offset += lengthSize + naluSize;\n        }\n\n        if (units.length) {\n            let track = this._videoTrack;\n            let avcSample = {\n                units: units,\n                length: length,\n                isKeyframe: keyframe,\n                dts: dts,\n                cts: cts,\n                pts: (dts + cts)\n            };\n            if (keyframe) {\n                avcSample.fileposition = tagPosition;\n            }\n            track.samples.push(avcSample);\n            track.length += length;\n            track.nbNalu += units.length;\n        }\n    }\n\n}\n\nexport default FlvDemuxer;","import ExpGolomb from './exp-golomb.js';\n\nclass SPSParser {\n\n    static _ebsp2rbsp(uint8array) {\n        let src = uint8array;\n        let src_length = src.byteLength;\n        let dst = new Uint8Array(src_length);\n        let dst_idx = 0;\n\n        for (let i = 0; i < src_length; i++) {\n            if (i >= 2) {\n                // Unescape: Skip 0x03 after 00 00\n                if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n                    continue;\n                }\n            }\n            dst[dst_idx] = src[i];\n            dst_idx++;\n        }\n\n        return new Uint8Array(dst.buffer, 0, dst_idx);\n    }\n\n    static parseSPS(uint8array) {\n        let rbsp = SPSParser._ebsp2rbsp(uint8array);\n        let gb = new ExpGolomb(rbsp);\n\n        gb.readByte();\n        let profile_idc = gb.readByte();  // profile_idc\n        gb.readByte();  // constraint_set_flags[5] + reserved_zero[3]\n        let level_idc = gb.readByte();  // level_idc\n        gb.readUEG();  // seq_parameter_set_id\n\n        let profile_string = SPSParser.getProfileString(profile_idc);\n        let level_string = SPSParser.getLevelString(level_idc);\n        let chroma_format_idc = 1;\n        let chroma_format = 420;\n        let chroma_format_table = [0, 420, 422, 444];\n        let bit_depth = 8;\n\n        if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\n            profile_idc === 138 || profile_idc === 144) {\n\n            chroma_format_idc = gb.readUEG();\n            if (chroma_format_idc === 3) {\n                gb.readBits(1);  // separate_colour_plane_flag\n            }\n            if (chroma_format_idc <= 3) {\n                chroma_format = chroma_format_table[chroma_format_idc];\n            }\n\n            bit_depth = gb.readUEG() + 8;  // bit_depth_luma_minus8\n            gb.readUEG();  // bit_depth_chroma_minus8\n            gb.readBits(1);  // qpprime_y_zero_transform_bypass_flag\n            if (gb.readBool()) {  // seq_scaling_matrix_present_flag\n                let scaling_list_count = (chroma_format_idc !== 3) ? 8 : 12;\n                for (let i = 0; i < scaling_list_count; i++) {\n                    if (gb.readBool()) {  // seq_scaling_list_present_flag\n                        if (i < 6) {\n                            SPSParser._skipScalingList(gb, 16);\n                        } else {\n                            SPSParser._skipScalingList(gb, 64);\n                        }\n                    }\n                }\n            }\n        }\n        gb.readUEG();  // log2_max_frame_num_minus4\n        let pic_order_cnt_type = gb.readUEG();\n        if (pic_order_cnt_type === 0) {\n            gb.readUEG();  // log2_max_pic_order_cnt_lsb_minus_4\n        } else if (pic_order_cnt_type === 1) {\n            gb.readBits(1);  // delta_pic_order_always_zero_flag\n            gb.readSEG();  // offset_for_non_ref_pic\n            gb.readSEG();  // offset_for_top_to_bottom_field\n            let num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n            for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                gb.readSEG();  // offset_for_ref_frame\n            }\n        }\n        gb.readUEG();  // max_num_ref_frames\n        gb.readBits(1);  // gaps_in_frame_num_value_allowed_flag\n\n        let pic_width_in_mbs_minus1 = gb.readUEG();\n        let pic_height_in_map_units_minus1 = gb.readUEG();\n\n        let frame_mbs_only_flag = gb.readBits(1);\n        if (frame_mbs_only_flag === 0) {\n            gb.readBits(1);  // mb_adaptive_frame_field_flag\n        }\n        gb.readBits(1);  // direct_8x8_inference_flag\n\n        let frame_crop_left_offset = 0;\n        let frame_crop_right_offset = 0;\n        let frame_crop_top_offset = 0;\n        let frame_crop_bottom_offset = 0;\n\n        let frame_cropping_flag = gb.readBool();\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = gb.readUEG();\n            frame_crop_right_offset = gb.readUEG();\n            frame_crop_top_offset = gb.readUEG();\n            frame_crop_bottom_offset = gb.readUEG();\n        }\n\n        let sar_width = 1, sar_height = 1;\n        let fps = 0, fps_fixed = true, fps_num = 0, fps_den = 0;\n\n        let vui_parameters_present_flag = gb.readBool();\n        if (vui_parameters_present_flag) {\n            if (gb.readBool()) {  // aspect_ratio_info_present_flag\n                let aspect_ratio_idc = gb.readByte();\n                let sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                let sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\n\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\n                } else if (aspect_ratio_idc === 255) {\n                    sar_width = gb.readByte() << 8 | gb.readByte();\n                    sar_height = gb.readByte() << 8 | gb.readByte();\n                }\n            }\n\n            if (gb.readBool()) {  // overscan_info_present_flag\n                gb.readBool();  // overscan_appropriate_flag\n            }\n            if (gb.readBool()) {  // video_signal_type_present_flag\n                gb.readBits(4);  // video_format & video_full_range_flag\n                if (gb.readBool()) {  // colour_description_present_flag\n                    gb.readBits(24);  // colour_primaries & transfer_characteristics & matrix_coefficients\n                }\n            }\n            if (gb.readBool()) {  // chroma_loc_info_present_flag\n                gb.readUEG();  // chroma_sample_loc_type_top_field\n                gb.readUEG();  // chroma_sample_loc_type_bottom_field\n            }\n            if (gb.readBool()) {  // timing_info_present_flag\n                let num_units_in_tick = gb.readBits(32);\n                let time_scale = gb.readBits(32);\n                fps_fixed = gb.readBool();  // fixed_frame_rate_flag\n\n                fps_num = time_scale;\n                fps_den = num_units_in_tick * 2;\n                fps = fps_num / fps_den;\n            }\n        }\n\n        let sarScale = 1;\n        if (sar_width !== 1 || sar_height !== 1) {\n            sarScale = sar_width / sar_height;\n        }\n\n        let crop_unit_x = 0, crop_unit_y = 0;\n        if (chroma_format_idc === 0) {\n            crop_unit_x = 1;\n            crop_unit_y = 2 - frame_mbs_only_flag;\n        } else {\n            let sub_wc = (chroma_format_idc === 3) ? 1 : 2;\n            let sub_hc = (chroma_format_idc === 1) ? 2 : 1;\n            crop_unit_x = sub_wc;\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n        }\n\n        let codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n        let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n        let present_width = Math.ceil(codec_width * sarScale);\n\n        gb.destroy();\n        gb = null;\n\n        return {\n            profile_string: profile_string,  // baseline, high, high10, ...\n            level_string: level_string,  // 3, 3.1, 4, 4.1, 5, 5.1, ...\n            bit_depth: bit_depth,  // 8bit, 10bit, ...\n            chroma_format: chroma_format,  // 4:2:0, 4:2:2, ...\n            chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n            frame_rate: {\n                fixed: fps_fixed,\n                fps: fps,\n                fps_den: fps_den,\n                fps_num: fps_num\n            },\n\n            sar_ratio: {\n                width: sar_width,\n                height: sar_height\n            },\n\n            codec_size: {\n                width: codec_width,\n                height: codec_height\n            },\n\n            present_size: {\n                width: present_width,\n                height: codec_height\n            }\n        };\n    }\n\n    static _skipScalingList(gb, count) {\n        let last_scale = 8, next_scale = 8;\n        let delta_scale = 0;\n        for (let i = 0; i < count; i++) {\n            if (next_scale !== 0) {\n                delta_scale = gb.readSEG();\n                next_scale = (last_scale + delta_scale + 256) % 256;\n            }\n            last_scale = (next_scale === 0) ? last_scale : next_scale;\n        }\n    }\n\n    static getProfileString(profile_idc) {\n        switch (profile_idc) {\n            case 66:\n                return 'Baseline';\n            case 77:\n                return 'Main';\n            case 88:\n                return 'Extended';\n            case 100:\n                return 'High';\n            case 110:\n                return 'High10';\n            case 122:\n                return 'High422';\n            case 244:\n                return 'High444';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    static getLevelString(level_idc) {\n        return (level_idc / 10).toFixed(1);\n    }\n\n    static getChromaFormatString(chroma) {\n        switch (chroma) {\n            case 420:\n                return '4:2:0';\n            case 422:\n                return '4:2:2';\n            case 444:\n                return '4:4:4';\n            default:\n                return 'Unknown';\n        }\n    }\n\n}\n\nexport default SPSParser;","import Polyfill from './utils/polyfill.js';\nimport Features from './core/features.js';\nimport FlvPlayer from './player/flv-player.js';\nimport NativePlayer from './player/native-player.js';\nimport PlayerEvents from './player/player-events.js';\nimport {ErrorTypes, ErrorDetails} from './player/player-errors.js';\nimport LoggingControl from './utils/logging-control.js';\nimport {InvalidArgumentException} from './utils/exception.js';\n\n// entry/index file\n\n// install polyfills\nPolyfill.install();\n\n\n// factory method\nfunction createPlayer(mediaDataSource, optionalConfig) {\n    let mds = mediaDataSource;\n    if (mds == null || typeof mds !== 'object') {\n        throw new InvalidArgumentException('MediaDataSource must be an javascript object!');\n    }\n\n    if (!mds.hasOwnProperty('type')) {\n        throw new InvalidArgumentException('MediaDataSource must has type field to indicate video file type!');\n    }\n\n    switch (mds.type) {\n        case 'flv':\n            return new FlvPlayer(mds, optionalConfig);\n        default:\n            return new NativePlayer(mds, optionalConfig);\n    }\n}\n\n\n// feature detection\nfunction isSupported() {\n    return Features.supportMSEH264Playback();\n}\n\nfunction getFeatureList() {\n    return Features.getFeatureList();\n}\n\n\n// interfaces\nlet flvjs = {};\n\nflvjs.createPlayer = createPlayer;\nflvjs.isSupported = isSupported;\nflvjs.getFeatureList = getFeatureList;\n\nflvjs.Events = PlayerEvents;\nflvjs.ErrorTypes = ErrorTypes;\nflvjs.ErrorDetails = ErrorDetails;\n\nflvjs.FlvPlayer = FlvPlayer;\nflvjs.NativePlayer = NativePlayer;\nflvjs.LoggingControl = LoggingControl;\n\n\n// export interfaces to global context\nwindow.flvjs = flvjs;\nexport default flvjs;","import Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n/* fetch + stream IO loader. Currently working on chrome 43+.\n * fetch provides a better alternative http API to XMLHttpRequest\n *\n * fetch spec   https://fetch.spec.whatwg.org/\n * stream spec  https://streams.spec.whatwg.org/\n */\nclass FetchStreamLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            // fetch + stream is broken on Microsoft Edge. Disable for now.\n            // see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8196907/\n            return (self.fetch && self.ReadableStream && !Browser.msedge);\n        } catch (e) {\n            return false;\n        }\n    }\n\n    constructor(seekHandler) {\n        super('fetch-stream-loader');\n        this.TAG = this.constructor.name;\n\n        this._seekHandler = seekHandler;\n        this._needStash = true;\n\n        this._requestAbort = false;\n        this._contentLength = null;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n\n        let seekConfig = this._seekHandler.getConfig(dataSource.url, range);\n\n        let headers = new self.Headers();\n\n        if (typeof seekConfig.headers === 'object') {\n            let configHeaders = seekConfig.headers;\n            for (let key in configHeaders) {\n                if (configHeaders.hasOwnProperty(key)) {\n                    headers.append(key, configHeaders[key]);\n                }\n            }\n        }\n\n        let url = seekConfig.url;\n        let params = {\n            method: 'GET',\n            headers: headers,\n            mode: 'cors',\n            cache: 'default'\n        };\n\n        // cors is enabled by default\n        if (dataSource.cors === false) {\n            // no-cors means 'disregard cors policy', which can only be used in ServiceWorker\n            params.mode = 'same-origin';\n        }\n\n        // withCredentials is disabled by default\n        if (dataSource.withCredentials) {\n            params.credentials = 'include';\n        }\n\n        this._status = LoaderStatus.kConnecting;\n        self.fetch(url, params).then((res) => {\n            if (this._requestAbort) {\n                this._requestAbort = false;\n                this._status = LoaderStatus.kIdle;\n                return;\n            }\n            if (res.ok && (res.status >= 200 && res.status <= 299)) {\n                let lengthHeader = res.headers.get('Content-Length');\n                if (lengthHeader != null) {\n                    this._contentLength = parseInt(lengthHeader);\n                    if (this._contentLength !== 0) {\n                        if (this._onContentLengthKnown) {\n                            this._onContentLengthKnown(this._contentLength);\n                        }\n                    }\n                }\n                return this._pump.call(this, res.body.getReader());\n            } else {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: res.status, msg: res.statusText});\n                } else {\n                    throw new RuntimeException('FetchStreamLoader: Http code invalid, ' + res.status + ' ' + res.statusText);\n                }\n            }\n        }).catch((e) => {\n            this._status = LoaderStatus.kError;\n            if (this._onError) {\n                this._onError(LoaderErrors.EXCEPTION, {code: -1, msg: e.message});\n            } else {\n                throw e;\n            }\n        });\n    }\n\n    abort() {\n        this._requestAbort = true;\n    }\n\n    _pump(reader) {  // ReadableStreamReader\n        return reader.read().then((result) => {\n            if (result.done) {\n                this._status = LoaderStatus.kComplete;\n                if (this._onComplete) {\n                    this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n                }\n            } else {\n                if (this._requestAbort === true) {\n                    this._requestAbort = false;\n                    this._status = LoaderStatus.kComplete;\n                    return reader.cancel();\n                }\n\n                this._status = LoaderStatus.kBuffering;\n\n                let chunk = result.value.buffer;\n                let byteStart = this._range.from + this._receivedLength;\n                this._receivedLength += chunk.byteLength;\n\n                if (this._onDataArrival) {\n                    this._onDataArrival(chunk, byteStart, this._receivedLength);\n                }\n\n                return this._pump(reader);\n            }\n        }).catch((e) => {\n            this._status = LoaderStatus.kError;\n            let type = 0;\n            let info = null;\n\n            if (e.code === 19 && // NETWORK_ERR\n                (this._contentLength === null ||\n                (this._contentLength !== null && this._receivedLength < this._contentLength))) {\n                type = LoaderErrors.EARLY_EOF;\n                info = {code: e.code, msg: 'Fetch stream meet Early-EOF'};\n            } else {\n                type = LoaderErrors.EXCEPTION;\n                info = {code: e.code, msg: e.message};\n            }\n\n            if (this._onError) {\n                this._onError(type, info);\n            } else {\n                throw new RuntimeException(info.msg);\n            }\n        });\n    }\n\n}\n\nexport default FetchStreamLoader;","import Log from '../utils/logger.js';\nimport SpeedSampler from './speed-sampler.js';\nimport {LoaderStatus, LoaderErrors} from './loader.js';\nimport FetchStreamLoader from './fetch-stream-loader.js';\nimport MozChunkedLoader from './xhr-moz-chunked-loader.js';\nimport MSStreamLoader from './xhr-msstream-loader.js';\nimport RangeLoader from './xhr-range-loader.js';\nimport WebSocketLoader from './websocket-loader.js';\nimport RangeSeekHandler from './range-seek-handler.js';\nimport ParamSeekHandler from './param-seek-handler.js';\nimport {RuntimeException, IllegalStateException, InvalidArgumentException} from '../utils/exception.js';\n\n/**\n * DataSource: {\n *     url: string,\n *     filesize: number,\n *     cors: boolean,\n *     withCredentials: boolean\n * }\n * \n */\n\n// Manage IO Loaders\nclass IOController {\n\n    constructor(dataSource, config, extraData) {\n        this.TAG = this.constructor.name;\n\n        this._config = config;\n        this._extraData = extraData;\n\n        this._stashInitialSize = 1024 * 384;  // default initial size: 384KB\n        if (config.isLive === true) {\n            this._stashInitialSize = 1024 * 512;  // default live initial size: 512KB\n        }\n        if (config.stashInitialSize != undefined && config.stashInitialSize > 0) {\n            // apply from config\n            this._stashInitialSize = config.stashInitialSize;\n        }\n\n        this._stashUsed = 0;\n        this._stashSize = this._stashInitialSize;\n        this._bufferSize = 1024 * 1024 * 3;  // initial size: 3MB\n        this._stashBuffer = new ArrayBuffer(this._bufferSize);\n        this._stashByteStart = 0;\n        this._enableStash = true;\n        if (config.enableStashBuffer === false) {\n            this._enableStash = false;\n        }\n\n        this._loader = null;\n        this._loaderClass = null;\n        this._seekHandler = null;\n\n        this._dataSource = dataSource;\n        this._isWebSocketURL = /wss?:\\/\\/(.+?)\\//.test(dataSource.url);\n        this._refTotalLength = dataSource.filesize ? dataSource.filesize : null;\n        this._totalLength = this._refTotalLength;\n        this._fullRequestFlag = false;\n        this._currentRange = null;\n\n        this._speed = 0;\n        this._speedNormalized = 0;\n        this._speedSampler = new SpeedSampler();\n        this._speedNormalizeList = [64, 128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096];\n\n        this._isEarlyEofReconnecting = false;\n\n        this._paused = false;\n        this._resumeFrom = 0;\n\n        this._onDataArrival = null;\n        this._onSeeked = null;\n        this._onError = null;\n        this._onComplete = null;\n        this._onRecoveredEarlyEof = null;\n\n        this._selectSeekHandler();\n        this._selectLoader();\n        this._createLoader();\n    }\n\n    destroy() {\n        if (this._loader.isWorking()) {\n            this._loader.abort();\n        }\n        this._loader.destroy();\n        this._loader = null;\n        this._loaderClass = null;\n        this._dataSource = null;\n        this._stashBuffer = null;\n        this._stashUsed = this._stashSize = this._bufferSize = this._stashByteStart = 0;\n        this._currentRange = null;\n        this._speedSampler = null;\n\n        this._isEarlyEofReconnecting = false;\n\n        this._onDataArrival = null;\n        this._onSeeked = null;\n        this._onError = null;\n        this._onComplete = null;\n        this._onRecoveredEarlyEof = null;\n\n        this._extraData = null;\n    }\n\n    isWorking() {\n        return this._loader && this._loader.isWorking() && !this._paused;\n    }\n\n    isPaused() {\n        return this._paused;\n    }\n\n    get status() {\n        return this._loader.status;\n    }\n\n    get extraData() {\n        return this._extraData;\n    }\n\n    set extraData(data) {\n        this._extraData = data;\n    }\n\n    // prototype: function onDataArrival(chunks: ArrayBuffer, byteStart: number): number\n    get onDataArrival() {\n        return this._onDataArrival;\n    }\n\n    set onDataArrival(callback) {\n        this._onDataArrival = callback;\n    }\n\n    get onSeeked() {\n        return this._onSeeked;\n    }\n\n    set onSeeked(callback) {\n        this._onSeeked = callback;\n    }\n\n    // prototype: function onError(type: number, info: {code: number, msg: string}): void\n    get onError() {\n        return this._onError;\n    }\n\n    set onError(callback) {\n        this._onError = callback;\n    }\n\n    get onComplete() {\n        return this._onComplete;\n    }\n\n    set onComplete(callback) {\n        this._onComplete = callback;\n    }\n\n    get onRecoveredEarlyEof() {\n        return this._onRecoveredEarlyEof;\n    }\n\n    set onRecoveredEarlyEof(callback) {\n        this._onRecoveredEarlyEof = callback;\n    }\n\n    get currentUrl() {\n        return this._dataSource.url;\n    }\n\n    // in KB/s\n    get currentSpeed() {\n        if (this._loaderClass === RangeLoader) {\n            // this._speed is inaccuracy if loader is RangeLoader\n            return this._loader.currentSpeed;\n        }\n        return this._speed;\n    }\n\n    get loaderType() {\n        return this._loader.type;\n    }\n\n    _selectSeekHandler() {\n        let config = this._config;\n\n        if (config.seekType === 'range') {\n            this._seekHandler = new RangeSeekHandler();\n        } else if (config.seekType === 'param') {\n            let paramStart = config.seekParamStart || 'bstart';\n            let paramEnd = config.seekParamEnd || 'bend';\n\n            this._seekHandler = new ParamSeekHandler(paramStart, paramEnd);\n        } else if (config.seekType === 'custom') {\n            if (typeof config.customSeekHandler !== 'function') {\n                throw new InvalidArgumentException('Custom seekType specified in config but invalid customSeekHandler!');\n            }\n            this._seekHandler = new config.customSeekHandler();\n        } else {\n            throw new InvalidArgumentException(`Invalid seekType in config: ${config.seekType}`);\n        }\n    }\n\n    _selectLoader() {\n        if (this._isWebSocketURL) {\n            this._loaderClass = WebSocketLoader;\n        } else if (FetchStreamLoader.isSupported()) {\n            this._loaderClass = FetchStreamLoader;\n        } else if (MozChunkedLoader.isSupported()) {\n            this._loaderClass = MozChunkedLoader;\n        } else if (RangeLoader.isSupported()) {\n            this._loaderClass = RangeLoader;\n        } else {\n            throw new RuntimeException('Your browser doesn\\'t support xhr with arraybuffer responseType!');\n        }\n    }\n\n    _createLoader() {\n        this._loader = new this._loaderClass(this._seekHandler);\n        if (this._loader.needStashBuffer === false) {\n            this._enableStash = false;\n        }\n        this._loader.onContentLengthKnown = this._onContentLengthKnown.bind(this);\n        this._loader.onDataArrival = this._onLoaderChunkArrival.bind(this);\n        this._loader.onComplete = this._onLoaderComplete.bind(this);\n        this._loader.onError = this._onLoaderError.bind(this);\n    }\n\n    open(optionalFrom) {\n        this._currentRange = {from: 0, to: -1};\n        if (optionalFrom) {\n            this._currentRange.from = optionalFrom;\n        }\n\n        this._speedSampler.reset();\n        if (!optionalFrom) {\n            this._fullRequestFlag = true;\n        }\n\n        this._loader.open(this._dataSource, Object.assign({}, this._currentRange));\n    }\n\n    abort() {\n        this._loader.abort();\n\n        if (this._paused) {\n            this._paused = false;\n            this._resumeFrom = 0;\n        }\n    }\n\n    pause() {\n        if (this.isWorking()) {\n            this._loader.abort();\n\n            if (this._stashUsed !== 0) {\n                this._resumeFrom = this._stashByteStart;\n                this._currentRange.to = this._stashByteStart - 1;\n            } else {\n                this._resumeFrom = this._currentRange.to + 1;\n            }\n            this._stashUsed = 0;\n            this._stashByteStart = 0;\n            this._paused = true;\n        }\n    }\n\n    resume() {\n        if (this._paused) {\n            this._paused = false;\n            let bytes = this._resumeFrom;\n            this._resumeFrom = 0;\n            this._internalSeek(bytes, true);\n        }\n    }\n\n    seek(bytes) {\n        this._paused = false;\n        this._stashUsed = 0;\n        this._stashByteStart = 0;\n        this._internalSeek(bytes, true);\n    }\n\n    /**\n     * When seeking request is from media seeking, unconsumed stash data should be dropped\n     * However, stash data shouldn't be dropped if seeking requested from http reconnection\n     *\n     * @dropUnconsumed: Ignore and discard all unconsumed data in stash buffer\n     */\n    _internalSeek(bytes, dropUnconsumed) {\n        if (this._loader.isWorking()) {\n            this._loader.abort();\n        }\n\n        // dispatch & flush stash buffer before seek\n        this._flushStashBuffer(dropUnconsumed);\n\n        this._loader.destroy();\n        this._loader = null;\n\n        let requestRange = {from: bytes, to: -1};\n        this._currentRange = {from: requestRange.from, to: -1};\n\n        this._speed = 0;\n        this._speedSampler.reset();\n        this._stashSize = this._stashInitialSize;\n        this._createLoader();\n        this._loader.open(this._dataSource, requestRange);\n\n        if (this._onSeeked) {\n            this._onSeeked();\n        }\n    }\n\n    updateUrl(url) {\n        if (!url || typeof url !== 'string' || url.length === 0) {\n            throw new InvalidArgumentException('Url must be a non-empty string!');\n        }\n\n        this._dataSource.url = url;\n\n        // TODO: replace with new url\n    }\n\n    _expandBuffer(expectedBytes) {\n        let bufferNewSize = this._stashSize;\n        while (bufferNewSize + 1024 * 1024 * 1 < expectedBytes) {\n            bufferNewSize *= 2;\n        }\n\n        bufferNewSize += 1024 * 1024 * 1;  // bufferSize = stashSize + 1MB\n        if (bufferNewSize === this._bufferSize) {\n            return;\n        }\n\n        let newBuffer = new ArrayBuffer(bufferNewSize);\n\n        if (this._stashUsed > 0) {  // copy existing data into new buffer\n            let stashOldArray = new Uint8Array(this._stashBuffer, 0, this._stashUsed);\n            let stashNewArray = new Uint8Array(newBuffer, 0, bufferNewSize);\n            stashNewArray.set(stashOldArray, 0);\n        }\n\n        this._stashBuffer = newBuffer;\n        this._bufferSize = bufferNewSize;\n    }\n\n    _normalizeSpeed(input) {\n        let list = this._speedNormalizeList;\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (input < list[0]) {\n            return list[0];\n        }\n\n        // binary search\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (input >= list[mid] && input < list[mid + 1])) {\n                return list[mid];\n            } else if (list[mid] < input) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n    }\n\n    _adjustStashSize(normalized) {\n        let stashSizeKB = 0;\n\n        if (this._config.isLive) {\n            // live stream: always use single normalized speed for size of stashSizeKB\n            stashSizeKB = normalized;\n        } else {\n            if (normalized < 512) {\n                stashSizeKB = normalized;\n            } else if (normalized >= 512 && normalized <= 1024) {\n                stashSizeKB = Math.floor(normalized * 1.5);\n            } else {\n                stashSizeKB = normalized * 2;\n            }\n        }\n\n        if (stashSizeKB > 8192) {\n            stashSizeKB = 8192;\n        }\n\n        let bufferSize = stashSizeKB * 1024 + 1024 * 1024 * 1;  // stashSize + 1MB\n        if (this._bufferSize < bufferSize) {\n            this._expandBuffer(bufferSize);\n        }\n        this._stashSize = stashSizeKB * 1024;\n    }\n\n    _dispatchChunks(chunks, byteStart) {\n        this._currentRange.to = byteStart + chunks.byteLength - 1;\n        return this._onDataArrival(chunks, byteStart);\n    }\n\n    _onContentLengthKnown(contentLength) {\n        if (contentLength && this._fullRequestFlag) {\n            this._totalLength = contentLength;\n            this._fullRequestFlag = false;\n        }\n    }\n\n    _onLoaderChunkArrival(chunk, byteStart, receivedLength) {\n        if (!this._onDataArrival) {\n            throw new IllegalStateException('IOController: No existing consumer (onDataArrival) callback!');\n        }\n        if (this._paused) {\n            return;\n        }\n        if (this._isEarlyEofReconnecting) {\n            // Auto-reconnect for EarlyEof succeed, notify to upper-layer by callback\n            this._isEarlyEofReconnecting = false;\n            if (this._onRecoveredEarlyEof) {\n                this._onRecoveredEarlyEof();\n            }\n        }\n\n        this._speedSampler.addBytes(chunk.byteLength);\n\n        // adjust stash buffer size according to network speed dynamically\n        let KBps = this._speedSampler.lastSecondKBps;\n        if (KBps !== 0) {\n            this._speed = KBps;\n            let normalized = this._normalizeSpeed(KBps);\n            if (this._speedNormalized !== normalized) {\n                this._speedNormalized = normalized;\n                this._adjustStashSize(normalized);\n            }\n        }\n\n        if (!this._enableStash) {  // disable stash\n            if (this._stashUsed === 0) {\n                // dispatch chunk directly to consumer;\n                // check ret value (consumed bytes) and stash unconsumed to stashBuffer\n                let consumed = this._dispatchChunks(chunk, byteStart);\n                if (consumed < chunk.byteLength) {  // unconsumed data remain.\n                    let remain = chunk.byteLength - consumed;\n                    if (remain > this._bufferSize) {\n                        this._expandBuffer(remain);\n                    }\n                    let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                    stashArray.set(new Uint8Array(chunk, consumed), 0);\n                    this._stashUsed += remain;\n                    this._stashByteStart = byteStart + consumed;\n                }\n            } else {\n                // else: Merge chunk into stashBuffer, and dispatch stashBuffer to consumer.\n                if (this._stashUsed + chunk.byteLength > this._bufferSize) {\n                    this._expandBuffer(this._stashUsed + chunk.byteLength);\n                }\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                stashArray.set(new Uint8Array(chunk), this._stashUsed);\n                this._stashUsed += chunk.byteLength;\n                let consumed = this._dispatchChunks(this._stashBuffer.slice(0, this._stashUsed), this._stashByteStart);\n                if (consumed < this._stashUsed && consumed > 0) {  // unconsumed data remain\n                    let remainArray = new Uint8Array(this._stashBuffer, consumed);\n                    stashArray.set(remainArray, 0);\n                }\n                this._stashUsed -= consumed;\n                this._stashByteStart += consumed;\n            }\n        } else {  // enable stash\n            if (this._stashUsed === 0 && this._stashByteStart === 0) {  // seeked? or init chunk?\n                // This is the first chunk after seek action\n                this._stashByteStart = byteStart;\n            }\n            if (this._stashUsed + chunk.byteLength <= this._stashSize) {\n                // just stash\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._stashSize);\n                stashArray.set(new Uint8Array(chunk), this._stashUsed);\n                this._stashUsed += chunk.byteLength;\n            } else {  // stashUsed + chunkSize > stashSize, size limit exceeded\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                if (this._stashUsed > 0) {  // There're stash datas in buffer\n                    // dispatch the whole stashBuffer, and stash remain data\n                    // then append chunk to stashBuffer (stash)\n                    let buffer = this._stashBuffer.slice(0, this._stashUsed);\n                    let consumed = this._dispatchChunks(buffer, this._stashByteStart);\n                    if (consumed < buffer.byteLength) {\n                        if (consumed > 0) {\n                            let remainArray = new Uint8Array(buffer, consumed);\n                            stashArray.set(remainArray, 0);\n                            this._stashUsed = remainArray.byteLength;\n                            this._stashByteStart += consumed;\n                        }\n                    } else {\n                        this._stashUsed = 0;\n                        this._stashByteStart += consumed;\n                    }\n                    if (this._stashUsed + chunk.byteLength > this._bufferSize) {\n                        this._expandBuffer(this._stashUsed + chunk.byteLength);\n                        stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                    }\n                    stashArray.set(new Uint8Array(chunk), this._stashUsed);\n                    this._stashUsed += chunk.byteLength;\n                } else {  // stash buffer empty, but chunkSize > stashSize (oh, holy shit)\n                    // dispatch chunk directly and stash remain data\n                    let consumed = this._dispatchChunks(chunk, byteStart);\n                    if (consumed < chunk.byteLength) {\n                        let remain = chunk.byteLength - consumed;\n                        if (remain > this._bufferSize) {\n                            this._expandBuffer(remain);\n                            stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                        }\n                        stashArray.set(new Uint8Array(chunk, consumed), 0);\n                        this._stashUsed += remain;\n                        this._stashByteStart = byteStart + consumed;\n                    }\n                }\n            }\n        }\n    }\n\n    _flushStashBuffer(dropUnconsumed) {\n        if (this._stashUsed > 0) {\n            let buffer = this._stashBuffer.slice(0, this._stashUsed);\n            let consumed = this._dispatchChunks(buffer, this._stashByteStart);\n            let remain = buffer.byteLength - consumed;\n\n            if (consumed < buffer.byteLength) {\n                if (dropUnconsumed) {\n                    Log.w(this.TAG, `${remain} bytes unconsumed data remain when flush buffer, dropped`);\n                } else {\n                    if (consumed > 0) {\n                        let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\n                        let remainArray = new Uint8Array(buffer, consumed);\n                        stashArray.set(remainArray, 0);\n                        this._stashUsed = remainArray.byteLength;\n                        this._stashByteStart += consumed;\n                    }\n                    return 0;\n                }\n            }\n            this._stashUsed = 0;\n            this._stashByteStart = 0;\n            return remain;\n        }\n        return 0;\n    }\n\n    _onLoaderComplete(from, to) {\n        // Force-flush stash buffer, and drop unconsumed data\n        this._flushStashBuffer(true);\n\n        if (this._onComplete) {\n            this._onComplete(this._extraData);\n        }\n    }\n\n    _onLoaderError(type, data) {\n        Log.e(this.TAG, `Loader error, code = ${data.code}, msg = ${data.msg}`);\n\n        this._flushStashBuffer(false);\n\n        if (this._isEarlyEofReconnecting) {\n            // Auto-reconnect for EarlyEof failed, throw UnrecoverableEarlyEof error to upper-layer\n            this._isEarlyEofReconnecting = false;\n            type = LoaderErrors.UNRECOVERABLE_EARLY_EOF;\n        }\n\n        switch (type) {\n            case LoaderErrors.EARLY_EOF: {\n                if (!this._config.isLive) {\n                    // Do internal http reconnect if not live stream\n                    if (this._totalLength) {\n                        let nextFrom = this._currentRange.to + 1;\n                        if (nextFrom < this._totalLength) {\n                            Log.w(this.TAG, 'Connection lost, trying reconnect...');\n                            this._isEarlyEofReconnecting = true;\n                            this._internalSeek(nextFrom, false);\n                        }\n                        return;\n                    }\n                    // else: We don't know totalLength, throw UnrecoverableEarlyEof\n                }\n                // live stream: throw UnrecoverableEarlyEof error to upper-layer\n                type = LoaderErrors.UNRECOVERABLE_EARLY_EOF;\n                break;\n            }\n            case LoaderErrors.UNRECOVERABLE_EARLY_EOF:\n            case LoaderErrors.CONNECTING_TIMEOUT:\n            case LoaderErrors.HTTP_STATUS_CODE_INVALID:\n            case LoaderErrors.EXCEPTION:\n                break;\n        }\n\n        if (this._onError) {\n            this._onError(type, data);\n        } else {\n            throw new RuntimeException('IOException: ' + data.msg);\n        }\n    }\n\n}\n\nexport default IOController;","import {NotImplementedException} from '../utils/exception.js';\n\nexport const LoaderStatus = {\n    kIdle: 0,\n    kConnecting: 1,\n    kBuffering: 2,\n    kError: 3,\n    kComplete: 4\n};\n\nexport const LoaderErrors = {\n    OK: 'OK',\n    EXCEPTION: 'Exception',\n    HTTP_STATUS_CODE_INVALID: 'HttpStatusCodeInvalid',\n    CONNECTING_TIMEOUT: 'ConnectingTimeout',\n    EARLY_EOF: 'EarlyEof',\n    UNRECOVERABLE_EARLY_EOF: 'UnrecoverableEarlyEof'\n};\n\n/* Loader has callbacks which have following prototypes:\n *     function onContentLengthKnown(contentLength: number): void\n *     function onDataArrival(chunk: ArrayBuffer, byteStart: number, receivedLength: number): void\n *     function onError(errorType: number, errorInfo: {code: number, msg: string}): void\n *     function onComplete(rangeFrom: number, rangeTo: number): void\n */\nexport class BaseLoader {\n\n    constructor(typeName) {\n        this._type = typeName || 'undefined';\n        this._status = LoaderStatus.kIdle;\n        this._needStash = false;\n        // callbacks\n        this._onContentLengthKnown = null;\n        this._onDataArrival = null;\n        this._onError = null;\n        this._onComplete = null;\n    }\n\n    destroy() {\n        this._status = LoaderStatus.kIdle;\n        this._onContentLengthKnown = null;\n        this._onDataArrival = null;\n        this._onError = null;\n        this._onComplete = null;\n    }\n\n    isWorking() {\n        return this._status === LoaderStatus.kConnecting || this._status === LoaderStatus.kBuffering;\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    get needStashBuffer() {\n        return this._needStash;\n    }\n\n    get onContentLengthKnown() {\n        return this._onContentLengthKnown;\n    }\n\n    set onContentLengthKnown(callback) {\n        this._onContentLengthKnown = callback;\n    }\n\n    get onDataArrival() {\n        return this._onDataArrival;\n    }\n\n    set onDataArrival(callback) {\n        this._onDataArrival = callback;\n    }\n\n    get onError() {\n        return this._onError;\n    }\n\n    set onError(callback) {\n        this._onError = callback;\n    }\n\n    get onComplete() {\n        return this._onComplete;\n    }\n\n    set onComplete(callback) {\n        this._onComplete = callback;\n    }\n\n    // pure virtual\n    open(dataSource, range) {\n        throw new NotImplementedException('Unimplemented abstract function!');\n    }\n\n    abort() {\n        throw new NotImplementedException('Unimplemented abstract function!');\n    }\n\n\n}","class ParamSeekHandler {\n\n    constructor(paramStart, paramEnd) {\n        this._startName = paramStart;\n        this._endName = paramEnd;\n    }\n\n    getConfig(baseUrl, range) {\n        let url = baseUrl;\n\n        if (range.from !== 0 || range.to !== -1) {\n            let needAnd = true;\n            if (url.indexOf('?') === -1) {\n                url += '?';\n                needAnd = false;\n            }\n\n            if (needAnd) {\n                url += '&';\n            }\n\n            url += `${this._startName}=${range.from.toString()}`;\n\n            if (range.to !== -1) {\n                url += `&${this._endName}=${range.to.toString()}`;\n            }\n        }\n\n        return {\n            url: url,\n            headers: {}\n        };\n    }\n}\n\nexport default ParamSeekHandler;","class RangeSeekHandler {\n\n    constructor() {\n\n    }\n\n    getConfig(url, range) {\n        let headers = {};\n\n        if (range.from !== 0 || range.to !== -1) {\n            let param;\n            if (range.to !== -1) {\n                param = `bytes=${range.from.toString()}-${range.to.toString()}`;\n            } else {\n                param = `bytes=${range.from.toString()}-`;\n            }\n            headers['Range'] = param;\n        }\n\n        return {\n            url: url,\n            headers: headers\n        };\n    }\n\n}\n\nexport default RangeSeekHandler;","// Utility class to calculate realtime network I/O speed\n\nclass SpeedSampler {\n\n    constructor() {\n        // milliseconds\n        this._firstCheckpoint = 0;\n        this._lastCheckpoint = 0;\n        this._intervalBytes = 0;\n        this._totalBytes = 0;\n        this._lastSecondBytes = 0;\n\n        // compatibility detection\n        if (self.performance && self.performance.now) {\n            this._now = self.performance.now.bind(self.performance);\n        } else {\n            this._now = Date.now;\n        }\n    }\n\n    reset() {\n        this._firstCheckpoint = this._lastCheckpoint = 0;\n        this._totalBytes = this._intervalBytes = 0;\n        this._lastSecondBytes = 0;\n    }\n\n    addBytes(bytes) {\n        if (this._firstCheckpoint === 0) {\n            this._firstCheckpoint = this._now();\n            this._lastCheckpoint = this._firstCheckpoint;\n            this._intervalBytes += bytes;\n            this._totalBytes += bytes;\n        } else if (this._now() - this._lastCheckpoint < 1000) {\n            this._intervalBytes += bytes;\n            this._totalBytes += bytes;\n        } else {  // duration >= 1000\n            this._lastSecondBytes = this._intervalBytes;\n            this._intervalBytes = bytes;\n            this._totalBytes += bytes;\n            this._lastCheckpoint = this._now();\n        }\n    }\n\n    get currentKBps() {\n        let durationSeconds = (this._now() - this._lastCheckpoint) / 1000;\n        return (this._intervalBytes / durationSeconds) / 1024;\n    }\n\n    get lastSecondKBps() {\n        if (this._lastSecondBytes !== 0) {\n            return this._lastSecondBytes / 1024;\n        } else {  // lastSecondBytes === 0\n            if (this._now() - this._lastCheckpoint >= 500) {\n                // if time interval since last checkpoint has exceeded 500ms\n                // the speed is nearly accurate\n                return this.currentKBps;\n            } else {\n                // We don't know\n                return 0;\n            }\n        }\n    }\n\n    get averageKBps() {\n        let durationSeconds = (this._now() - this._firstCheckpoint) / 1000;\n        return (this._totalBytes / durationSeconds) / 1024;\n    }\n\n}\n\nexport default SpeedSampler;","import Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// For FLV over WebSocket live stream\nclass WebSocketLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            return (typeof self.WebSocket !== 'undefined');\n        } catch (e) {\n            return false;\n        }\n    }\n\n    constructor() {\n        super('websocket-loader');\n        this.TAG = this.constructor.name;\n\n        this._needStash = true;\n\n        this._ws = null;\n        this._requestAbort = false;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this._ws) {\n            this.abort();\n        }\n        super.destroy();\n    }\n\n    open(dataSource) {\n        try {\n            let ws = this._ws = new self.WebSocket(dataSource.url);\n            ws.binaryType = 'arraybuffer';\n            ws.onopen = this._onWebSocketOpen.bind(this);\n            ws.onclose = this._onWebSocketClose.bind(this);\n            ws.onmessage = this._onWebSocketMessage.bind(this);\n            ws.onerror = this._onWebSocketError.bind(this);\n\n            this._status = LoaderStatus.kConnecting;\n        } catch (e) {\n            this._status = LoaderStatus.kError;\n\n            let info = {code: e.code, msg: e.message};\n\n            if (this._onError) {\n                this._onError(LoaderErrors.EXCEPTION, info);\n            } else {\n                throw new RuntimeException(info.msg);\n            }\n        }\n    }\n\n    abort() {\n        let ws = this._ws;\n        if (ws && (ws.readyState === 0 || ws.readyState === 1)) {  // CONNECTING || OPEN\n            this._requestAbort = true;\n            ws.close();\n        }\n\n        this._ws = null;\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _onWebSocketOpen(e) {\n        this._status = LoaderStatus.kBuffering;\n    }\n\n    _onWebSocketClose(e) {\n        if (this._requestAbort === true) {\n            this._requestAbort = false;\n            return;\n        }\n\n        this._status = LoaderStatus.kComplete;\n\n        if (this._onComplete) {\n            this._onComplete(0, this._receivedLength - 1);\n        }\n    }\n\n    _onWebSocketMessage(e) {\n        let chunk = e.data;\n        let byteStart = this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n    }\n\n    _onWebSocketError(e) {\n        this._status = LoaderStatus.kError;\n\n        let info = {\n            code: e.code,\n            msg: e.message\n        };\n\n        if (this._onError) {\n            this._onError(LoaderErrors.EXCEPTION, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default WebSocketLoader;","import Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// For FireFox browser which supports `xhr.responseType = 'moz-chunked-arraybuffer'`\nclass MozChunkedLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            let xhr = new XMLHttpRequest();\n            // Firefox 37- requires .open() to be called before setting responseType\n            xhr.open('GET', 'https://example.com', true);\n            xhr.responseType = 'moz-chunked-arraybuffer';\n            return (xhr.responseType === 'moz-chunked-arraybuffer');\n        } catch (e) {\n            Log.w('MozChunkedLoader', e.message);\n            return false;\n        }\n    }\n\n    constructor(seekHandler) {\n        super('xhr-moz-chunked-loader');\n        this.TAG = this.constructor.name;\n\n        this._seekHandler = seekHandler;\n        this._needStash = true;\n\n        this._xhr = null;\n        this._requestAbort = false;\n        this._contentLength = null;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onloadend = null;\n            this._xhr.onerror = null;\n            this._xhr = null;\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n\n        let seekConfig = this._seekHandler.getConfig(dataSource.url, range);\n\n        let xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', seekConfig.url, true);\n        xhr.responseType = 'moz-chunked-arraybuffer';\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n        xhr.onprogress = this._onProgress.bind(this);\n        xhr.onloadend = this._onLoadEnd.bind(this);\n        xhr.onerror = this._onXhrError.bind(this);\n\n        // cors is auto detected and enabled by xhr\n\n        // withCredentials is disabled by default\n        if (dataSource.withCredentials && xhr['withCredentials']) {\n            xhr.withCredentials = true;\n        }\n\n        if (typeof seekConfig.headers === 'object') {\n            let headers = seekConfig.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        this._status = LoaderStatus.kConnecting;\n        xhr.send();\n    }\n\n    abort() {\n        this._requestAbort = true;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _onReadyStateChange(e) {\n        let xhr = e.target;\n\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\n            if (xhr.status !== 0 && (xhr.status < 200 || xhr.status > 299)) {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\n                } else {\n                    throw new RuntimeException('MozChunkedLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n                }\n            } else {\n                this._status = LoaderStatus.kBuffering;\n            }\n        }\n    }\n\n    _onProgress(e) {\n        if (this._contentLength === null) {\n            if (e.total !== null && e.total !== 0) {\n                this._contentLength = e.total;\n                if (this._onContentLengthKnown) {\n                    this._onContentLengthKnown(this._contentLength);\n                }\n            }\n        }\n\n        let chunk = e.target.response;\n        let byteStart = this._range.from + this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n    }\n\n    _onLoadEnd(e) {\n        if (this._requestAbort === true) {\n            this._requestAbort = false;\n            return;\n        } else if (this._status === LoaderStatus.kError) {\n            return;\n        }\n\n        this._status = LoaderStatus.kComplete;\n        if (this._onComplete) {\n            this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n        }\n    }\n\n    _onXhrError(e) {\n        this._status = LoaderStatus.kError;\n        let type = 0;\n        let info = null;\n\n        if (this._contentLength && e.loaded < this._contentLength) {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: 'Moz-Chunked stream meet Early-Eof'};\n        } else {\n            type = LoaderErrors.EXCEPTION;\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n        }\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default MozChunkedLoader;","import Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n/* Notice: ms-stream may cause IE/Edge browser crash if seek too frequently!!!\n * The browser may crash in wininet.dll. Disable for now.\n *\n * For IE11/Edge browser by microsoft which supports `xhr.responseType = 'ms-stream'`\n * Notice that ms-stream API sucks. The buffer is always expanding along with downloading.\n *\n * We need to abort the xhr if buffer size exceeded limit size (e.g. 16 MiB), then do reconnect.\n * in order to release previous ArrayBuffer to avoid memory leak\n *\n * Otherwise, the ArrayBuffer will increase to a terrible size that equals final file size.\n */\nclass MSStreamLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            if (typeof self.MSStream === 'undefined' || typeof self.MSStreamReader === 'undefined') {\n                return false;\n            }\n\n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://example.com', true);\n            xhr.responseType = 'ms-stream';\n            return (xhr.responseType === 'ms-stream');\n        } catch (e) {\n            Log.w('MSStreamLoader', e.message);\n            return false;\n        }\n    }\n\n    constructor(seekHandler) {\n        super('xhr-msstream-loader');\n        this.TAG = this.constructor.name;\n\n        this._seekHandler = seekHandler;\n        this._needStash = true;\n\n        this._xhr = null;\n        this._reader = null;  // MSStreamReader\n\n        this._totalRange = null;\n        this._currentRange = null;\n\n        this._contentLength = null;\n        this._receivedLength = 0;\n\n        this._bufferLimit = 16 * 1024 * 1024;  // 16MB\n        this._lastTimeBufferSize = 0;\n        this._isReconnecting = false;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        if (this._reader) {\n            this._reader.onprogress = null;\n            this._reader.onload = null;\n            this._reader.onerror = null;\n            this._reader = null;\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr = null;\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._internalOpen(dataSource, range, false);\n    }\n\n    _internalOpen(dataSource, range, isSubrange) {\n        this._dataSource = dataSource;\n\n        if (!isSubrange) {\n            this._totalRange = range;\n        } else {\n            this._currentRange = range;\n        }\n\n        let seekConfig = this._seekHandler.getConfig(dataSource.url, range);\n\n        let reader = this._reader = new self.MSStreamReader();\n        reader.onprogress = this._msrOnProgress.bind(this);\n        reader.onload = this._msrOnLoad.bind(this);\n        reader.onerror = this._msrOnError.bind(this);\n\n        let xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', seekConfig.url, true);\n        xhr.responseType = 'ms-stream';\n        xhr.onreadystatechange = this._xhrOnReadyStateChange.bind(this);\n        xhr.onerror = this._xhrOnError.bind(this);\n\n        if (dataSource.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (typeof seekConfig.headers === 'object') {\n            let headers = seekConfig.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        if (this._isReconnecting) {\n            this._isReconnecting = false;\n        } else {\n            this._status = LoaderStatus.kConnecting;\n        }\n        xhr.send();\n    }\n\n    abort() {\n        this._internalAbort();\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _internalAbort() {\n        if (this._reader) {\n            if (this._reader.readyState === 1) {  // LOADING\n                this._reader.abort();\n            }\n            this._reader.onprogress = null;\n            this._reader.onload = null;\n            this._reader.onerror = null;\n            this._reader = null;\n        }\n        if (this._xhr) {\n            this._xhr.abort();\n            this._xhr.onreadystatechange = null;\n            this._xhr = null;\n        }\n    }\n\n    _xhrOnReadyStateChange(e) {\n        let xhr = e.target;\n\n        if (xhr.readyState === 3) {\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                this._status = LoaderStatus.kBuffering;\n\n                let lengthHeader = xhr.getResponseHeader('Content-Length');\n                if (lengthHeader != null && this._contentLength == null) {\n                    let length = parseInt(lengthHeader);\n                    if (length > 0) {\n                        this._contentLength = length;\n                        if (this._onContentLengthKnown) {\n                            this._onContentLengthKnown(this._contentLength);\n                        }\n                    }\n                }\n\n                let msstream = xhr.response;\n                this._reader.readAsArrayBuffer(msstream);\n            } else {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\n                } else {\n                    throw new RuntimeException('MSStreamLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n                }\n            }\n        }\n    }\n\n    _xhrOnError(e) {\n        this._status = LoaderStatus.kError;\n        let type = LoaderErrors.EXCEPTION;\n        let info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n    _msrOnProgress(e) {\n        let reader = e.target;\n        let bigbuffer = reader.result;\n        if (bigbuffer == null) {  // result may be null, workaround for buggy M$\n            this._doReconnectIfNeeded();\n            return;\n        }\n\n        let slice = bigbuffer.slice(this._lastTimeBufferSize);\n        this._lastTimeBufferSize = bigbuffer.byteLength;\n        let byteStart = this._totalRange.from + this._receivedLength;\n        this._receivedLength += slice.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(slice, byteStart, this._receivedLength);\n        }\n\n        if (bigbuffer.byteLength >= this._bufferLimit) {\n            Log.v(this.TAG, `MSStream buffer exceeded max size near ${byteStart + slice.byteLength}, reconnecting...`);\n            this._doReconnectIfNeeded();\n        }\n    }\n\n    _doReconnectIfNeeded() {\n        if (this._contentLength == null || this._receivedLength < this._contentLength) {\n            this._isReconnecting = true;\n            this._lastTimeBufferSize = 0;\n            this._internalAbort();\n\n            let range = {\n                from: this._totalRange.from + this._receivedLength,\n                to: -1\n            };\n            this._internalOpen(this._dataSource, range, true);\n        }\n    }\n\n    _msrOnLoad(e) {  // actually it is onComplete event\n        this._status = LoaderStatus.kComplete;\n        if (this._onComplete) {\n            this._onComplete(this._totalRange.from, this._totalRange.from + this._receivedLength - 1);\n        }\n    }\n\n    _msrOnError(e) {\n        this._status = LoaderStatus.kError;\n        let type = 0;\n        let info = null;\n\n        if (this._contentLength && this._receivedLength < this._contentLength) {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: 'MSStream meet Early-Eof'};\n        } else {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n        }\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n}\n\nexport default MSStreamLoader;","import Log from '../utils/logger.js';\nimport SpeedSampler from './speed-sampler.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// Universal IO Loader, implemented by adding Range header in xhr's request header\nclass RangeLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://example.com', true);\n            xhr.responseType = 'arraybuffer';\n            return (xhr.responseType === 'arraybuffer');\n        } catch (e) {\n            Log.w('RangeLoader', e.message);\n            return false;\n        }\n    }\n\n    constructor(seekHandler) {\n        super('xhr-range-loader');\n        this.TAG = this.constructor.name;\n\n        this._seekHandler = seekHandler;\n        this._needStash = false;\n\n        this._chunkSizeKBList = [\n            128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n        ];\n        this._currentChunkSizeKB = 384;\n        this._currentSpeed = 0;\n        this._currentSpeedNormalized = 0;\n\n        this._xhr = null;\n        this._speedSampler = new SpeedSampler();\n\n        this._requestAbort = false;\n        this._waitForTotalLength = false;\n        this._totalLengthReceived = false;\n\n        this._currentRequestRange = null;\n        this._totalLength = null;  // size of the entire file\n        this._contentLength = null;  // Content-Length of entire request range\n        this._receivedLength = 0;  // total received bytes\n        this._lastTimeLoaded = 0;  // received bytes of current request sub-range\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onload = null;\n            this._xhr.onerror = null;\n            this._xhr = null;\n        }\n        super.destroy();\n    }\n\n    get currentSpeed() {\n        return this._currentSpeed;\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n        this._status = LoaderStatus.kConnecting;\n\n        if (!this._totalLengthReceived) {\n            // We need total filesize\n            this._waitForTotalLength = true;\n            this._internalOpen(this._dataSource, {from: 0, to: -1});\n        } else {\n            // We have filesize, start loading\n            this._openSubRange();\n        }\n    }\n\n    _openSubRange() {\n        let chunkSize = this._currentChunkSizeKB * 1024;\n\n        let from = this._range.from + this._receivedLength;\n        let to = from + chunkSize;\n\n        if (this._contentLength != null) {\n            if (to - this._range.from >= this._contentLength) {\n                to = this._range.from + this._contentLength - 1;\n            }\n        }\n\n        this._currentRequestRange = {from, to};\n        this._internalOpen(this._dataSource, this._currentRequestRange);\n    }\n\n    _internalOpen(dataSource, range) {\n        this._lastTimeLoaded = 0;\n\n        let seekConfig = this._seekHandler.getConfig(dataSource.url, range);\n\n        let xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', seekConfig.url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n        xhr.onprogress = this._onProgress.bind(this);\n        xhr.onload = this._onLoad.bind(this);\n        xhr.onerror = this._onXhrError.bind(this);\n\n        if (dataSource.withCredentials && xhr['withCredentials']) {\n            xhr.withCredentials = true;\n        }\n\n        if (typeof seekConfig.headers === 'object') {\n            let headers = seekConfig.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        xhr.send();\n    }\n\n    abort() {\n        this._requestAbort = true;\n        this._internalAbort();\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _internalAbort() {\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onload = null;\n            this._xhr.onerror = null;\n            this._xhr.abort();\n            this._xhr = null;\n        }\n    }\n\n    _onReadyStateChange(e) {\n        let xhr = e.target;\n\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\n            if ((xhr.status >= 200 && xhr.status < 300)) {\n                if (this._waitForTotalLength) {\n                    return;\n                }\n                this._status = LoaderStatus.kBuffering;\n            } else {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\n                } else {\n                    throw new RuntimeException('RangeLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n                }\n            }\n        }\n    }\n\n    _onProgress(e) {\n        if (this._contentLength === null) {\n            let openNextRange = false;\n\n            if (this._waitForTotalLength) {\n                this._waitForTotalLength = false;\n                this._totalLengthReceived = true;\n                openNextRange = true;\n\n                let total = e.total;\n                this._internalAbort();\n                if (total != null & total !== 0) {\n                    this._totalLength = total;\n                }\n            }\n\n            // calculate currrent request range's contentLength\n            if (this._range.to === -1) {\n                this._contentLength = this._totalLength - this._range.from;\n            } else {  // to !== -1\n                this._contentLength = this._range.to - this._range.from + 1;\n            }\n\n            if (openNextRange) {\n                this._openSubRange();\n                return;\n            }\n            if (this._onContentLengthKnown) {\n                this._onContentLengthKnown(this._contentLength);\n            }\n        }\n\n        let delta = e.loaded - this._lastTimeLoaded;\n        this._lastTimeLoaded = e.loaded;\n        this._speedSampler.addBytes(delta);\n    }\n\n    _normalizeSpeed(input) {\n        let list = this._chunkSizeKBList;\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (input < list[0]) {\n            return list[0];\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (input >= list[mid] && input < list[mid + 1])) {\n                return list[mid];\n            } else if (list[mid] < input) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n    }\n\n    _onLoad(e) {\n        if (this._waitForTotalLength) {\n            this._waitForTotalLength = false;\n            return;\n        }\n\n        this._lastTimeLoaded = 0;\n        let KBps = this._speedSampler.lastSecondKBps;\n        if (KBps !== 0) {\n            this._currentSpeed = KBps;\n            let normalized = this._normalizeSpeed(KBps);\n            if (this._currentSpeedNormalized !== normalized) {\n                this._currentSpeedNormalized = normalized;\n                this._currentChunkSizeKB = normalized;\n            }\n        }\n\n        let chunk = e.target.response;\n        let byteStart = this._range.from + this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        let reportComplete = false;\n\n        if (this._contentLength != null && this._receivedLength < this._contentLength) {\n            // continue load next chunk\n            this._openSubRange();\n        } else {\n            reportComplete = true;\n        }\n\n        // dispatch received chunk\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n\n        if (reportComplete) {\n            this._status = LoaderStatus.kComplete;\n            if (this._onComplete) {\n                this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n            }\n        }\n    }\n\n    _onXhrError(e) {\n        this._status = LoaderStatus.kError;\n        let type = 0;\n        let info = null;\n\n        if (this._contentLength && this._receivedLength > 0\n                                && this._receivedLength < this._contentLength) {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: 'RangeLoader meet Early-Eof'};\n        } else {\n            type = LoaderErrors.EXCEPTION;\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n        }\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default RangeLoader;","import EventEmitter from 'events';\nimport Log from '../utils/logger.js';\nimport Browser from '../utils/browser.js';\nimport PlayerEvents from './player-events.js';\nimport Transmuxer from '../core/transmuxer.js';\nimport TransmuxingEvents from '../core/transmuxing-events.js';\nimport MSEController from '../core/mse-controller.js';\nimport MSEEvents from '../core/mse-events.js';\nimport {ErrorTypes, ErrorDetails} from './player-errors.js';\nimport {createDefaultConfig} from '../config.js';\nimport {InvalidArgumentException, IllegalStateException} from '../utils/exception.js';\n\nclass FlvPlayer {\n\n    constructor(mediaDataSource, config) {\n        this.TAG = this.constructor.name;\n        this._type = 'FlvPlayer';\n        this._emitter = new EventEmitter();\n\n        this._config = createDefaultConfig();\n        if (typeof config === 'object') {\n            Object.assign(this._config, config);\n        }\n\n        if (mediaDataSource.type.toLowerCase() !== 'flv') {\n            throw new InvalidArgumentException('FlvPlayer requires an flv MediaDataSource input!');\n        }\n\n        if (mediaDataSource.isLive === true) {\n            this._config.isLive = true;\n        }\n\n        this.e = {\n            onvLoadedMetadata: this._onvLoadedMetadata.bind(this),\n            onvSeeking: this._onvSeeking.bind(this)\n        };\n\n        if (self.performance && self.performance.now) {\n            this._now = self.performance.now.bind(self.performance);\n        } else {\n            this._now = Date.now;\n        }\n\n        this._pendingSeekTime = null;  // in seconds\n        this._requestSetTime = false;\n        this._seekpointRecord = null;\n        this._statisticsReporter = null;\n        this._progressChecker = null;\n\n        this._hasStatisticsListener = false;\n\n        this._mediaDataSource = mediaDataSource;\n        this._mediaElement = null;\n        this._msectl = null;\n        this._transmuxer = null;\n\n        this._mseSourceOpened = false;\n        this._hasPendingLoad = false;\n\n        this._mediaInfo = null;\n        this._statisticsInfo = null;\n\n        let chromeNeedIDRFix = (Browser.chrome &&\n                               (Browser.version.major < 50 ||\n                               (Browser.version.major === 50 && Browser.version.build < 2661)));\n        this._alwaysSeekKeyframe = (chromeNeedIDRFix || Browser.msedge || Browser.msie) ? true : false;\n\n        if (this._alwaysSeekKeyframe) {\n            this._config.accurateSeek = false;\n        }\n    }\n\n    destroy() {\n        if (this._progressChecker != null) {\n            window.clearInterval(this._progressChecker);\n            this._progressChecker = null;\n        }\n        if (this._transmuxer) {\n            this.unload();\n        }\n        if (this._mediaElement) {\n            this.detachMediaElement();\n        }\n        this.e = null;\n        this._mediaDataSource = null;\n\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        if (event === PlayerEvents.MEDIA_INFO) {\n            if (this._mediaInfo != null) {\n                Promise.resolve().then(() => {\n                    this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\n                });\n            }\n        } else if (event === PlayerEvents.STATISTICS_INFO) {\n            this._hasStatisticsListener = true;\n            if (this._statisticsInfo != null) {\n                Promise.resolve().then(() => {\n                    this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\n                });\n            }\n            if (this._statisticsReporter == null) {\n                this._statisticsReporter = window.setInterval(\n                    this._reportStatisticsInfo.bind(this),\n                this._config.statisticsInfoReportInterval);\n            }\n        }\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        if (event === PlayerEvents.STATISTICS_INFO) {\n            this._hasStatisticsListener = false;\n            if (this._statisticsReporter != null) {\n                window.clearInterval(this._statisticsReporter);\n                this._statisticsReporter = null;\n            }\n        }\n        this._emitter.removeListener(event, listener);\n    }\n\n    attachMediaElement(mediaElement) {\n        this._mediaElement = mediaElement;\n        mediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);\n        mediaElement.addEventListener('seeking', this.e.onvSeeking);\n\n        this._msectl = new MSEController();\n\n        this._msectl.on(MSEEvents.UPDATE_END, this._onmseUpdateEnd.bind(this));\n        this._msectl.on(MSEEvents.BUFFER_FULL, this._onmseBufferFull.bind(this));\n        this._msectl.on(MSEEvents.SOURCE_OPEN, () => {\n            this._mseSourceOpened = true;\n            if (this._hasPendingLoad) {\n                this._hasPendingLoad = false;\n                this.load();\n            }\n        });\n        this._msectl.on(MSEEvents.ERROR, (info) => {\n            this._emitter.emit(PlayerEvents.ERROR,\n                               ErrorTypes.MEDIA_ERROR,\n                               ErrorDetails.MEDIA_MSE_ERROR,\n                               info\n            );\n        });\n\n        this._msectl.attachMediaElement(mediaElement);\n\n        if (this._pendingSeekTime != null) {\n            try {\n                mediaElement.currentTime = this._pendingSeekTime;\n                this._pendingSeekTime = null;\n            } catch (e) {\n                // IE11 may throw InvalidStateError if readyState === 0\n                // We can defer set currentTime operation after loadedmetadata\n            }\n        }\n    }\n\n    detachMediaElement() {\n        if (this._mediaElement) {\n            this._msectl.detachMediaElement();\n            this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);\n            this._mediaElement.removeEventListener('seeking', this.e.onvSeeking);\n            this._mediaElement = null;\n        }\n        if (this._msectl) {\n            this._msectl.destroy();\n            this._msectl = null;\n        }\n    }\n\n    load() {\n        if (!this._mediaElement) {\n            throw new IllegalStateException('HTMLMediaElement must be attached before load()!');\n        }\n        if (this._transmuxer) {\n            throw new IllegalStateException('FlvPlayer.load() has been called, please call unload() first!');\n        }\n        if (this._hasPendingLoad) {\n            return;\n        }\n\n        if (this._config.deferLoadAfterSourceOpen && this._mseSourceOpened === false) {\n            this._hasPendingLoad = true;\n            return;\n        }\n\n        if (this._mediaElement.readyState > 0) {\n            this._requestSetTime = true;\n            // IE11 may throw InvalidStateError if readyState === 0\n            this._mediaElement.currentTime = 0;\n        }\n\n        this._transmuxer = new Transmuxer(this._mediaDataSource, this._config);\n\n        this._transmuxer.on(TransmuxingEvents.INIT_SEGMENT, (type, is) => {\n            this._msectl.appendInitSegment(is);\n        });\n        this._transmuxer.on(TransmuxingEvents.MEDIA_SEGMENT, (type, ms) => {\n            this._msectl.appendMediaSegment(ms);\n\n            if (this._hasStatisticsListener && this._statisticsReporter == null) {\n                if (this._progressChecker == null) {\n                    this._statisticsReporter = window.setInterval(\n                        this._reportStatisticsInfo.bind(this),\n                    this._config.statisticsInfoReportInterval);\n                }\n            }\n\n            // lazyLoad check\n            if (this._config.lazyLoad && !this._config.isLive) {\n                let currentTime = this._mediaElement.currentTime;\n                if (ms.info.endDts >= (currentTime + this._config.lazyLoadMaxDuration) * 1000) {\n                    if (this._progressChecker == null) {\n                        Log.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task');\n                        this._suspendTransmuxer();\n                    }\n                }\n            }\n        });\n        this._transmuxer.on(TransmuxingEvents.LOADING_COMPLETE, () => {\n            this._msectl.endOfStream();\n            if (this._statisticsReporter != null) {\n                window.clearInterval(this._statisticsReporter);\n                this._statisticsReporter = null;\n            }\n            this._emitter.emit(PlayerEvents.LOADING_COMPLETE);\n        });\n        this._transmuxer.on(TransmuxingEvents.RECOVERED_EARLY_EOF, () => {\n            this._emitter.emit(PlayerEvents.RECOVERED_EARLY_EOF);\n        });\n        this._transmuxer.on(TransmuxingEvents.IO_ERROR, (detail, info) => {\n            this._emitter.emit(PlayerEvents.ERROR, ErrorTypes.NETWORK_ERROR, detail, info);\n        });\n        this._transmuxer.on(TransmuxingEvents.DEMUX_ERROR, (detail, info) => {\n            this._emitter.emit(PlayerEvents.ERROR, ErrorTypes.MEDIA_ERROR, detail, {code: -1, msg: info});\n        });\n        this._transmuxer.on(TransmuxingEvents.MEDIA_INFO, (mediaInfo) => {\n            this._mediaInfo = mediaInfo;\n            this._emitter.emit(PlayerEvents.MEDIA_INFO, mediaInfo);\n        });\n        this._transmuxer.on(TransmuxingEvents.STATISTICS_INFO, (statInfo) => {\n            this._statisticsInfo = this._fillStatisticsInfo(statInfo);\n        });\n        this._transmuxer.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, (milliseconds) => {\n            if (this._mediaElement && !this._config.accurateSeek) {\n                this._requestSetTime = true;\n                this._mediaElement.currentTime = milliseconds / 1000;\n            }\n        });\n\n        this._transmuxer.open();\n    }\n\n    unload() {\n        if (this._statisticsReporter != null) {\n            window.clearInterval(this._statisticsReporter);\n            this._statisticsReporter = null;\n        }\n        if (this._mediaElement) {\n            this._mediaElement.pause();\n        }\n        if (this._msectl) {\n            this._msectl.seek(0);\n        }\n        if (this._transmuxer) {\n            this._transmuxer.close();\n            this._transmuxer.destroy();\n            this._transmuxer = null;\n        }\n    }\n\n    play() {\n        this._mediaElement.play();\n    }\n\n    pause() {\n        this._mediaElement.pause();\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get buffered() {\n        return this._mediaElement.buffered;\n    }\n\n    get duration() {\n        return this._mediaElement.duration;\n    }\n\n    get volume() {\n        return this._mediaElement.volume;\n    }\n\n    set volume(value) {\n        this._mediaElement.volume = value;\n    }\n\n    get muted() {\n        return this._mediaElement.muted;\n    }\n\n    set muted(muted) {\n        this._mediaElement.muted = muted;\n    }\n\n    get currentTime() {\n        if (this._mediaElement) {\n            return this._mediaElement.currentTime;\n        }\n        return 0;\n    }\n\n    set currentTime(seconds) {\n        if (this._mediaElement) {\n            this._internalSeek(seconds);\n        } else {\n            this._pendingSeekTime = seconds;\n        }\n    }\n\n    get mediaInfo() {\n        return Object.assign({}, this._mediaInfo);\n    }\n\n    get statisticsInfo() {\n        if (this._statisticsInfo == null) {\n            this._statisticsInfo = {};\n        }\n        this._statisticsInfo = this._fillStatisticsInfo(this._statisticsInfo);\n        return Object.assign({}, this._statisticsInfo);\n    }\n\n    _fillStatisticsInfo(statInfo) {\n        statInfo.playerType = this._type;\n\n        let hasQualityInfo = true;\n        let decoded = 0;\n        let dropped = 0;\n\n        if (this._mediaElement.getVideoPlaybackQuality) {\n            let quality = this._mediaElement.getVideoPlaybackQuality();\n            decoded = quality.totalVideoFrames;\n            dropped = quality.droppedVideoFrames;\n        } else if (this._mediaElement.webkitDecodedFrameCount != undefined) {\n            decoded = this._mediaElement.webkitDecodedFrameCount;\n            dropped = this._mediaElement.webkitDroppedFrameCount;\n        } else {\n            hasQualityInfo = false;\n        }\n\n        if (hasQualityInfo) {\n            statInfo.decodedFrames = decoded;\n            statInfo.droppedFrames = dropped;\n        }\n\n        return statInfo;\n    }\n\n    _reportStatisticsInfo() {\n        if (this._statisticsInfo != null) {\n            this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\n        }\n    }\n\n    _onmseUpdateEnd() {\n        if (!this._config.lazyLoad || this._config.isLive) {\n            return;\n        }\n\n        let buffered = this._mediaElement.buffered;\n        let currentTime = this._mediaElement.currentTime;\n        let currentRangeStart = 0;\n        let currentRangeEnd = 0;\n\n        for (let i = 0; i < buffered.length; i++) {\n            let start = buffered.start(i);\n            let end = buffered.end(i);\n            if (start <= currentTime && currentTime < end) {\n                currentRangeStart = start;\n                currentRangeEnd = end;\n                break;\n            }\n        }\n\n        if (currentRangeEnd >= currentTime + this._config.lazyLoadMaxDuration && this._progressChecker == null) {\n            Log.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task');\n            this._suspendTransmuxer();\n        }\n    }\n\n    _onmseBufferFull() {\n        Log.v(this.TAG, 'MSE SourceBuffer is full, suspend transmuxing task');\n        if (this._progressChecker == null) {\n            this._suspendTransmuxer();\n        }\n    }\n\n    _suspendTransmuxer() {\n        if (this._transmuxer) {\n            this._transmuxer.pause();\n\n            if (this._statisticsReporter != null) {\n                window.clearInterval(this._statisticsReporter);\n                this._statisticsReporter = null;\n            }\n\n            if (this._progressChecker == null) {\n                this._progressChecker = window.setInterval(this._checkProgressAndResume.bind(this), 1000);\n            }\n        }\n    }\n\n    _checkProgressAndResume() {\n        let currentTime = this._mediaElement.currentTime;\n        let buffered = this._mediaElement.buffered;\n\n        let needResume = false;\n\n        for (let i = 0; i < buffered.length; i++) {\n            let from = buffered.start(i);\n            let to = buffered.end(i);\n            if (currentTime >= from && currentTime < to) {\n                if (currentTime >= to - 30) {\n                    needResume = true;\n                }\n                break;\n            }\n        }\n\n        if (needResume) {\n            window.clearInterval(this._progressChecker);\n            this._progressChecker = null;\n            if (needResume) {\n                Log.v(this.TAG, 'Continue loading from paused position');\n                this._transmuxer.resume();\n            }\n        }\n    }\n\n    _isTimepointBuffered(seconds) {\n        let buffered = this._mediaElement.buffered;\n\n        for (let i = 0; i < buffered.length; i++) {\n            let from = buffered.start(i);\n            let to = buffered.end(i);\n            if (seconds >= from && seconds < to) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _internalSeek(seconds) {\n        let directSeek = this._isTimepointBuffered(seconds);\n\n        let directSeekBegin = false;\n        let directSeekBeginTime = 0;\n\n        if (seconds < 1.0 && this._mediaElement.buffered.length > 0) {\n            let videoBeginTime = this._mediaElement.buffered.start(0);\n            if ((videoBeginTime < 1.0 && seconds < videoBeginTime) || Browser.safari) {\n                directSeekBegin = true;\n                // also workaround for Safari: Seek to 0 may cause video stuck, use 0.1 to avoid\n                directSeekBeginTime = Browser.safari ? 0.1 : videoBeginTime;\n            }\n        }\n\n        if (directSeekBegin) {  // seek to video begin, set currentTime directly if beginPTS buffered\n            this._requestSetTime = true;\n            this._mediaElement.currentTime = directSeekBeginTime;\n        }  else if (directSeek) {  // buffered position\n            if (!this._alwaysSeekKeyframe) {\n                this._requestSetTime = true;\n                this._mediaElement.currentTime = seconds;\n            } else {\n                let idr = this._msectl.getNearestKeyframe(Math.floor(seconds * 1000));\n                this._requestSetTime = true;\n                if (idr != null) {\n                    this._mediaElement.currentTime = idr.dts / 1000;\n                } else {\n                    this._mediaElement.currentTime = seconds;\n                }\n            }\n            if (this._progressChecker != null) {\n                this._checkProgressAndResume();\n            }\n        } else {\n            if (this._progressChecker != null) {\n                window.clearInterval(this._progressChecker);\n                this._progressChecker = null;\n            }\n            this._msectl.seek(seconds);\n            this._transmuxer.seek(Math.floor(seconds * 1000));  // in milliseconds\n            // no need to set mediaElement.currentTime if non-accurateSeek,\n            // just wait for the recommend_seekpoint callback\n            if (this._config.accurateSeek) {\n                this._requestSetTime = true;\n                this._mediaElement.currentTime = seconds;\n            }\n        }\n    }\n\n    _checkAndApplyUnbufferedSeekpoint() {\n        if (this._seekpointRecord) {\n            if (this._seekpointRecord.recordTime <= this._now() - 100) {\n                let target = this._mediaElement.currentTime;\n                this._seekpointRecord = null;\n                if (!this._isTimepointBuffered(target)) {\n                    if (this._progressChecker != null) {\n                        window.clearTimeout(this._progressChecker);\n                        this._progressChecker = null;\n                    }\n                    // .currentTime is consists with .buffered timestamp\n                    // Chrome/Edge use DTS, while FireFox/Safari use PTS\n                    this._msectl.seek(target);\n                    this._transmuxer.seek(Math.floor(target * 1000));\n                    // set currentTime if accurateSeek, or wait for recommend_seekpoint callback\n                    if (this._config.accurateSeek) {\n                        this._requestSetTime = true;\n                        this._mediaElement.currentTime = target;\n                    }\n                }\n            } else {\n                window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);\n            }\n        }\n    }\n\n    _onvLoadedMetadata(e) {\n        if (this._pendingSeekTime != null) {\n            this._mediaElement.currentTime = this._pendingSeekTime;\n            this._pendingSeekTime = null;\n        }\n    }\n\n    _onvSeeking(e) {  // handle seeking request from browser's progress bar\n        let target = this._mediaElement.currentTime;\n        if (this._requestSetTime) {\n            this._requestSetTime = false;\n            return;\n        }\n\n        if (target < 1.0 && this._mediaElement.buffered.length > 0) {  // seek to video begin, set currentTime directly if beginPTS buffered\n            let videoBeginTime = this._mediaElement.buffered.start(0);\n            if ((videoBeginTime < 1.0 && target < videoBeginTime) || Browser.safari) {\n                this._requestSetTime = true;\n                // also workaround for Safari: Seek to 0 may cause video stuck, use 0.1 to avoid\n                this._mediaElement.currentTime = Browser.safari ? 0.1 : videoBeginTime;\n                return;\n            }\n        }\n\n        if (this._isTimepointBuffered(target)) {\n            if (this._alwaysSeekKeyframe) {\n                let idr = this._msectl.getNearestKeyframe(Math.floor(target * 1000));\n                if (idr != null) {\n                    this._requestSetTime = true;\n                    this._mediaElement.currentTime = idr.dts / 1000;\n                }\n            }\n            if (this._progressChecker != null) {\n                this._checkProgressAndResume();\n            }\n            return;\n        }\n\n        this._seekpointRecord = {\n            seekPoint: target,\n            recordTime: this._now()\n        };\n        window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);\n    }\n\n}\n\nexport default FlvPlayer;","import EventEmitter from 'events';\nimport PlayerEvents from './player-events.js';\nimport {createDefaultConfig} from '../config.js';\nimport {InvalidArgumentException, IllegalStateException} from '../utils/exception.js';\n\n// Player wrapper for browser's native player (HTMLVideoElement) without MediaSource src. \nclass NativePlayer {\n\n    constructor(mediaDataSource, config) {\n        this.TAG = this.constructor.name;\n        this._type = 'NativePlayer';\n        this._emitter = new EventEmitter();\n\n        this._config = createDefaultConfig();\n        if (typeof config === 'object') {\n            Object.assign(this._config, config);\n        }\n\n        if (mediaDataSource.type.toLowerCase() === 'flv') {\n            throw new InvalidArgumentException('NativePlayer does\\'t support flv MediaDataSource input!');\n        }\n        if (mediaDataSource.hasOwnProperty('segments')) {\n            throw new InvalidArgumentException(`NativePlayer(${mediaDataSource.type}) doesn't support multipart playback!`);\n        }\n\n        this.e = {\n            onvLoadedMetadata: this._onvLoadedMetadata.bind(this)\n        };\n\n        this._pendingSeekTime = null;\n        this._statisticsReporter = null;\n\n        this._mediaDataSource = mediaDataSource;\n        this._mediaElement = null;\n    }\n\n    destroy() {\n        if (this._mediaElement) {\n            this.unload();\n            this.detachMediaElement();\n        }\n        this.e = null;\n        this._mediaDataSource = null;\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n    }\n\n    on(event, listener) {\n        if (event === PlayerEvents.MEDIA_INFO) {\n            if (this._mediaElement != null && this._mediaElement.readyState !== 0) {  // HAVE_NOTHING\n                Promise.resolve().then(() => {\n                    this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\n                });\n            }\n        } else if (event === PlayerEvents.STATISTICS_INFO) {\n            if (this._mediaElement != null && this._mediaElement.readyState !== 0) {\n                Promise.resolve().then(() => {\n                    this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\n                });\n            }\n        }\n        this._emitter.addListener(event, listener);\n    }\n\n    off(event, listener) {\n        this._emitter.removeListener(event, listener);\n    }\n\n    attachMediaElement(mediaElement) {\n        this._mediaElement = mediaElement;\n        mediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);\n\n        if (this._pendingSeekTime != null) {\n            try {\n                mediaElement.currentTime = this._pendingSeekTime;\n                this._pendingSeekTime = null;\n            } catch (e) {\n                // IE11 may throw InvalidStateError if readyState === 0\n                // Defer set currentTime operation after loadedmetadata\n            }\n        }\n    }\n\n    detachMediaElement() {\n        if (this._mediaElement) {\n            this._mediaElement.src = '';\n            this._mediaElement.removeAttribute('src');\n            this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);\n            this._mediaElement = null;\n        }\n        if (this._statisticsReporter != null) {\n            window.clearInterval(this._statisticsReporter);\n            this._statisticsReporter = null;\n        }\n    }\n\n    load() {\n        if (!this._mediaElement) {\n            throw new IllegalStateException('HTMLMediaElement must be attached before load()!');\n        }\n        this._mediaElement.src = this._mediaDataSource.url;\n\n        if (this._mediaElement.readyState > 0) {\n            this._mediaElement.currentTime = 0;\n        }\n\n        this._mediaElement.preload = 'auto';\n        this._mediaElement.load();\n        this._statisticsReporter = window.setInterval(\n            this._reportStatisticsInfo.bind(this),\n        this._config.statisticsInfoReportInterval);\n    }\n\n    unload() {\n        if (this._mediaElement) {\n            this._mediaElement.src = '';\n            this._mediaElement.removeAttribute('src');\n        }\n        if (this._statisticsReporter != null) {\n            window.clearInterval(this._statisticsReporter);\n            this._statisticsReporter = null;\n        }\n    }\n\n    play() {\n        this._mediaElement.play();\n    }\n\n    pause() {\n        this._mediaElement.pause();\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get buffered() {\n        return this._mediaElement.buffered;\n    }\n\n    get duration() {\n        return this._mediaElement.duration;\n    }\n\n    get volume() {\n        return this._mediaElement.volume;\n    }\n\n    set volume(value) {\n        this._mediaElement.volume = value;\n    }\n\n    get muted() {\n        return this._mediaElement.muted;\n    }\n\n    set muted(muted) {\n        this._mediaElement.muted = muted;\n    }\n\n    get currentTime() {\n        if (this._mediaElement) {\n            return this._mediaElement.currentTime;\n        }\n        return 0;\n    }\n\n    set currentTime(seconds) {\n        if (this._mediaElement) {\n            this._mediaElement.currentTime = seconds;\n        } else {\n            this._pendingSeekTime = seconds;\n        }\n    }\n\n    get mediaInfo() {\n        let info = {\n            mimeType: 'video/' + this._mediaDataSource.type\n        };\n        if (this._mediaElement) {\n            info.duration = Math.floor(this._mediaElement.duration * 1000);\n            info.width = this._mediaElement.videoWidth;\n            info.height = this._mediaElement.videoHeight;\n        }\n        return info;\n    }\n\n    get statisticsInfo() {\n        let info = {\n            playerType: this._type,\n            url: this._mediaDataSource.url\n        };\n\n        let hasQualityInfo = true;\n        let decoded = 0;\n        let dropped = 0;\n\n        if (this._mediaElement.getVideoPlaybackQuality) {\n            let quality = this._mediaElement.getVideoPlaybackQuality();\n            decoded = quality.totalVideoFrames;\n            dropped = quality.droppedVideoFrames;\n        } else if (this._mediaElement.webkitDecodedFrameCount != undefined) {\n            decoded = this._mediaElement.webkitDecodedFrameCount;\n            dropped = this._mediaElement.webkitDroppedFrameCount;\n        } else {\n            hasQualityInfo = false;\n        }\n\n        if (hasQualityInfo) {\n            info.decodedFrames = decoded;\n            info.droppedFrames = dropped;\n        }\n        \n        return info;\n    }\n\n    _onvLoadedMetadata(e) {\n        if (this._pendingSeekTime != null) {\n            this._mediaElement.currentTime = this._pendingSeekTime;\n            this._pendingSeekTime = null;\n        }\n        this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\n    }\n\n    _reportStatisticsInfo() {\n        this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\n    }\n\n}\n\nexport default NativePlayer;","import {LoaderErrors} from '../io/loader.js';\nimport DemuxErrors from '../demux/demux-errors.js';\n\nexport const ErrorTypes = {\n    NETWORK_ERROR: 'NetworkError',\n    MEDIA_ERROR: 'MediaError',\n    OTHER_ERROR: 'OtherError'\n};\n\nexport const ErrorDetails = {\n    NETWORK_EXCEPTION: LoaderErrors.EXCEPTION,\n    NETWORK_STATUS_CODE_INVALID: LoaderErrors.HTTP_STATUS_CODE_INVALID,\n    NETWORK_TIMEOUT: LoaderErrors.CONNECTING_TIMEOUT,\n    NETWORK_UNRECOVERABLE_EARLY_EOF: LoaderErrors.UNRECOVERABLE_EARLY_EOF,\n\n    MEDIA_MSE_ERROR: 'MediaMSEError',\n\n    MEDIA_FORMAT_ERROR: DemuxErrors.FORMAT_ERROR,\n    MEDIA_FORMAT_UNSUPPORTED: DemuxErrors.FORMAT_UNSUPPORTED,\n    MEDIA_CODEC_UNSUPPORTED: DemuxErrors.CODEC_UNSUPPORTED\n};","const PlayerEvents = {\n    ERROR: 'error',\n    LOADING_COMPLETE: 'loading_complete',\n    RECOVERED_EARLY_EOF: 'recovered_early_eof',\n    MEDIA_INFO: 'media_info',\n    STATISTICS_INFO: 'statistics_info'\n};\n\nexport default PlayerEvents;","// from hls.js/src/helper/aac.js\n\nclass AAC {\n\n    static getSilentFrame(channelCount) {\n        if (channelCount === 1) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n            return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n        return null;\n    }\n\n}\n\nexport default AAC;","//  MP4 boxes generator for ISO BMFF (ISO Base Media File Format, defined in ISO/IEC 14496-12)\n\nclass MP4 {\n\n    static init() {\n        MP4.types = {\n            avc1: [], avcC: [], btrt: [], dinf: [],\n            dref: [], esds: [], ftyp: [], hdlr: [],\n            mdat: [], mdhd: [], mdia: [], mfhd: [],\n            minf: [], moof: [], moov: [], mp4a: [],\n            mvex: [], mvhd: [], sdtp: [], stbl: [],\n            stco: [], stsc: [], stsd: [], stsz: [],\n            stts: [], tfdt: [], tfhd: [], traf: [],\n            trak: [], trun: [], trex: [], tkhd: [],\n            vmhd: [], smhd: []\n        };\n\n        for (let name in MP4.types) {\n            if (MP4.types.hasOwnProperty(name)) {\n                MP4.types[name] = [\n                    name.charCodeAt(0),\n                    name.charCodeAt(1),\n                    name.charCodeAt(2),\n                    name.charCodeAt(3)\n                ];\n            }\n        }\n\n        let constants = MP4.constants = {};\n\n        constants.FTYP = new Uint8Array([\n            0x69, 0x73, 0x6F, 0x6D,  // major_brand: isom\n            0x0,  0x0,  0x0,  0x1,   // minor_version: 0x01\n            0x69, 0x73, 0x6F, 0x6D,  // isom\n            0x61, 0x76, 0x63, 0x31   // avc1\n        ]);\n\n        constants.STSD_PREFIX = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x01   // entry_count\n        ]);\n\n        constants.STTS = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00   // entry_count\n        ]);\n\n        constants.STSC = constants.STCO = constants.STTS;\n\n        constants.STSZ = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // sample_size\n            0x00, 0x00, 0x00, 0x00   // sample_count\n        ]);\n\n        constants.HDLR_VIDEO = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // pre_defined\n            0x76, 0x69, 0x64, 0x65,  // handler_type: 'vide'\n            0x00, 0x00, 0x00, 0x00,  // reserved: 3 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x56, 0x69, 0x64, 0x65,\n            0x6F, 0x48, 0x61, 0x6E,\n            0x64, 0x6C, 0x65, 0x72, 0x00  // name: VideoHandler\n        ]);\n\n        constants.HDLR_AUDIO = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // pre_defined\n            0x73, 0x6F, 0x75, 0x6E,  // handler_type: 'soun'\n            0x00, 0x00, 0x00, 0x00,  // reserved: 3 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x53, 0x6F, 0x75, 0x6E,\n            0x64, 0x48, 0x61, 0x6E,\n            0x64, 0x6C, 0x65, 0x72, 0x00  // name: SoundHandler\n        ]);\n\n        constants.DREF = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x01,  // entry_count\n            0x00, 0x00, 0x00, 0x0C,  // entry_size\n            0x75, 0x72, 0x6C, 0x20,  // type 'url '\n            0x00, 0x00, 0x00, 0x01   // version(0) + flags\n        ]);\n\n        // Sound media header\n        constants.SMHD = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00   // balance(2) + reserved(2)\n        ]);\n\n        // video media header\n        constants.VMHD = new Uint8Array([\n            0x00, 0x00, 0x00, 0x01,  // version(0) + flags\n            0x00, 0x00,              // graphicsmode: 2 bytes\n            0x00, 0x00, 0x00, 0x00,  // opcolor: 3 * 2 bytes\n            0x00, 0x00\n        ]);\n    }\n\n    // Generate a box\n    static box(type) {\n        let size = 8;\n        let result = null;\n        let datas = Array.prototype.slice.call(arguments, 1);\n        let arrayCount = datas.length;\n\n        for (let i = 0; i < arrayCount; i++) {\n            size += datas[i].byteLength;\n        }\n\n        result = new Uint8Array(size);\n        result[0] = (size >>> 24) & 0xFF;  // size\n        result[1] = (size >>> 16) & 0xFF;\n        result[2] = (size >>>  8) & 0xFF;\n        result[3] = (size) & 0xFF;\n\n        result.set(type, 4);  // type\n\n        let offset = 8;\n        for (let i = 0; i < arrayCount; i++) {  // data body\n            result.set(datas[i], offset);\n            offset += datas[i].byteLength;\n        }\n\n        return result;\n    }\n\n    // emit ftyp & moov\n    static generateInitSegment(meta) {\n        let ftyp = MP4.box(MP4.types.ftyp, MP4.constants.FTYP);\n        let moov = MP4.moov(meta);\n\n        let result = new Uint8Array(ftyp.byteLength + moov.byteLength);\n        result.set(ftyp, 0);\n        result.set(moov, ftyp.byteLength);\n        return result;\n    }\n\n    // Movie metadata box\n    static moov(meta) {\n        let mvhd = MP4.mvhd(meta.timescale, meta.duration);\n        let trak = MP4.trak(meta);\n        let mvex = MP4.mvex(meta);\n        return MP4.box(MP4.types.moov, mvhd, trak, mvex);\n    }\n\n    // Movie header box\n    static mvhd(timescale, duration) {\n        return MP4.box(MP4.types.mvhd, new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // creation_time\n            0x00, 0x00, 0x00, 0x00,  // modification_time\n            (timescale >>> 24) & 0xFF,  // timescale: 4 bytes\n            (timescale >>> 16) & 0xFF,\n            (timescale >>>  8) & 0xFF,\n            (timescale) & 0xFF,\n            (duration >>> 24) & 0xFF,   // duration: 4 bytes\n            (duration >>> 16) & 0xFF,\n            (duration >>>  8) & 0xFF,\n            (duration) & 0xFF,\n            0x00, 0x01, 0x00, 0x00,  // Preferred rate: 1.0\n            0x01, 0x00, 0x00, 0x00,  // PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 + 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x00, 0x00,  // ----begin composition matrix----\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x40, 0x00, 0x00, 0x00,  // ----end composition matrix----\n            0x00, 0x00, 0x00, 0x00,  // ----begin pre_defined 6 * 4 bytes----\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,  // ----end pre_defined 6 * 4 bytes----\n            0xFF, 0xFF, 0xFF, 0xFF   // next_track_ID\n        ]));\n    }\n\n    // Track box\n    static trak(meta) {\n        return MP4.box(MP4.types.trak, MP4.tkhd(meta), MP4.mdia(meta));\n    }\n\n    // Track header box\n    static tkhd(meta) {\n        let trackId = meta.id, duration = meta.duration;\n        let width = meta.width, height = meta.height;\n        return MP4.box(MP4.types.tkhd, new Uint8Array([\n            0x00, 0x00, 0x00, 0x07,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // creation_time\n            0x00, 0x00, 0x00, 0x00,  // modification_time\n            (trackId >>> 24) & 0xFF,  // track_ID: 4 bytes\n            (trackId >>> 16) & 0xFF,\n            (trackId >>>  8) & 0xFF,\n            (trackId) & 0xFF,\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 bytes\n            (duration >>> 24) & 0xFF, // duration: 4 bytes\n            (duration >>> 16) & 0xFF,\n            (duration >>>  8) & 0xFF,\n            (duration) & 0xFF,\n            0x00, 0x00, 0x00, 0x00,  // reserved: 2 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,  // layer(2bytes) + alternate_group(2bytes)\n            0x00, 0x00, 0x00, 0x00,  // volume(2bytes) + reserved(2bytes)\n            0x00, 0x01, 0x00, 0x00,  // ----begin composition matrix----\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x40, 0x00, 0x00, 0x00,  // ----end composition matrix----\n            (width >>> 8) & 0xFF,    // width and height\n            (width) & 0xFF,\n            0x00, 0x00,\n            (height >>> 8) & 0xFF,\n            (height) & 0xFF,\n            0x00, 0x00\n        ]));\n    }\n\n    // Media Box\n    static mdia(meta) {\n        return MP4.box(MP4.types.mdia, MP4.mdhd(meta), MP4.hdlr(meta), MP4.minf(meta));\n    }\n\n    // Media header box\n    static mdhd(meta) {\n        let timescale = meta.timescale;\n        let duration = meta.duration;\n        return MP4.box(MP4.types.mdhd, new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            0x00, 0x00, 0x00, 0x00,  // creation_time\n            0x00, 0x00, 0x00, 0x00,  // modification_time\n            (timescale >>> 24) & 0xFF,  // timescale: 4 bytes\n            (timescale >>> 16) & 0xFF,\n            (timescale >>>  8) & 0xFF,\n            (timescale) & 0xFF,\n            (duration >>> 24) & 0xFF,   // duration: 4 bytes\n            (duration >>> 16) & 0xFF,\n            (duration >>>  8) & 0xFF,\n            (duration) & 0xFF,\n            0x55, 0xC4,             // language: und (undetermined)\n            0x00, 0x00              // pre_defined = 0\n        ]));\n    }\n\n    // Media handler reference box\n    static hdlr(meta) {\n        let data = null;\n        if (meta.type === 'audio') {\n            data = MP4.constants.HDLR_AUDIO;\n        } else {\n            data = MP4.constants.HDLR_VIDEO;\n        }\n        return MP4.box(MP4.types.hdlr, data);\n    }\n\n    // Media infomation box\n    static minf(meta) {\n        let xmhd = null;\n        if (meta.type === 'audio') {\n            xmhd = MP4.box(MP4.types.smhd, MP4.constants.SMHD);\n        } else {\n            xmhd = MP4.box(MP4.types.vmhd, MP4.constants.VMHD);\n        }\n        return MP4.box(MP4.types.minf, xmhd, MP4.dinf(), MP4.stbl(meta));\n    }\n\n    // Data infomation box\n    static dinf() {\n        let result = MP4.box(MP4.types.dinf,\n            MP4.box(MP4.types.dref, MP4.constants.DREF)\n        );\n        return result;\n    }\n\n    // Sample table box\n    static stbl(meta) {\n        let result = MP4.box(MP4.types.stbl,  // type: stbl\n            MP4.stsd(meta),  // Sample Description Table\n            MP4.box(MP4.types.stts, MP4.constants.STTS),  // Time-To-Sample\n            MP4.box(MP4.types.stsc, MP4.constants.STSC),  // Sample-To-Chunk\n            MP4.box(MP4.types.stsz, MP4.constants.STSZ),  // Sample size\n            MP4.box(MP4.types.stco, MP4.constants.STCO)   // Chunk offset\n        ); \n        return result; \n    }\n\n    // Sample description box\n    static stsd(meta) {\n        if (meta.type === 'audio') {\n            return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp4a(meta));\n        } else {\n            return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.avc1(meta));\n        }\n    }\n\n    static mp4a(meta) {\n        let channelCount = meta.channelCount;\n        let sampleRate = meta.audioSampleRate;\n\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\n            0x00, 0x00, 0x00, 0x00,  // reserved: 2 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, channelCount,      // channelCount(2)\n            0x00, 0x10,              // sampleSize(2)\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            (sampleRate >>> 8) & 0xFF,  // Audio sample rate\n            (sampleRate) & 0xFF,\n            0x00, 0x00\n        ]);\n\n        return MP4.box(MP4.types.mp4a, data, MP4.esds(meta));\n    }\n\n    static esds(meta) {\n        let config = meta.config;\n        let configSize = config.length;\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version 0 + flags\n\n            0x03,                    // descriptor_type\n            0x17 + configSize,       // length3\n            0x00, 0x01,              // es_id\n            0x00,                    // stream_priority\n\n            0x04,                    // descriptor_type\n            0x0F + configSize,       // length\n            0x40,                    // codec: mpeg4_audio\n            0x15,                    // stream_type: Audio\n            0x00, 0x00, 0x00,        // buffer_size\n            0x00, 0x00, 0x00, 0x00,  // maxBitrate\n            0x00, 0x00, 0x00, 0x00,  // avgBitrate\n\n            0x05                     // descriptor_type\n        ].concat([\n            configSize\n        ]).concat(\n            config\n        ).concat([\n            0x06, 0x01, 0x02         // GASpecificConfig\n        ]));\n        return MP4.box(MP4.types.esds, data);\n    }\n\n    static avc1(meta) {\n        let avcc = meta.avcc;\n        let width = meta.width, height = meta.height;\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\n            0x00, 0x00, 0x00, 0x00,  // pre_defined(2) + reserved(2)\n            0x00, 0x00, 0x00, 0x00,  // pre_defined: 3 * 4 bytes\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            (width >>> 8) & 0xFF,    // width: 2 bytes\n            (width) & 0xFF,\n            (height >>> 8) & 0xFF,   // height: 2 bytes\n            (height) & 0xFF,\n            0x00, 0x48, 0x00, 0x00,  // horizresolution: 4 bytes\n            0x00, 0x48, 0x00, 0x00,  // vertresolution: 4 bytes\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 bytes\n            0x00, 0x01,              // frame_count\n            0x0A,                    // strlen\n            0x78, 0x71, 0x71, 0x2F,  // compressorname: 32 bytes\n            0x66, 0x6C, 0x76, 0x2E,\n            0x6A, 0x73, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00,\n            0x00, 0x18,              // depth\n            0xFF, 0xFF               // pre_defined = -1\n        ]);\n        return MP4.box(MP4.types.avc1, data, MP4.box(MP4.types.avcC, avcc));\n    }\n\n    // Movie Extends box\n    static mvex(meta) {\n        return MP4.box(MP4.types.mvex, MP4.trex(meta));\n    }\n\n    // Track Extends box\n    static trex(meta) {\n        let trackId = meta.id;\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\n            (trackId >>> 24) & 0xFF, // track_ID\n            (trackId >>> 16) & 0xFF,\n            (trackId >>>  8) & 0xFF,\n            (trackId) & 0xFF,\n            0x00, 0x00, 0x00, 0x01,  // default_sample_description_index\n            0x00, 0x00, 0x00, 0x00,  // default_sample_duration\n            0x00, 0x00, 0x00, 0x00,  // default_sample_size\n            0x00, 0x01, 0x00, 0x01   // default_sample_flags\n        ]);\n        return MP4.box(MP4.types.trex, data);\n    }\n\n    // Movie fragment box\n    static moof(track, baseMediaDecodeTime) {\n        return MP4.box(MP4.types.moof, MP4.mfhd(track.sequenceNumber), MP4.traf(track, baseMediaDecodeTime));\n    }\n\n    static mfhd(sequenceNumber) {\n        let data = new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,\n            (sequenceNumber >>> 24) & 0xFF,  // sequence_number: int32\n            (sequenceNumber >>> 16) & 0xFF,\n            (sequenceNumber >>>  8) & 0xFF,\n            (sequenceNumber) & 0xFF\n        ]);\n        return MP4.box(MP4.types.mfhd, data);\n    }\n\n    // Track fragment box\n    static traf(track, baseMediaDecodeTime) {\n        let trackId = track.id;\n\n        // Track fragment header box\n        let tfhd = MP4.box(MP4.types.tfhd, new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) & flags\n            (trackId >>> 24) & 0xFF, // track_ID\n            (trackId >>> 16) & 0xFF,\n            (trackId >>>  8) & 0xFF,\n            (trackId) & 0xFF\n        ]));\n        // Track Fragment Decode Time\n        let tfdt = MP4.box(MP4.types.tfdt, new Uint8Array([\n            0x00, 0x00, 0x00, 0x00,  // version(0) & flags\n            (baseMediaDecodeTime >>> 24) & 0xFF,  // baseMediaDecodeTime: int32\n            (baseMediaDecodeTime >>> 16) & 0xFF,\n            (baseMediaDecodeTime >>>  8) & 0xFF,\n            (baseMediaDecodeTime) & 0xFF\n        ]));\n        let sdtp = MP4.sdtp(track);\n        let trun = MP4.trun(track, sdtp.byteLength + 16 + 16 + 8 + 16 + 8 + 8);\n\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun, sdtp);\n    }\n\n    // Sample Dependency Type box\n    static sdtp(track) {\n        let samples = track.samples || [];\n        let sampleCount = samples.length;\n        let data = new Uint8Array(4 + sampleCount);\n        // 0~4 bytes: version(0) & flags\n        for (let i = 0; i < sampleCount; i++) {\n            let flags = samples[i].flags;\n            data[i + 4] = (flags.isLeading << 6)    // is_leading: 2 (bit)\n                        | (flags.dependsOn << 4)    // sample_depends_on\n                        | (flags.isDependedOn << 2) // sample_is_depended_on\n                        | (flags.hasRedundancy);    // sample_has_redundancy\n        }\n        return MP4.box(MP4.types.sdtp, data);\n    }\n\n    // Track fragment run box\n    static trun(track, offset) {\n        let samples = track.samples || [];\n        let sampleCount = samples.length;\n        let dataSize = 12 + 16 * sampleCount;\n        let data = new Uint8Array(dataSize);\n        offset += 8 + dataSize;\n\n        data.set([\n            0x00, 0x00, 0x0F, 0x01,      // version(0) & flags\n            (sampleCount >>> 24) & 0xFF, // sample_count\n            (sampleCount >>> 16) & 0xFF,\n            (sampleCount >>>  8) & 0xFF,\n            (sampleCount) & 0xFF,\n            (offset >>> 24) & 0xFF,      // data_offset\n            (offset >>> 16) & 0xFF,\n            (offset >>>  8) & 0xFF,\n            (offset) & 0xFF\n        ], 0);\n\n        for (let i = 0; i < sampleCount; i++) {\n            let duration = samples[i].duration;\n            let size = samples[i].size;\n            let flags = samples[i].flags;\n            let cts = samples[i].cts;\n            data.set([\n                (duration >>> 24) & 0xFF,  // sample_duration\n                (duration >>> 16) & 0xFF,\n                (duration >>>  8) & 0xFF,\n                (duration) & 0xFF,\n                (size >>> 24) & 0xFF,      // sample_size\n                (size >>> 16) & 0xFF,\n                (size >>>  8) & 0xFF,\n                (size) & 0xFF,\n                (flags.isLeading << 2) | flags.dependsOn,  // sample_flags\n                (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | flags.isNonSync,\n                0x00, 0x00,                // sample_degradation_priority\n                (cts >>> 24) & 0xFF,       // sample_composition_time_offset\n                (cts >>> 16) & 0xFF,\n                (cts >>>  8) & 0xFF,\n                (cts) & 0xFF\n            ], 12 + 16 * i);\n        }\n        return MP4.box(MP4.types.trun, data);\n    }\n\n    static mdat(data) {\n        return MP4.box(MP4.types.mdat, data);\n    }\n\n}\n\nMP4.init();\n\nexport default MP4;","import Log from '../utils/logger.js';\nimport MP4 from './mp4-generator.js';\nimport AAC from './aac-silent.js';\nimport Browser from '../utils/browser.js';\nimport {SampleInfo, MediaSegmentInfo, MediaSegmentInfoList} from '../core/media-segment-info.js';\nimport {IllegalStateException} from '../utils/exception.js';\n\n\n// Fragmented mp4 remuxer\nclass MP4Remuxer {\n\n    constructor(config) {\n        this.TAG = this.constructor.name;\n\n        this._config = config;\n        this._isLive = (config.isLive === true) ? true : false;\n\n        this._dtsBase = -1;\n        this._dtsBaseInited = false;\n        this._audioDtsBase = Infinity;\n        this._videoDtsBase = Infinity;\n        this._audioNextDts = undefined;\n        this._videoNextDts = undefined;\n\n        this._audioMeta = null;\n        this._videoMeta = null;\n\n        this._audioSegmentInfoList = new MediaSegmentInfoList('audio');\n        this._videoSegmentInfoList = new MediaSegmentInfoList('video');\n\n        this._onInitSegment = null;\n        this._onMediaSegment = null;\n\n        // Workaround for chrome < 50: Always force first sample as a Random Access Point in media segment\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412\n        this._forceFirstIDR = (Browser.chrome &&\n                              (Browser.version.major < 50 ||\n                              (Browser.version.major === 50 && Browser.version.build < 2661))) ? true : false;\n\n        // Workaround for IE11/Edge: Fill silent aac frame after keyframe-seeking\n        // Make audio beginDts equals with video beginDts, in order to fix seek freeze\n        this._fillSilentAfterSeek = (Browser.msedge || Browser.msie);\n    }\n\n    destroy() {\n        this._dtsBase = -1;\n        this._dtsBaseInited = false;\n        this._audioMeta = null;\n        this._videoMeta = null;\n        this._audioSegmentInfoList.clear();\n        this._audioSegmentInfoList = null;\n        this._videoSegmentInfoList.clear();\n        this._videoSegmentInfoList = null;\n        this._onInitSegment = null;\n        this._onMediaSegment = null;\n    }\n\n    bindDataSource(producer) {\n        producer.onDataAvailable = this.remux.bind(this);\n        producer.onTrackMetadata = this._onTrackMetadataReceived.bind(this);\n        return this;\n    }\n\n    /* prototype: function onInitSegment(type: string, initSegment: ArrayBuffer): void\n       InitSegment: {\n           type: string,\n           data: ArrayBuffer,\n           codec: string,\n           container: string\n       }\n    */\n    get onInitSegment() {\n        return this._onInitSegment;\n    }\n\n    set onInitSegment(callback) {\n        this._onInitSegment = callback;\n    }\n\n    /* prototype: function onMediaSegment(type: string, mediaSegment: MediaSegment): void\n       MediaSegment: {\n           type: string,\n           data: ArrayBuffer,\n           sampleCount: int32\n           info: MediaSegmentInfo\n       }\n    */\n    get onMediaSegment() {\n        return this._onMediaSegment;\n    }\n\n    set onMediaSegment(callback) {\n        this._onMediaSegment = callback;\n    }\n\n    insertDiscontinuity() {\n        this._audioNextDts = this._videoNextDts = undefined;\n    }\n\n    seek(originalDts) {\n        this._videoSegmentInfoList.clear();\n        this._audioSegmentInfoList.clear();\n    }\n\n    remux(audioTrack, videoTrack) {\n        if (!this._onMediaSegment) {\n            throw new IllegalStateException('MP4Remuxer: onMediaSegment callback must be specificed!');\n        }\n        if (!this._dtsBaseInited) {\n            this._calculateDtsBase(audioTrack, videoTrack);\n        }\n        this._remuxVideo(videoTrack);\n        this._remuxAudio(audioTrack);\n    }\n\n    _onTrackMetadataReceived(type, metadata) {\n        let metabox = null;\n\n        if (type === 'audio') {\n            this._audioMeta = metadata;\n            metabox = MP4.generateInitSegment(metadata);\n        } else if (type === 'video') {\n            this._videoMeta = metadata;\n            metabox = MP4.generateInitSegment(metadata);\n        } else {\n            return;\n        }\n\n        // dispatch metabox (Initialization Segment)\n        if (!this._onInitSegment) {\n            throw new IllegalStateException('MP4Remuxer: onInitSegment callback must be specified!');\n        }\n        this._onInitSegment(type, {\n            type: type,\n            data: metabox.buffer,\n            codec: metadata.codec,\n            container: `${type}/mp4`\n        });\n    }\n\n    _calculateDtsBase(audioTrack, videoTrack) {\n        if (this._dtsBaseInited) {\n            return;\n        }\n\n        if (audioTrack.samples && audioTrack.samples.length) {\n            this._audioDtsBase = audioTrack.samples[0].dts;\n        }\n        if (videoTrack.samples && videoTrack.samples.length) {\n            this._videoDtsBase = videoTrack.samples[0].dts;\n        }\n\n        this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase);\n        this._dtsBaseInited = true;\n    }\n\n    _remuxAudio(audioTrack) {\n        let track = audioTrack;\n        let samples = track.samples;\n        let dtsCorrection = undefined;\n        let firstDts = -1, lastDts = -1, lastPts = -1;\n\n        let remuxSilentFrame = false;\n        let silentFrameDuration = -1;\n\n        if (!samples || samples.length === 0) {\n            return;\n        }\n\n        let bytes = 8 + track.length;\n        let mdatbox = new Uint8Array(bytes);\n        mdatbox[0] = (bytes >>> 24) & 0xFF;\n        mdatbox[1] = (bytes >>> 16) & 0xFF;\n        mdatbox[2] = (bytes >>>  8) & 0xFF;\n        mdatbox[3] = (bytes) & 0xFF;\n\n        mdatbox.set(MP4.types.mdat, 4);\n\n        let offset = 8;  // size + type\n        let mp4Samples = [];\n\n        while (samples.length) {\n            let aacSample = samples.shift();\n            let unit = aacSample.unit;\n            let originalDts = aacSample.dts - this._dtsBase;\n\n            if (dtsCorrection == undefined) {\n                if (this._audioNextDts == undefined) {\n                    if (this._audioSegmentInfoList.isEmpty()) {\n                        dtsCorrection = 0;\n                        if (this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty()) {\n                            remuxSilentFrame = true;\n                        }\n                    } else {\n                        let lastSample = this._audioSegmentInfoList.getLastSampleBefore(originalDts);\n                        if (lastSample != null) {\n                            let distance = (originalDts - (lastSample.originalDts + lastSample.duration));\n                            if (distance <= 3) {\n                                distance = 0;\n                            }\n                            let expectedDts = lastSample.dts + lastSample.duration + distance;\n                            dtsCorrection = originalDts - expectedDts;\n                        } else {  // lastSample == null\n                            dtsCorrection = 0;\n                        }\n                    }\n                } else {\n                    dtsCorrection = originalDts - this._audioNextDts;\n                }\n            }\n\n            let dts = originalDts - dtsCorrection;\n            if (remuxSilentFrame) {\n                // align audio segment beginDts to match with current video segment's beginDts\n                let videoSegment = this._videoSegmentInfoList.getLastSegmentBefore(originalDts);\n                if (videoSegment != null && videoSegment.beginDts < dts) {\n                    silentFrameDuration = dts - videoSegment.beginDts;\n                    dts = videoSegment.beginDts;\n                } else {\n                    remuxSilentFrame = false;\n                }\n            }\n            if (firstDts === -1) {\n                firstDts = dts;\n            }\n\n            if (remuxSilentFrame) {\n                remuxSilentFrame = false;\n                samples.unshift(aacSample);\n\n                let frame = this._generateSilentAudio(dts, silentFrameDuration);\n                if (frame == null) {\n                    continue;\n                }\n                let mp4Sample = frame.mp4Sample;\n                let unit = frame.unit;\n\n                mp4Samples.push(mp4Sample);\n\n                // re-allocate mdatbox buffer with new size, to fit with this silent frame\n                bytes += unit.byteLength;\n                mdatbox = new Uint8Array(bytes);\n                mdatbox[0] = (bytes >>> 24) & 0xFF;\n                mdatbox[1] = (bytes >>> 16) & 0xFF;\n                mdatbox[2] = (bytes >>>  8) & 0xFF;\n                mdatbox[3] = (bytes) & 0xFF;\n                mdatbox.set(MP4.types.mdat, 4);\n\n                // fill data now\n                mdatbox.set(unit, offset);\n                offset += unit.byteLength;\n                continue;\n            }\n\n            let sampleDuration = 0;\n\n            if (samples.length >= 1) {\n                let nextDts = samples[0].dts - this._dtsBase - dtsCorrection;\n                sampleDuration = nextDts - dts;\n            } else {\n                if (mp4Samples.length >= 1) {  // use second last sample duration\n                    sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n                } else {  // the only one sample, use reference sample duration\n                    sampleDuration = this._audioMeta.refSampleDuration;\n                }\n            }\n\n            let mp4Sample = {\n                dts: dts,\n                pts: dts,\n                cts: 0,\n                size: unit.byteLength,\n                duration: sampleDuration,\n                originalDts: originalDts,\n                flags: {\n                    isLeading: 0,\n                    dependsOn: 1,\n                    isDependedOn: 0,\n                    hasRedundancy: 0\n                }\n            };\n            mp4Samples.push(mp4Sample);\n            mdatbox.set(unit, offset);\n            offset += unit.byteLength;\n        }\n        let latest = mp4Samples[mp4Samples.length - 1];\n        lastDts = latest.dts + latest.duration;\n        this._audioNextDts = lastDts;\n\n        // fill media segment info & add to info list\n        let info = new MediaSegmentInfo();\n        info.beginDts = firstDts;\n        info.endDts = lastDts;\n        info.beginPts = firstDts;\n        info.endPts = lastDts;\n        info.originalBeginDts = mp4Samples[0].originalDts;\n        info.originalEndDts = latest.originalDts + latest.duration;\n        info.firstSample = new SampleInfo(mp4Samples[0].dts,\n                                          mp4Samples[0].pts,\n                                          mp4Samples[0].duration,\n                                          mp4Samples[0].originalDts,\n                                          false);\n        info.lastSample = new SampleInfo(latest.dts,\n                                         latest.pts,\n                                         latest.duration,\n                                         latest.originalDts,\n                                         false);\n        if (!this._isLive) {\n            this._audioSegmentInfoList.append(info);\n        }\n\n        track.samples = mp4Samples;\n        track.sequenceNumber++;\n\n        let moofbox = MP4.moof(track, firstDts);\n        track.samples = [];\n        track.length = 0;\n\n        this._onMediaSegment('audio', {\n            type: 'audio',\n            data: this._mergeBoxes(moofbox, mdatbox).buffer,\n            sampleCount: mp4Samples.length,\n            info: info\n        });\n    }\n\n    _generateSilentAudio(dts, frameDuration) {\n        Log.v(this.TAG, `GenerateSilentAudio: dts = ${dts}, duration = ${frameDuration}`);\n\n        let unit = AAC.getSilentFrame(this._audioMeta.channelCount);\n        if (unit == null) {\n            Log.w(this.TAG, `Cannot generate silent aac frame for channelCount = ${this._audioMeta.channelCount}`);\n            return null;\n        }\n\n        let mp4Sample = {\n            dts: dts,\n            pts: dts,\n            cts: 0,\n            size: unit.byteLength,\n            duration: frameDuration,\n            originalDts: dts,\n            flags: {\n                isLeading: 0,\n                dependsOn: 1,\n                isDependedOn: 0,\n                hasRedundancy: 0\n            }\n        };\n\n        return {\n            unit,\n            mp4Sample\n        };\n    }\n\n    _remuxVideo(videoTrack) {\n        let track = videoTrack;\n        let samples = track.samples;\n        let dtsCorrection = undefined;\n        let firstDts = -1, lastDts = -1;\n        let firstPts = -1, lastPts = -1;\n\n        if (!samples || samples.length === 0) {\n            return;\n        }\n\n        let bytes = 8 + videoTrack.length;\n        let mdatbox = new Uint8Array(bytes);\n        mdatbox[0] = (bytes >>> 24) & 0xFF;\n        mdatbox[1] = (bytes >>> 16) & 0xFF;\n        mdatbox[2] = (bytes >>>  8) & 0xFF;\n        mdatbox[3] = (bytes) & 0xFF;\n        mdatbox.set(MP4.types.mdat, 4);\n\n        let offset = 8;\n        let mp4Samples = [];\n        let info = new MediaSegmentInfo();\n\n        while (samples.length) {\n            let avcSample = samples.shift();\n            let keyframe = avcSample.isKeyframe;\n            let originalDts = avcSample.dts - this._dtsBase;\n\n            if (dtsCorrection == undefined) {\n                if (this._videoNextDts == undefined) {\n                    if (this._videoSegmentInfoList.isEmpty()) {\n                        dtsCorrection = 0;\n                    } else {\n                        let lastSample = this._videoSegmentInfoList.getLastSampleBefore(originalDts);\n                        if (lastSample != null) {\n                            let distance = (originalDts - (lastSample.originalDts + lastSample.duration));\n                            if (distance <= 3) {\n                                distance = 0;\n                            }\n                            let expectedDts = lastSample.dts + lastSample.duration + distance;\n                            dtsCorrection = originalDts - expectedDts;\n                        } else {  // lastSample == null\n                            dtsCorrection = 0;\n                        }\n                    }\n                } else {\n                    dtsCorrection = originalDts - this._videoNextDts;\n                }\n            }\n\n            let dts = originalDts - dtsCorrection;\n            let cts = avcSample.cts;\n            let pts = dts + cts;\n\n            if (firstDts === -1) {\n                firstDts = dts;\n                firstPts = pts;\n            }\n\n            // fill mdat box\n            let sampleSize = 0;\n            while (avcSample.units.length) {\n                let unit = avcSample.units.shift();\n                let data = unit.data;\n                mdatbox.set(data, offset);\n                offset += data.byteLength;\n                sampleSize += data.byteLength;\n            }\n\n            let sampleDuration = 0;\n\n            if (samples.length >= 1) {\n                let nextDts = samples[0].dts - this._dtsBase - dtsCorrection;\n                sampleDuration = nextDts - dts;\n            } else { \n                if (mp4Samples.length >= 1) {  // lastest sample, use second last duration\n                    sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n                } else {  // the only one sample, use reference duration\n                    sampleDuration = this._videoMeta.refSampleDuration;\n                }\n            }\n\n            if (keyframe) {\n                let syncPoint = new SampleInfo(dts, pts, sampleDuration, avcSample.dts, true);\n                syncPoint.fileposition = avcSample.fileposition;\n                info.appendSyncPoint(syncPoint);\n            }\n\n            let mp4Sample = {\n                dts: dts,\n                pts: pts,\n                cts: cts,\n                size: sampleSize,\n                isKeyframe: keyframe,\n                duration: sampleDuration,\n                originalDts: originalDts,\n                flags: {\n                    isLeading: 0,\n                    dependsOn: keyframe ? 2 : 1,\n                    isDependedOn: keyframe ? 1 : 0,\n                    hasRedundancy: 0,\n                    isNonSync: keyframe ? 0 : 1\n                }\n            };\n\n            mp4Samples.push(mp4Sample);\n        }\n        let latest = mp4Samples[mp4Samples.length - 1];\n        lastDts = latest.dts + latest.duration;\n        lastPts = latest.pts + latest.duration;\n        this._videoNextDts = lastDts;\n\n        // fill media segment info & add to info list\n        info.beginDts = firstDts;\n        info.endDts = lastDts;\n        info.beginPts = firstPts;\n        info.endPts = lastPts;\n        info.originalBeginDts = mp4Samples[0].originalDts;\n        info.originalEndDts = latest.originalDts + latest.duration;\n        info.firstSample = new SampleInfo(mp4Samples[0].dts,\n                                          mp4Samples[0].pts,\n                                          mp4Samples[0].duration,\n                                          mp4Samples[0].originalDts,\n                                          mp4Samples[0].isKeyframe);\n        info.lastSample = new SampleInfo(latest.dts,\n                                         latest.pts,\n                                         latest.duration,\n                                         latest.originalDts,\n                                         latest.isKeyframe);\n        if (!this._isLive) {\n            this._videoSegmentInfoList.append(info);\n        }\n\n        track.samples = mp4Samples;\n        track.sequenceNumber++;\n\n        // workaround for chrome < 50: force first sample as a random access point\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412\n        if (this._forceFirstIDR) {\n            let flags = mp4Samples[0].flags;\n            flags.dependsOn = 2;\n            flags.isNonSync = 0;\n        }\n\n        let moofbox = MP4.moof(track, firstDts);\n        track.samples = [];\n        track.length = 0;\n        track.nbNalu = 0;\n\n        this._onMediaSegment('video', {\n            type: 'video',\n            data: this._mergeBoxes(moofbox, mdatbox).buffer,\n            sampleCount: mp4Samples.length,\n            info: info\n        });\n    }\n\n    _mergeBoxes(moof, mdat) {\n        let result = new Uint8Array(moof.byteLength + mdat.byteLength);\n        result.set(moof, 0);\n        result.set(mdat, moof.byteLength);\n        return result;\n    }\n\n}\n\nexport default MP4Remuxer;","let Browser = {};\n\nfunction detect() {\n    // modified from jquery-browser-plugin\n\n    let ua = self.navigator.userAgent.toLowerCase();\n\n    let match = /(edge)\\/([\\w.]+)/.exec(ua) ||\n        /(opr)[\\/]([\\w.]+)/.exec(ua) ||\n        /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(iemobile)[\\/]([\\w.]+)/.exec(ua) ||\n        /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(msie) ([\\w.]+)/.exec(ua) ||\n        ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua) ||\n        ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\n        [];\n\n    let platform_match = /(ipad)/.exec(ua) ||\n        /(ipod)/.exec(ua) ||\n        /(windows phone)/.exec(ua) ||\n        /(iphone)/.exec(ua) ||\n        /(kindle)/.exec(ua) ||\n        /(android)/.exec(ua) ||\n        /(windows)/.exec(ua) ||\n        /(mac)/.exec(ua) ||\n        /(linux)/.exec(ua) ||\n        /(cros)/.exec(ua) ||\n        [];\n\n    let matched = {\n        browser: match[5] || match[3] || match[1] || '',\n        version: match[2] || match[4] || '0',\n        majorVersion: match[4] || match[2] || '0',\n        platform: platform_match[0] || ''\n    };\n\n    let browser = {};\n    if (matched.browser) {\n        browser[matched.browser] = true;\n\n        let versionArray = matched.majorVersion.split('.');\n        browser.version = {\n            major: parseInt(matched.majorVersion, 10),\n            string: matched.version\n        };\n        if (versionArray.length > 1) {\n            browser.version.minor = parseInt(versionArray[1], 10);\n        }\n        if (versionArray.length > 2) {\n            browser.version.build = parseInt(versionArray[2], 10);\n        }\n    }\n\n    if (matched.platform) {\n        browser[matched.platform] = true;\n    }\n\n    if (browser.chrome || browser.opr || browser.safari) {\n        browser.webkit = true;\n    }\n\n    // MSIE. IE11 has 'rv' identifer\n    if (browser.rv || browser.iemobile) {\n        if (browser.rv) {\n            delete browser.rv;\n        }\n        let msie = 'msie';\n        matched.browser = msie;\n        browser[msie] = true;\n    }\n\n    // Microsoft Edge\n    if (browser.edge) {\n        delete browser.edge;\n        let msedge = 'msedge';\n        matched.browser = msedge;\n        browser[msedge] = true;\n    }\n\n    // Opera 15+\n    if (browser.opr) {\n        let opera = 'opera';\n        matched.browser = opera;\n        browser[opera] = true;\n    }\n\n    // Stock android browsers are marked as Safari\n    if (browser.safari && browser.android) {\n        let android = 'android';\n        matched.browser = android;\n        browser[android] = true;\n    }\n\n    browser.name = matched.browser;\n    browser.platform = matched.platform;\n\n    for (let key in Browser) {\n        if (Browser.hasOwnProperty(key)) {\n            delete Browser[key];\n        }\n    }\n    Object.assign(Browser, browser);\n}\n\ndetect();\n\nexport default Browser;","class BSearch {\n\n    static search(array, value, compare) {\n        if (array.length === 0) {\n            return 0;\n        }\n        if (compare(value, array[0]) < 0) {\n            return 0;\n        }\n        if (compare(value, array[array.length - 1]) >= 0) {\n            return array.length;\n        }\n\n        let mid = 0;\n        let low = 0;\n        let high = array.length;\n\n        while (low < high) {\n            mid = Math.floor((low + high) / 2);\n            let cmp = compare(array[mid], value);\n            if (cmp < 0) {\n                low = mid + 1;\n            } else if (cmp > 0) {\n                high = mid;\n            } else {\n                return mid;\n            }\n        }\n        return low;\n    }\n\n    static insert(array, value, compare) {\n        if (value == undefined) {\n            return -1;\n        }\n        if (compare == undefined) {\n            compare = BSearch.less;\n        }\n        let idx = BSearch.search(array, value, compare);\n        array.splice(idx, 0, value);\n        return idx;\n    }\n\n    static less(a, b) {\n        return a - b;\n    }\n\n    static greater(a, b) {\n        return b - a;\n    }\n\n}\n\nexport default BSearch;","export class RuntimeException {\n\n    constructor(message) {\n        this._message = message;\n    }\n\n    get name() {\n        return 'RuntimeException';\n    }\n\n    get message() {\n        return this._message;\n    }\n\n    toString() {\n        return this.name + ': ' + this.message;\n    }\n\n}\n\nexport class IllegalStateException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'IllegalStateException';\n    }\n\n}\n\nexport class InvalidArgumentException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'InvalidArgumentException';\n    }\n\n}\n\nexport class NotImplementedException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'NotImplementedException';\n    }\n\n}\n","class Log {\n\n    static e(tag, msg) {\n        if (!Log.ENABLE_ERROR) {\n            return;\n        }\n\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (console.error) {\n            console.error(str);\n        } else if (console.warn) {\n            console.warn(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static i(tag, msg) {\n        if (!Log.ENABLE_INFO) {\n            return;\n        }\n\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (console.info) {\n            console.info(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static w(tag, msg) {\n        if (!Log.ENABLE_WARN) {\n            return;\n        }\n\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (console.warn) {\n            console.warn(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static d(tag, msg) {\n        if (!Log.ENABLE_DEBUG) {\n            return;\n        }\n\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (console.debug) {\n            console.debug(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static v(tag, msg) {\n        if (!Log.ENABLE_VERBOSE) {\n            return;\n        }\n\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        console.log(`[${tag}] > ${msg}`);\n    }\n\n}\n\nLog.GLOBAL_TAG = 'flv.js';\nLog.FORCE_GLOBAL_TAG = false;\nLog.ENABLE_ERROR = true;\nLog.ENABLE_INFO = true;\nLog.ENABLE_WARN = true;\nLog.ENABLE_DEBUG = true;\nLog.ENABLE_VERBOSE = true;\n\nexport default Log;","import EventEmitter from 'events';\nimport Log from './logger.js';\n\nclass LoggingControl {\n\n    static get forceGlobalTag() {\n        return Log.FORCE_GLOBAL_TAG;\n    }\n\n    static set forceGlobalTag(enable) {\n        Log.FORCE_GLOBAL_TAG = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get globalTag() {\n        return Log.GLOBAL_TAG;\n    }\n\n    static set globalTag(tag) {\n        Log.GLOBAL_TAG = tag;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableAll() {\n        return Log.ENABLE_VERBOSE\n            && Log.ENABLE_DEBUG\n            && Log.ENABLE_INFO\n            && Log.ENABLE_WARN\n            && Log.ENABLE_ERROR;\n    }\n\n    static set enableAll(enable) {\n        Log.ENABLE_VERBOSE = enable;\n        Log.ENABLE_DEBUG = enable;\n        Log.ENABLE_INFO = enable;\n        Log.ENABLE_WARN = enable;\n        Log.ENABLE_ERROR = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableDebug() {\n        return Log.ENABLE_DEBUG;\n    }\n\n    static set enableDebug(enable) {\n        Log.ENABLE_DEBUG = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableVerbose() {\n        return Log.ENABLE_VERBOSE;\n    }\n\n    static set enableVerbose(enable) {\n        Log.ENABLE_VERBOSE = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableInfo() {\n        return Log.ENABLE_INFO;\n    }\n\n    static set enableInfo(enable) {\n        Log.ENABLE_INFO = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableWarn() {\n        return Log.ENABLE_WARN;\n    }\n\n    static set enableWarn(enable) {\n        Log.ENABLE_WARN = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableError() {\n        return Log.ENABLE_ERROR;\n    }\n\n    static set enableError(enable) {\n        Log.ENABLE_ERROR = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static getConfig() {\n        return {\n            globalTag: Log.GLOBAL_TAG,\n            forceGlobalTag: Log.FORCE_GLOBAL_TAG,\n            enableVerbose: Log.ENABLE_VERBOSE,\n            enableDebug: Log.ENABLE_DEBUG,\n            enableInfo: Log.ENABLE_INFO,\n            enableWarn: Log.ENABLE_WARN,\n            enableError: Log.ENABLE_ERROR\n        };\n    }\n\n    static applyConfig(config) {\n        Log.GLOBAL_TAG = config.globalTag;\n        Log.FORCE_GLOBAL_TAG = config.forceGlobalTag;\n        Log.ENABLE_VERBOSE = config.enableVerbose;\n        Log.ENABLE_DEBUG = config.enableDebug;\n        Log.ENABLE_INFO = config.enableInfo;\n        Log.ENABLE_WARN = config.enableWarn;\n        Log.ENABLE_ERROR = config.enableError;\n    }\n\n    static _notifyChange() {\n        let emitter = LoggingControl.emitter;\n\n        if (emitter.listenerCount('change') > 0) {\n            let config = LoggingControl.getConfig();\n            emitter.emit('change', config);\n        }\n    }\n\n    static registerListener(listener) {\n        LoggingControl.emitter.addListener('change', listener);\n    }\n\n    static removeListener(listener) {\n        LoggingControl.emitter.removeListener('change', listener);\n    }\n\n}\n\nLoggingControl.emitter = new EventEmitter();\n\nexport default LoggingControl;","class Polyfill {\n\n    static install() {\n        // ES6 Object.setPrototypeOf\n        Object.setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {\n            obj.__proto__ = proto;\n            return obj;\n        };\n\n        // ES6 Object.assign\n        Object.assign = Object.assign || function (target) {\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            let output = Object(target);\n            for (let i = 1; i < arguments.length; i++) {\n                let source = arguments[i];\n                if (source !== undefined && source !== null) {\n                    for (let key in source) {\n                        if (source.hasOwnProperty(key)) {\n                            output[key] = source[key];\n                        }\n                    }\n                }\n            }\n            return output;\n        };\n\n        // ES6 Promise (missing support in IE11)\n        if (typeof self.Promise !== 'function') {\n            // polyfill() will be called internally during module load\n            require('es6-promise');\n        }\n    }\n\n}\n\nPolyfill.install();\n\nexport default Polyfill;","// translate from C++ project libWinTF8 (https://github.com/m13253/libWinTF8)\n\nfunction checkContinuation(uint8array, start, checkLength) {\n    let array = uint8array;\n    if (start + checkLength < array.length) {\n        while (checkLength--) {\n            if ((array[++start] & 0xC0) !== 0x80)\n                return false;\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction decodeUTF8(uint8array) {\n    let out = [];\n    let input = uint8array;\n    let i = 0;\n    let length = uint8array.length;\n\n    while (i < length) {\n        if (input[i] < 0x80) {\n            out.push(String.fromCharCode(input[i]));\n            ++i;\n            continue;\n        } else if (input[i] < 0xC0) {\n            // fallthrough\n        } else if (input[i] < 0xE0) {\n            if (checkContinuation(input, i, 1)) {\n                let ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F);\n                if (ucs4 >= 0x80) {\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\n                    i += 2;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xF0) {\n            if (checkContinuation(input, i, 2)) {\n                let ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n                if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\n                    i += 3;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xF8) {\n            if (checkContinuation(input, i, 3)) {\n                let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12\n                         | (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F);\n                if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n                    ucs4 -= 0x10000;\n                    out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800));\n                    out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00));\n                    i += 4;\n                    continue;\n                }\n            }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n    }\n\n    return out.join('');\n}\n\nexport default decodeUTF8;"],"sourceRoot":"/source/"}